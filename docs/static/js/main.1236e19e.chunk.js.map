{"version":3,"sources":["redux/reducers/auth.ts","redux/reducers/rootReducer.ts","api/utils.ts/buildFormData.ts","api/axios.ts","redux/epics/messages.ts","api/app.ts","redux/epics/app.ts","api/mocks/productsList.ts","api/mocks/productSettings.ts","api/products.ts","redux/epics/utils.ts","redux/epics/products.ts","api/mocks/profiles/profilesList.ts","api/profiles.ts","api/mocks/app/appSettings.ts","api/settings.ts","redux/epics/profiles.ts","redux/epics/settings.ts","api/mocks/subscription/subscriptionList.ts","api/subscription.ts","redux/epics/subscription.ts","api/uninstall.ts","redux/epics/uninstall.ts","redux/epics/index.ts","redux/store.ts","api/types/uninstall.ts","components/Uninstall/Steps/Progress/Progress.tsx","components/utils/functions.ts","redux/reducers/profiles.ts","components/Uninstall/Start/Start.tsx","redux/selectors/auth.ts","components/Uninstall/Steps/Complition/Complition.tsx","components/Uninstall/Steps/Preparation/Preparation.tsx","components/Uninstall/Uninstall.tsx","api/types/common.ts","api/mocks/mock-env.ts","api/types/app.ts","redux/reducers/common/reducers.ts","components/layout/TopNavbar/messages.ts","components/layout/TopNavbar/TopNavbar.tsx","components/HOC/asyncComponent.tsx","components/layout/Confirmation/Confirmation.tsx","components/layout/ToggleMock.tsx","components/ui-kit/LoadingOverlay/LoadingOverlay.tsx","components/layout/GlobalLoadingOverlay.tsx","components/layout/AppToast/AppToast.tsx","components/layout/NoAvailableApp/NoAvailableApp.tsx","components/layout/AppContainer.tsx","components/utils/Link.tsx","App.tsx","index.tsx","redux/reducers/uninstall.ts","redux/reducers/settings.ts","redux/selectors/app.ts","redux/reducers/products.ts","Resources/index.ts","contexts/LocaleContext.tsx","api/types/index.ts","redux/reducers/subscription.ts","redux/reducers/app.ts"],"names":["search","URL","window","location","href","searchParams","initialState","apiKey","get","originalHeaders","Array","from","entries","headers","authSlice","createSlice","name","reducers","setHeaders","state","action","payload","actions","createRootReducer","history","combineReducers","router","connectRouter","app","products","profiles","auth","settings","subscription","uninstall","jsonToFormData","data","formData","FormData","buildFormData","parentKey","Date","File","append","Object","keys","forEach","key","axios","Axios","apiHost","__preorder_env__","REACT_APP_API_HOST","process","Error","endsWith","slice","baseURL","instance","create","interceptors","request","use","config","headersFromState","store","getState","reduce","acc","headerName","headerValue","common","includes","method","response","err","isAxiosError","message","code","status","dispatch","toggleConfirmation","content","warning","toggleToast","errorServerToastPayload","item","intl","formatMessage","id","defaultMessage","error","v","appApi","getAppState","url","isMocksMode","of","app_status","AppStatus","Active","Uninstalled","money_format","CurrencyShopifyFormat","AmountNoDecimals","currency_code","pipe","tap","s","console","log","delay","map","res","getAppStateEpic","actions$","ofType","exhaustMap","switchMap","getAppStateSuccess","push","stopPollAppState","catchError","getAppStateFailure","pollAppStateEpic","startPollAppState","timer","takeUntil","ProductsListMock","title","bodyHtml","totalInventory","images","src","productType","vendor","updatedAt","createdAt","variants","profile_id","price","price_shopify","sku","image","product_id","preorder_status","PreorderStatus","Activated","preorder_activating_start_date","preorder_activating_end_date","cursor","Disabled","Enabled","ProductSettingsMock","price_change_value","price_type","inventory_limit","button_text","button_message","productsApi","getProducts","params","URLSearchParams","filter","availiability","set","query","sort","dir","field","String","pageInfo","pageSize","pageDirection","toString","productsList","hasNextPage","hasPreviousPage","getProductSettings","productId","variantId","productSettings","updateProductsAndVariantsStatusBulk","post","updateProductsSettings","messages","defineMessages","setSettingsSuccess","bulkEnableWarning","confirmationControl","innerActions$","innerState$","innerActionEpic","state$","EMPTY","withConfirmation","confirmationState","afterConfirmation","source","handlePrimaryConfirmationAction","handleSecondaryConfirmationAction","take","innerAction","type","startWith","withAppLoading","handler","value","stopAppLoading","startAppLoading","mapWithToast","toast","mapResult","result","toggleBulkEnableWarning","duration","fetchProductsEpic","fetchProducts","fetchProductsWithQueryStart","setSort","setPage","filters","getProductsSuccess","getProductsFailure","fetchProductsWithQueryEpic","fetchProductsWithQuery","debounceTime","updateProductsAndVariantsStatusBulkEpic","enabled","items","variant","product","bulkEnableFailureByPlan","PageDirection","Same","setStatusEpic","setStatus","isVariant","variantsById","productsById","allSame","setStatusSuccessEpic","setSettingsEpic","setSettings","setSettingsFailure","fetchProductsSettingsEpic","fetchProductSettings","getProductSettingsSuccess","getProductSettingsFailure","bulkEnableEpic","bulkEnable","undefined","variantsItems","selectedProducts","variantsIds","productItems","productsIds","bulkEnableSuccess","bulkEnableFailure","startLoadingProducts","bulkEnableSuccessEpic","bulkEnableFailureByPlanEpic","primary","secondary","refetchOnSuccessEpic","assignProfileSuccess","assignProfileFailure","unassignProfileSuccess","unassignProfileFailure","ProfilesListMock","user_id","start_date","end_date","creted_at","updated_at","is_default","profilesApi","getProfiles","profilesList","updateProfile","bind","applyProfile","unassignProfile","getProfile","deleteProfile","profile","delete","AppSettingsMock","settingsApi","getSettings","appSettings","updateSettings","fetchProfilesEpic","fetchProfiles","fetchProfilesWithQuery","getProfilesSuccess","getProfilesFailure","assignProfileEpic","assignProfile","assignProfileModal","variant_id","unassignProfileEpic","startUnassignProfiles","updateProfileEpic","updateProfileSuccess","updateProfileFailure","updateProfileSuccessEpic","fetchProfileEpic","fetchProfile","fetchProfileSuccess","fetchProfileFailure","fetchProfilesWithQueryEpic","fetchProfilesWithQueryStart","getDefaultSettingsEpic","getDefaultSettingsForProfile","getSettingsSucces","getSettingsFailure","deleteProfileEpic","deleteProfileSuccess","stopLoadingProfiles","startLoadingProfiles","deleteProfileFailureEpic","deleteProfileFailure","deleteProfileSuccessEpic","getSettingsEpic","updateSettingsEpic","app_settings","design_settings","current","design","updateSettingsSuccess","updateSettingsFailure","SubscriptionMock","getSubscription","subscriptionList","getActiveSubscription","updateSubscription","getSubscriptionEpic","subscriptionApi","getSubscriptionSuccess","getSubscriptionFailure","getActiveSubscriptionEpic","getActiveSubscriptionSuccess","getActiveSubscriptionFailure","switchToPlanEpic","switchToPlan","withConfirmationFlag","callback","assign","getUninstallStatus","prepare_to_uninstall_status","UninstallStatus","NotInitiated","startUnistallPreparation","getUnistallStatusEpic","uninstallApi","getUninstallStatusSuccess","Progress","stopPollUninstallStatus","getUninstallStatusFailure","pollUnistallStatusEpic","startPollUninstallStatus","startUnistallPreparationEpic","startUninstallPreparation","startUninstallPreparationSuccess","startUninstallPreparationFailure","featuredEpics","appEpics","productsEpics","profilesEpics","settingsEpics","subscriptionEpics","uninstallEpics","flatMap","e","values","utilsEpics","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","createBrowserHistory","configureStore","reducer","middleware","routerMiddleware","thunk","run","text","useDispatch","React","useEffect","className","isDefaultVariant","getProductUrl","domain","getFormattedPriceString","fmt","parseFloat","toFixed","profilesById","profilesIds","loading","pageInfoInit","selectedProfiles","sortInit","profileModal","open","fetchProfilesReducer","filterValue","startLoading","profilesSlice","stopLoading","getProfilesStart","byId","loadingFailed","selectProfiles","openProfileModal","extraReducers","builder","addCase","Start","onNext","DisplayText","size","Button","onClick","authHeadersSelector","createSelector","sub","Complition","authHeaders","useSelector","handleOnClick","useCallback","host","shopName","split","Preparation","handleStart","Uninstall","statusSelector","useState","isPreparation","setPreparation","handleNextfromStart","step","PrepareToUninstallInProgress","SortField","SortDir","FilterStatus","FilterPriceType","FilterAvailiability","PriceSettingsMode","PriceType","Filter","Status","Availiability","Query","isProduction","mock","isMocksLocalMode","After","Asc","Title","PREFIX","buttonsDashboard","buttonsProducts","buttonsUninstall","buttonsSettings","buttonsProfiles","buttonsMore","buttonsDesign","buttonsProfile","buttonsKnowledgeBase","buttonsSubscription","TopNavBar","msg","formatDictionary","useFormat","onClickCreator","Layout","Section","Stack","external","connectedDisclosure","accessibilityLabel","onAction","asyncComponent","importComponent","component","then","cmp","setState","default","catch","C","this","props","Component","Confirmation","confirmationSelector","handlePrimary","handleSecondary","primaryAction","useMemo","secondaryActions","Modal","onClose","Icon","RiskMajor","color","ToggleMock","mockSelector","handleOnChange","toggleMock","Checkbox","label","onChange","checked","LoadingOverlay","children","GlobalLoadingOverlay","visible","isLoadingAppSelector","Spinner","AppToast","toastSelector","onDismiss","Toast","NoAvailableApp","DowngradeInProgress","ProductsList","ProfilesList","AppSettings","Subscription","Box","mod","AppContainer","appStatus","appStateError","errorSelector","Frame","Page","fullWidth","oneHalf","element","path","exact","to","IS_EXTERNAL_LINK_REGEX","Link","rest","ref","test","target","rel","i18n","en","App","LocaleContext","Consumer","locale","AppProvider","linkComponent","ReactDOM","render","StrictMode","document","getElementById","uninstallSlice","polling","selected","preorder","checkout","resetSettings","resetDesignSettings","area","setSelected","part","patchAppSettings","patchAreaDesignSettingsInState","style","areaInState","patchCheckoutDesignSettingsInState","selectAppState","confirmation","money_formatSelector","currency_shopify_formatSelector","currency_shopify_format","moneyFormatSelector","currencySymbolSelector","currency_symbol","timezoneOffsetSelector","timezone_offset","openedPopoverSelector","openedPopover","removeItemFromArray","array","index","indexOf","splice","startLoadingAndCollapse","unfoldedProductsIds","all","settingsModal","fetchProductsReducer","getPreorderEnableStatus","productsSlice","getProductsStart","productRest","allDisabled","allActivated","variantsInState","variantEnabled","productEnabled","add","Set","selectProducts","selectedProductsIds","length","selectVariants","stateVariantsIds","productVariants","idOfLastProduct","Before","idOfFirstProduct","setFilter","setFilterQuery","setFilterStatus","setFilterAvailiability","setUnfolded","unfolded","openAssignProfileModal","closeAssignProfileModal","openSettingsModal","obj","prop","p","o","defineProperty","injectnameofs","NumberParser","_group","_groupRegExp","_decimal","_decimalRegExp","_numeral","_numeralRegExp","_getIndex","parts","Intl","NumberFormat","formatToParts","useGrouping","numerals","format","reverse","Map","d","i","find","RegExp","join","replacedValue","trim","replace","Number","isNaN","enLocaleConfig","flatten","English","cache","createIntlCache","createIntl","createContext","setLocale","local","LocaleProvider","сontext","Provider","useIntl","formatDate","formatDictionaryCb","dic","moneyFormat","moneyFormatMessage","defineMessage","twoFractionDigitsOpts","minimumFractionDigits","maximumFractionDigits","noFractionDigitsOpts","getIntlOptions","Amount","options","AmountWithCommaSeparator","AmountNoDecimalsWithCommaSeparator","AmountWithApostropheSeparator","formatCurrencyValue","amount","formatNumber","formatMoney","getPriceString","subscriptionSlice","active","terms","statePolling","appSlice","match","exec","getSymbolFromCurrency","openPopover","closePopover","addMatcher"],"mappings":"6/DAIMA,EADM,IAAIC,IAAIC,OAAOC,SAASC,MACjBC,aAEbC,EAAe,CACjBC,OAAQP,EAAOQ,IAAI,WACnBC,gBAAiBC,MAAMC,KAAKX,EAAOY,WACnCC,QAAS,CACL,mBAAoBb,EAAOQ,IAAI,QAC/B,aAAcR,EAAOQ,IAAI,WACzB,cAAeR,EAAOQ,IAAI,aAC1B,gBAAiBR,EAAOQ,IAAI,QAC5B,gBAAiBR,EAAOQ,IAAI,UAC5B,aAAcR,EAAOQ,IAAI,uBACzB,cAAeR,EAAOQ,IAAI,UAmC5BM,EAAYC,YAAY,CAC1BC,KAAM,OACNV,eACAW,SAAU,CACNC,WADM,SACKC,EAAOC,GACdD,EAAMN,QAAUO,EAAOC,YAOpBP,GAFeA,EAAUQ,QAAzBJ,WAEAJ,EAAf,S,+BCjCeS,EAbW,SAACC,GAAD,OACtBC,YAAgB,CACZC,OAAQC,YAAcH,GACtBI,QACAC,aACAC,aACAC,OACAC,aACAC,iBACAC,iB,oKCHD,SAASC,EAAeC,GAC3B,IAAMC,EAAW,IAAIC,SAIrB,OA1BG,SAASC,EAAcF,EAAoBD,EAAMI,IAEhDJ,GACgB,kBAATA,GACLA,aAAgBK,MAChBL,aAAgBM,KAYlBL,EAASM,OAAOH,EAAYJ,GAV5BQ,OAAOC,KAAKT,GAAMU,SAAQ,SAACC,GACvBR,EACIF,EACAD,EAAKW,GACLP,EAAS,UAAMA,EAAN,YAAmBO,EAAnB,KAA4BA,MAajDR,CAAcF,EAAUD,GAEjBC,ECpBX,IAAMW,E,OAAQC,EAEVC,GACgB,QAAhB,EAAAC,wBAAA,eAAkBC,qBAAsBC,iCAC5C,IAAKH,EACD,MAAM,IAAII,MACN,8DAIJJ,EAAQK,SAAS,OACjBL,EAAUA,EAAQM,MAAM,GAAI,IAGhC,IAAMC,EAAUP,EAAU,OAEpBQ,EAAWV,EAAMW,OAAO,CAC1BF,YAGJC,EAASE,aAAaC,QAAQC,KAAI,SAAUC,GACxC,IAAMC,EAAmBC,GAAMC,WAAWnC,KAAKlB,QACzCA,EAAU+B,OAAOC,KAAKmB,GAAkBG,QAAO,SAACC,EAAKC,GACvD,IAAMC,EAAcN,EAAiBK,GAIrC,OAHIC,IACAF,EAAIC,GAAcC,GAEfF,IACR,IAGHL,EAAOlD,QAAQ0D,OAAf,2BAA6BR,EAAOlD,QAAQ0D,QAAW1D,GAiBvD,MAfqD,CACjD,OACA,OACA,MACA,MACA,QACA,SAGa2D,SAAST,EAAOU,UAC7BV,EAAO3B,KAAOD,EAAe4B,EAAO3B,MAEpC2B,EAAOlD,QAAQ,gBAAkB,uBAG9BkD,KAGXL,EAASE,aAAac,SAASZ,KAC3B,SAACY,GAAD,OAAcA,KACd,SAACC,GACG,GAAIA,EAAIC,aAAc,CAAC,IACXC,EAA4BF,EAA5BE,QAASC,EAAmBH,EAAnBG,KAAMJ,EAAaC,EAAbD,SACjBtC,EAAI,OAAGsC,QAAH,IAAGA,OAAH,EAAGA,EAAUtC,KACjB2C,EAAM,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAUK,OAEzB,GAAI,CAAC,KAAKP,SAAN,OAAeO,QAAf,IAAeA,IAAU,KASzB,MARAd,GAAMe,SACFC,YAAmB,CAEfC,QAAO,OAAE9C,QAAF,IAAEA,OAAF,EAAEA,EAAMyC,QACfvD,SAAS,EACT6D,SAAS,KAGX,CAAEN,UAASC,OAAM1C,OAAM2C,UAIjC,MADAd,GAAMe,SAASI,YAAYC,IACrB,CAAER,UAASC,OAAM1C,OAAM2C,UAEjC,OAAOJ,KAaf,IC3FqBW,ED2FfD,EAHK,CAAEH,QALOK,IAAKC,cAAc,CAC/BC,GAAI,kBACJC,eAAgB,iBAGFC,OAAO,GAMdjC,I,gBEvFXkC,EAAI,EAsCOC,GAJA,CACXC,YAlCgB,WAChB,IAAMC,EAAG,UAND,QAQR,OAAIC,cAgBOC,YAAG,CAENC,WAAYN,IAAM,EAAIO,IAAUC,OAASD,IAAUE,YACnDC,aAAa,QAAD,OAAUC,IAAsBC,iBAAhC,MACZC,cAAe,QACDC,KACdC,aAAI,SAACC,GAAD,OAAOC,QAAQC,IAAI,SAAUF,MACjCG,YAAM,MAIP/D,EAAMxC,IAAiBuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,WCnBhD8E,GAAkB,SAACC,GAAD,OAC3BA,EAAST,KACLU,YAAYtB,KACZuB,aAAW,WACP,OAAOxB,GAAOC,cAAcY,KACxBY,aAAU,SAAC5C,GACP,IAAMpD,EAAyB,CAC3BiG,YAAmB7C,IAUvB,MAPI,CAACyB,IAAUC,OAAQD,IAAUE,aAAa7B,SACtCE,EAASwB,aAGb5E,EAAQkG,KAAKC,eAGV9G,YAAKW,MAEhBoG,aAAW,SAAC/C,GAAD,OACPhE,YAAK,CAACgH,YAAmBhD,GAAM8C,yBAMtCG,GAAmB,SAACT,GAAD,OAC5BA,EAAST,KACLU,YAAYS,KACZP,aAAU,kBACNQ,YAAM,EAAG,KAAMpB,KACXqB,YACIZ,EAASC,OAAOK,UAK5BT,aAAI,kBAAMlB,mB,kBCwaHkC,GAnewB,CACnC,CACIvC,GAAI,gBACJwC,MAAO,oBACPC,SAAU,yBACVC,eAAgB,EAChBC,OAAQ,CACJ,CACI3C,GAAI,4CACJ4C,IACI,sFAGZC,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MAGZC,MAAO,WACPC,cAAe,KACfC,IAAK,OACLb,MACI,uKACJc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeC,UAChCC,+BAAgC,uBAChCC,6BAA8B,yBAGtCC,OACI,2EACJL,gBAAiBC,kBAAeC,UAChCC,+BAAgC,uBAChCC,6BAA8B,KAC9BV,WAAY,OAEhB,CACIlD,GAAI,gBACJkD,WAAY,MACZV,MAAO,kBACPC,SAAU,cACVC,eAAgB,GAChBC,OAAQ,CACJ,CACI3C,GAAI,4CACJ4C,IACI,sFAGZC,YAAa,KACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,WACPC,cAAe,WACfC,IAAK,OACLb,MAAO,MACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeC,UAChCC,+BAAgC,uBAChCC,6BAA8B,wBAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,WACPC,cAAe,WACfC,IAAK,OACLb,MAAO,UACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeC,UAChCC,+BAAgC,uBAChCC,6BAA8B,wBAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,OACLb,MAAO,UACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeC,UAChCC,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,2BAChCC,6BAA8B,4BAElC,CACI5D,GAAI,gBACJkD,WAAY,KACZV,MAAO,YACPC,SAAU,cACVC,eAAgB,EAChBC,OAAQ,CACJ,CACI3C,GAAI,4CACJ4C,IACI,sFAGZC,YAAa,KACbC,OAAQ,mBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,WACPC,cAAe,WACfC,IAAK,OACLb,MAAO,KACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeM,QAChCJ,+BAAgC,KAChCC,6BAA8B,MAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,KACZC,MAAO,WACPC,cAAe,WACfC,IAAK,OACLb,MAAO,KACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeM,QAChCJ,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,WACPC,SAAU,cACVC,eAAgB,EAChBC,OAAQ,CACJ,CACI3C,GAAI,GACJ4C,IACI,kFAGZC,YAAa,GACbC,OAAQ,mBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,OACLb,MAAO,gBACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeM,QAChCJ,+BAAgC,uBAChCC,6BAA8B,wBAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,QACPC,SAAU,qBACVC,eAAgB,EAChBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,QACLb,MAAO,IACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeM,QAChCJ,+BAAgC,KAChCC,6BAA8B,MAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,QACLb,MAAO,IACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeC,UAChCC,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeC,UAChCC,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,sBACPC,SAAU,2CACVC,eAAgB,EAChBC,OAAQ,CACJ,CACI3C,GAAI,4CACJ4C,IACI,2HAGZC,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,GACLb,MAAO,MACPc,MAAO,CACHtD,GAAI,4CACJ4C,IACI,sHAERW,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,GACLb,MAAO,QACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,WACPC,SAAU,4CACVC,eAAgB,GAChBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,MACLb,MAAO,gBACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,SACPC,SAAU,iBACVC,eAAgB,EAChBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,UACLb,MAAO,gBACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,UACPC,SAAU,oBACVC,gBAAiB,EACjBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,QACPC,cAAe,QACfC,IAAK,SACLb,MAAO,QACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,QACPC,cAAe,QACfC,IAAK,SACLb,MAAO,MACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJkD,WAAY,MACZV,MAAO,QACPC,SAAU,OACVC,eAAgB,EAChBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,iBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,OACLb,MAAO,IACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,eAAkB,CACd5D,GAAI,iBACJkD,WAAY,MACZC,MAAO,UACPC,cAAe,UACfC,IAAK,OACLb,MAAO,IACPc,MAAO,KACPC,WAAY,gBACZC,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,OAGtCC,OACI,2EACJL,gBAAiBC,kBAAeK,SAChCH,+BAAgC,KAChCC,6BAA8B,MAElC,CACI5D,GAAI,gBACJwC,MAAO,6BACPC,SAAU,6BACVC,eAAgB,EAChBC,OAAQ,GACRE,YAAa,GACbC,OAAQ,mBACRC,UAAW,uBACXC,UAAW,uBACXC,SAAU,CACN,eAAkB,CACdjD,GAAI,iBACJmD,MAAO,SACPE,IAAK,GACLb,MAAO,gBACPc,MAAO,KACPC,WAAY,gBACZH,cAAe,SACfI,gBAAiB,YACjBG,+BAAgC,KAChCC,6BAA8B,KAC9BV,WAAY,OAGpBW,OACI,+FACJL,gBAAiB,UACjBG,+BAAgC,KAChCC,6BAA8B,KAC9BV,WAAY,OC9bLc,GAhCiC,CAI5CC,mBAAoB,cAIpBC,WAAY,kBAIZC,gBAAiB,IAIjBC,YAAa,OAIbC,eAAgB,WCgLLC,GAPK,CAChBC,YA/JgB,SAChBC,GAEA,IAAMlE,EAAG,UAlBE,aAmBL1F,EAAe,IAAI6J,gBACrBD,EAAOE,OAAOC,eACd/J,EAAagK,IAAI,SAAUJ,EAAOE,OAAOC,eAGzCH,EAAOE,OAAOG,OACdjK,EAAagK,IAAI,QAASJ,EAAOE,OAAOG,OAG5CjK,EAAagK,IAAI,WAAYJ,EAAOM,KAAKC,KACzCnK,EAAagK,IAAI,aAAcJ,EAAOM,KAAKE,OAC3CpK,EAAagK,IAAI,WAAYK,OAAOT,EAAOU,SAASC,WACpDvK,EAAagK,IAAI,iBAAkBJ,EAAOU,SAASE,eAC/CZ,EAAOU,SAASrB,QAChBjJ,EAAagK,IAAI,SAAUJ,EAAOU,SAASrB,QAE/C,IAAMtJ,EAASK,EAAayK,WAE5B,OAAI9E,cACOC,YAAG,CACNpE,SAAU,CAUNkJ,GAAa,IAEjBJ,SAAU,CACNK,aAAa,EACbC,iBAAiB,KAEtBvE,KAAKK,YAAM,MAGX/D,EACFxC,IAAsBuF,EAAM,IAAM/F,EAAO8K,YACzCpE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAmH3B8I,mBA3DuB,SACvBjB,GAEA,IAAMlE,EAAG,UAvHE,YAuHF,qBAAyBkE,EAAOkB,WACnC9K,EAAe,IAAI6J,gBACrBD,EAAOmB,WACP/K,EAAagK,IAAI,aAAcJ,EAAOmB,WAE1C,IAAMpL,EAASK,EAAayK,WAE5B,OAAI9E,cACOC,YAAGoF,IAAiB3E,KACvBK,YAAM,MAOP/D,EACFxC,IACGuF,GAAOkE,EAAOmB,UAAY,IAAMpL,EAAO8K,WAAa,KAEvDpE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAqC3BkJ,oCAlGwC,SACxCrB,GAEA,IAAMlE,EAAG,UAjFE,YAiFF,WACY,IAAImE,gBAEzB,OAAIlE,cACOC,YACK,CACJpE,SAAS,GAAD,mBACDkJ,IADC,YAEDA,IAFC,YAGDA,IAHC,YAIDA,IAJC,YAKDA,IALC,YAMDA,IANC,YAODA,IAPC,YAQDA,KAEPJ,SAAU,CACNK,aAAa,EACbC,iBAAiB,KAG3BvE,KAAKK,YAAM,MAIV/D,EACFuI,KAAuBxF,EAAKkE,GAC5BvD,KAAKM,aAAI,SAACC,GAAD,OAAwB,MAAfA,EAAIlC,YAqE3ByG,uBAnC2B,SAC3BvB,GAEA,IAAMlE,EAAG,UAjJE,YAiJF,aACY,IAAImE,gBAEzB,OAAIlE,cACOC,YAAG,CACNpE,SAAS,GAAD,mBACDkJ,IADC,YAEDA,IAFC,YAGDA,IAHC,YAIDA,IAJC,YAKDA,IALC,YAMDA,IANC,YAODA,IAPC,YAQDA,KAEPJ,SAAU,CACNK,aAAa,EACbC,iBAAiB,KAEtBvE,KAAKK,YAAM,MAIX/D,EACFuI,KAAuBxF,EAAKkE,GAC5BvD,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,W,0DL1KhBqJ,GAZEC,aAAe,CAC5BC,mBAAoB,CAChBlG,GAAG,GAAD,OANK,QAML,uBACFC,gBALaJ,EAKe,WALhB,UAAqBA,EAArB,iCAOhBsG,kBAAmB,CACfnG,GAAG,GAAD,OAVK,QAUL,sBACFC,eACI,iIMINmG,GAAuB,WAEzB,IAAIC,EACAC,EA+GJ,MAAO,CAAEC,gBA7Ge,SACpB7E,EACA8E,GAKA,OAFAH,EAAgB3E,EAChB4E,EAAcE,EACPC,MAsGeC,iBAnGD,SACrBC,EAGAC,GAJqB,OAUpB,SAACC,GACF,OAAOA,EAAO5F,KACVY,aAAU,SAAClG,GAAD,OACN0K,EACKpF,KACGU,YACImF,IACAC,KAEJC,aAAK,GACLnF,aAAU,SAACoF,GACP,OACKL,GACDK,EAAYC,OACZH,IAAkC1B,WAK/BuB,EAAkBjL,GAHd6E,YAAG,CAAE0G,KAAM,aAM7BjG,KACGkG,aAAU3H,YAAmBmH,EAAkBhL,YAkEvByL,eA5DrB,SACnBC,GADmB,OAQlB,SAACR,GACF,OAAOA,EAAO5F,KACVY,aAAU,SAAClG,GAAD,OACN0L,EAAQ1L,EAAQ2K,EAAYgB,OAAOrG,KAC/BY,aAAU,SAAClG,GAAD,OACNT,YAAK,CAACS,EAAQ4L,mBAElBJ,aAAUK,sBA6CkCC,aAvCvC,SACjBC,EAQAC,GATiB,OAUjB,SAOEd,GACF,IAAIpH,EACA7D,EASJ,MARI,YAAa8L,GACbjI,EAAUK,IAAKC,cAAc2H,EAAMjI,SACnC7D,EAAO,2BAAQ8L,GAAR,IAAejI,cAEtBA,EAAUK,IAAKC,cAAc2H,GAC7B9L,EAAU,CAAE6D,YAGToH,EAAO5F,KACVY,aAAU,SAAC+F,GAAD,OAKN1M,WAJA,CAIK,CAACyM,EAAUC,GAASjI,YAAY/D,YA7GxB,GAqHhBiM,GAA0B,kBACnClI,YAAY,CACRF,QAASK,IAAKC,cAAciG,GAASG,mBACrC2B,SAAU,OAIdvB,GAIAH,GAJAG,gBACAG,GAGAN,GAHAM,iBACAU,GAEAhB,GAFAgB,eACAK,GACArB,GADAqB,aCjGSM,GAAoB,SAC7BrG,EACA8E,GAF6B,OAI7B9E,EAAST,KACLU,YACIqG,IACAC,IACAC,IACAC,KAEJtG,aAAU,WACN,IAAMnG,EAAQ8K,EAAOc,MAAMlL,SACrBsI,EAAShJ,EAAM0M,QACflD,EAAQ,eAAQxJ,EAAMwJ,UACtBJ,EAAOpJ,EAAMoJ,KAEnB,OAAOR,GACFC,YAAY,CACTG,SACAQ,WACAJ,SAEH7D,KACGM,aAAI,SAACnF,GAAD,OAAciM,YAAmBjM,MACrC6F,aAAW,SAAC/C,GAAD,OAASsB,YAAG8H,YAAmBpJ,aAKjDqJ,GAA6B,SAAC7G,GAAD,OACtCA,EAAST,KACLU,YAAO6G,KACPC,aAAa,KACblH,YAAI0G,OAGCS,GAA0C,SACnDhH,EACA8E,GAFmD,OAInD9E,EAAST,KACLU,YAAOkE,KACPhE,aACI,SACIlG,GACE,IAAD,IACuCA,EAAOC,QAAvCQ,EADP,EACOA,SAAU6G,EADjB,EACiBA,SAEZ3D,EAHL,EAC2BqJ,QAGtBlF,kBAAeM,QACfN,kBAAeK,SAEf8E,EAAyC,GAP9C,eASqB3F,GATrB,IASD,2BAAgC,CAAC,IAAtB4F,EAAqB,QAC5BD,EAAM7G,KAAK,CACP2D,UAAWmD,EAAQtF,WACnBoC,UAAWkD,EAAQ7I,MAZ1B,mDAgBqB5D,GAhBrB,IAgBD,2BAAgC,CAAC,IAAtB0M,EAAqB,QAC5BF,EAAM7G,KAAK,CACP2D,UAAWoD,EAAQ9I,MAlB1B,8BAsBD,OAAOsE,GACFuB,oCAAoC,CAAE+C,QAAOtJ,WAC7C2B,KACGY,aAAU,SAAC+F,GAAD,OACK,IAAXA,EACM1M,YAAK,CACH6N,cACAf,gBAEFxH,YAAG2H,YAAQa,iBAAcC,UAEnChH,aAAW,kBAAMzB,YAAGwH,wBAM/BkB,GAAgB,SACzBxH,EACA8E,GAFyB,OAIzB9E,EAAST,KACLU,YAAOwH,KACP5H,aAAI,SAAC5F,GAA0C,IAAD,EACPA,EAAOC,QAAlCoE,EADkC,EAClCA,GAAI2I,EAD8B,EAC9BA,QAASS,EADqB,EACrBA,UACf1N,EAAQ8K,EAAOc,MAAMlL,SAMrBR,EAAmB,CACrB+M,UACAvM,SAAU,GACV6G,SAAU,IAGd,GAAImG,EAAW,CACX,IAAMP,EAAUnN,EAAM2N,aAAarJ,GACnCpE,EAAQqH,SAASlB,KAAK8G,GAEtB,IAAMC,EAAUpN,EAAM4N,aAAaT,EAAQtF,YAEvCgG,GAAU,EACdT,EAAQ7F,SAAS5F,SAAQ,SAACsI,GACtB,GAAI3F,IAAO2F,EAAW,CAClB,IAAMkD,EAAUnN,EAAM2N,aAAa1D,GACnC4D,EAAUA,GAAWV,EAAQF,UAAYA,OAK5CY,GAAWZ,IACVY,IAAYZ,GAAWG,EAAQH,UAEjC/M,EAAQQ,SAAS2F,KAAK+G,OAEvB,CAAC,IAAD,EACGA,EAAUpN,EAAM4N,aAAatJ,GACnCpE,EAAQQ,SAAS2F,KAAK+G,IAEtB,EAAAlN,EAAQqH,UAASlB,KAAjB,oBACO+G,EAAQ7F,SAAS1B,KAAI,SAACvB,GAAD,OAAQtE,EAAM2N,aAAarJ,QAS3D,OAAO6F,YAAoCjK,QAI1C4N,GAAuB,SAAC9H,GAAD,OAChCA,EAAST,KACLU,YAAOuE,KACP3E,aAAI,WACA,OAAO4G,YAAQa,iBAAcC,WAI5BQ,GAAkB,SAC3B/H,EACA8E,GAF2B,OAI3B9E,EAAST,KACLU,YAAO+H,KACP7H,aAAU,YAAkD,IAA/CjG,EAA8C,EAA9CA,QACHF,EAAQ8K,EAAOc,MAAMlL,SACrByD,EAAOjE,EAAQgN,MAAM,GAE3B,IAAK/I,EAAK8F,UAAW,CAAC,IAAD,EACX1C,EAAiCvH,EAAM4N,aACzCzJ,EAAK6F,WACPzC,SAAS1B,KAAI,SAACoE,GAAD,MAAgB,CAC3BD,UAAW7F,EAAK6F,UAChBC,iBAEJ,EAAA/J,EAAQgN,OAAM7G,KAAd,oBAAsBkB,IAG1B,OAAOqB,GAAYyB,uBAAuBnK,GAASqF,KAC/CM,aAAI,kBAAM2E,aAAmB,MAI7BjE,aAAW,SAAC/C,GAAD,OAASsB,YAAGmJ,YAAmBzK,aAK7C0K,GAA4B,SAAClI,GAAD,OACrCA,EAAST,KACLU,YAAYkI,KACZhI,aAAU,SAAClG,GACP,OAAO2I,GAAYmB,mBAAmB9J,EAAOC,SAASqF,KAClDM,aAAI,SAAChF,GAAD,OAAcuN,YAA0BvN,MAC5C0F,aAAW,SAAC/C,GAAD,OAASsB,YAAGuJ,YAA0B7K,aAKpD8K,GAAiB,SAC1BtI,EACA8E,GAF0B,OAI1B9E,EAAST,KACLU,YAAOsI,KACPvD,IACI,SAAC/K,GAAD,MAAa,CACT8D,QAAQ,4BAAD,YAAiDyK,IAAnBvO,EAAOC,QAAwB,SAAW,UAAxE,0BAGX,SAACD,GACG,IAAMD,EAAQ8K,EAAOc,MAAMlL,SACrB+N,EAAgBzO,EAAM0O,iBAAiBC,YAAY9I,KACrD,SAACvB,GAAD,MAAS,CACL0F,UAAWhK,EAAM2N,aAAarJ,GAAIuD,WAClCoC,UAAW3F,MAIbsK,EAAe5O,EAAM0O,iBAAiBG,YAAYhJ,KACpD,SAACmE,GAAD,MAAgB,CAAEA,gBAGhBkD,EAAK,sBAAO0B,GAAP,YAAwBH,IAE7B7K,OACiB4K,IAAnBvO,EAAOC,QACD6H,kBAAeM,QACfN,kBAAeK,SAEzB,OAAOQ,GACFuB,oCAAoC,CACjC+C,QACAtJ,WAEH2B,KACGY,aAAU,SAAC+F,GAAD,OACK,IAAXA,EACM1M,YAAK,CACH6N,cACApJ,cACAqI,gBAEFxH,YAAGgK,aAAkB,OAE/BvI,aAAW,SAAC/C,GAAD,OAASsB,YAAGiK,YAAkBvL,OACzCiI,aACIuD,cACA7C,YAOf8C,GAAwB,SACjCjJ,EACA8E,GAFiC,OAIjC9E,EAAST,KACLU,YAAO6I,KAQPjJ,aAAI,SAAC5F,GACD,MAAO,CAAEuL,KAAM,aAId0D,GAA8B,SACvClJ,EACA8E,GAFuC,OAIvC9E,EAAST,KACLU,YAAOoH,KACPrC,IACI,iBAAO,CACHjH,QAAQ,sFACR5D,QAAS,CACLgP,QAAS,UACTC,UAAW,yBAGnB,SAACnP,GACG,OAAO6E,YAAGuB,aAAK,uBAelBgJ,GAAuB,SAChCrJ,EACA8E,GAFgC,OAIhC9E,EAAST,KACLU,YACI6I,IACAQ,IACAC,IACAC,IACAC,KAEJ5J,aAAI,SAAC5F,GACD,OAAOqM,mB,mBChTJoD,GAjDT,CACE,CACIpL,GAAI,MACJqL,QAAS,GACT9P,KAAM,cACN2I,WAAY,mBACZD,mBAAoB,OACpBE,gBAAiB,IACjBC,YAAa,qBACbC,eAAgB,qBAChBiH,WAAY,uBACZC,SAAU,uBACVC,UAAW,GACXC,WAAY,GACZC,YAAY,GAEhB,CACI1L,GAAI,MACJqL,QAAS,GACT9P,KAAM,cACN2I,WAAY,WACZD,mBAAoB,QAEpBE,gBAAiB,IACjBC,YAAa,GACbC,eAAgB,GAChBiH,WAAY,uBACZC,SAAU,uBACVC,UAAW,GACXC,WAAY,GACZC,YAAY,GAEhB,CACI1L,GAAI,MACJqL,QAAS,GACT9P,KAAM,cACN2I,WAAY,mBACZD,mBAAoB,MACpBE,gBAAiB,IACjBC,YAAa,GACbC,eAAgB,GAChBiH,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,YAAY,ICuFTC,GATK,CAChBC,YArDgB,SAACpH,GACjB,IAAMlE,EAAG,UAzDE,aA0DL1F,EAAe,IAAI6J,gBAErBD,EAAOE,OAAOG,OACdjK,EAAagK,IAAI,OAAQJ,EAAOE,OAAOG,OAIvCL,EAAOE,OAAOG,QACdjK,EAAagK,IAAI,WAAYJ,EAAOM,KAAKC,KACzCnK,EAAagK,IAAI,aAAcJ,EAAOM,KAAKE,QAG3CR,EAAOE,OAAOG,QACdjK,EAAagK,IAAI,WAAYK,OAAOT,EAAOU,SAASC,WACpDvK,EAAagK,IAAI,iBAAkBJ,EAAOU,SAASE,eACnDxK,EAAagK,IAAI,SAAUJ,EAAOU,SAASrB,SAG/C,IAAMtJ,EAASK,EAAayK,WAE5B,OAAI9E,cAQOC,YAAGqL,IAAc5K,KAAKK,YAAM,MAGhC/D,EAAMxC,IAAsBuF,EAAM,IAAM/F,EAAO8K,YAAYpE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAqBxFmP,cAhGkB,SAACtH,GAAgD,IAC3DxE,EAAgBwE,EAAhBxE,GAAOrD,EADmD,aAC1C6H,EAD0C,QAE9DlE,EAAG,UAhBI,aAiBLtB,EAASzB,EAAMuI,KAAKiG,KAAKxO,GAO/B,OALIyC,IACAM,GAAG,WAAQN,IAIRhB,EAAmBsB,EAAK3D,GAAMsE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAuF3DqP,aAhFiB,SAACxH,GAAyD,IACnExE,EAAgBwE,EAAhBxE,GAAOrD,EAD2D,aAClD6H,EADkD,QAEpElE,EAAG,UAjCE,YAiCF,YAAgBN,EAAhB,UAET,OAAIO,cACOC,YAAGqL,GAAa,IAAI5K,KAAKK,YAAM,MAInC/D,EAAMuI,KAAiBxF,EAAK3D,GAAMsE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAwE/DsP,gBArEoB,SACpBzH,GAEwBA,EAAhBxE,GADkB,IACXrD,EADU,aACD6H,EADC,QAEnBlE,EAAG,UA/CE,YA+CF,aAMT,OAAO/C,EAAMuI,KAAiBxF,EAAK3D,GAAMsE,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UA4D/DuP,WArBe,SAAClM,GAChB,IAAMM,EAAG,UA7FE,YA6FF,YAAgBN,GAEzB,OAAIO,cACOC,YAAGqL,GAAa,IAAI5K,KAAKK,YAAM,MAGnC/D,EAAMxC,IAAqBuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAe7DwP,cAZkB,SAACC,GACnB,IAAM9L,EAAG,UAvGE,YAuGF,YAAgB8L,EAAQpM,IAEjC,OAAOzC,EAAM8O,OAAmB/L,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,WCyGhD2P,GAjOyB,CACpC,gBAAmB,CAIf,QAAW,CACP,SAAY,CACR,OAAU,CACN,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,MAAS,CACL,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,QAAW,CACP,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,IACjB,aAAgB,IAChB,YAAe,IACf,eAAkB,IAClB,cAAiB,IACjB,aAAgB,MAGxB,SAAY,CACR,OAAU,CACN,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,MAAS,CACL,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,QAAW,CACP,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,IACjB,aAAgB,IAChB,YAAe,IACf,eAAkB,IAClB,cAAiB,IACjB,aAAgB,OAI5B,QAAW,CACP,SAAY,CACR,OAAU,CACN,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,MAAS,CACL,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,QAAW,CACP,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,IACjB,aAAgB,IAChB,YAAe,IACf,eAAkB,IAClB,cAAiB,IACjB,aAAgB,MAGxB,SAAY,CACR,OAAU,CACN,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,MAAS,CACL,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,MACjB,aAAgB,MAChB,YAAe,OACf,eAAkB,OAClB,cAAiB,OACjB,aAAgB,QAEpB,QAAW,CACP,MAAS,UACT,iBAAoB,UACpB,aAAgB,UAChB,YAAe,UACf,UAAa,OACb,YAAe,SACf,gBAAmB,OACnB,WAAc,SACd,cAAiB,IACjB,aAAgB,IAChB,YAAe,IACf,eAAkB,IAClB,cAAiB,IACjB,aAAgB,QAKhC,aAAgB,CACZ,QAAW,IACX,MAAS,SACT,mBAAsB,SACtB,WAAc,mBACd,WAAc,8BACd,SAAY,8BACZ,gBAAmB,KACnB,YAAe,uBACf,eAAkB,0BAClB,WAAc,8BACd,WAAc,gCC3LPC,GALK,CAChBC,YArBgB,WAChB,IAAMlM,EAAG,UAHE,aAKX,OAAIC,cACOC,YAAGiM,IAAaxL,KAAKK,YAAM,MAG/B/D,EAAMxC,IAAoBuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAe5D+P,eAZmB,SAACnQ,GACpB,IAAM+D,EAAG,UAbE,aAeX,OAAIC,cACOC,aAAG,GAAMS,KAAKK,YAAM,MAGxB/D,EAAMuI,KAAcxF,EAAK/D,GAAU0E,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,WCUvDgQ,GAAoB,SAC7BjL,EACA8E,GAF6B,OAI7B9E,EAAST,KACLU,YAAYiL,IAAeC,KAC3BhL,aAAU,WACN,IAAMnG,EAAQ8K,EAAOc,MAAMjL,SACrBqI,EAAShJ,EAAM0M,QACflD,EAAQ,eAAQxJ,EAAMwJ,UACtBJ,EAAOpJ,EAAMoJ,KAiBnB,OAAO6G,GACFC,YAAY,CACTlH,SACAQ,WACAJ,SAEH7D,KACGM,aAAI,SAAClF,GAAD,OAAcyQ,YAAmBzQ,MACrC4F,aAAW,SAAC/C,GAAD,OAASsB,YAAGuM,YAAmB7N,aAejD8N,GAAoB,SAC7BtL,EACA8E,GAF6B,OAI7B9E,EAAST,KACLU,YAAOsL,KACPpL,aAAU,SAAClG,GAA8C,IAAD,EAC9CD,EAAQ8K,EAAOc,MAAMlL,SADyB,EAE/BT,EAAOC,QAApBoE,EAF4C,EAE5CA,GAAIH,EAFwC,EAExCA,KACN+I,EAAsC,GAEtCE,GAAU,UAAApN,EAAMwR,mBAAmBvQ,YAAzB,eAA+BmM,UAAWjJ,EAC1D,GAAIiJ,EAAS,CAAC,IAAD,EACkBA,EAAnBvF,EADC,EACDA,WAAYvD,EADX,EACWA,GAChBuD,EACAqF,EAAM7G,KAAK,CAAE2D,UAAWnC,EAAYoC,UAAW3F,KAE/C4I,EAAM7G,KAAK,CACP2D,UAAW1F,IAEftE,EAAM4N,aAAatJ,GAAIiD,SAAS5F,SAAQ,SAACsI,GACrCiD,EAAM7G,KAAK,CACP2D,UAAW1F,EACX2F,uBAKZjK,EAAM0O,iBAAiBG,YAAYlN,SAAQ,SAACqI,GAAD,OACvCkD,EAAM7G,KAAK,CACP2D,iBAGRhK,EAAM0O,iBAAiBC,YAAYhN,SAAQ,SAAC8P,GAAD,OACvCvE,EAAM7G,KAAK,CACP4D,UAAWwH,EACXzH,UAAWhK,EAAM2N,aAAa8D,GAAY5J,gBAKtD,IAAMiB,EAA8B,CAChCxE,KACA4I,SAGJ,OAAO+C,GAAYK,aAAaxH,GAAQvD,KACpCM,aAAI,kBAAMyJ,aAAqB,MAC/B/I,aAAW,SAAC/C,GAAD,OAASsB,YAAGyK,YAAqB/L,OAC5CiI,aAAUU,YAKbuF,GAAsB,SAC/B1L,EACA8E,GAF+B,OAI/B9E,EAAST,KACLU,YAAOsK,KACPvF,IACI,iBAAO,CACHjH,QAAQ,0DACR5D,QAAS,CACLgP,QAAS,MACTC,UAAW,cAGnB,SAACnP,GAAY,IAAD,EACFD,EAAQ8K,EAAOc,MAAMlL,SADnB,YAEaT,EAAOC,eAFpB,QAE+B,GAA/BoE,EAFA,EAEAA,GAAIH,EAFJ,EAEIA,KACN+I,EAAsC,GAG5C,GAAI/I,EAAM,CAAC,IACC0D,EAAmB1D,EAAnB0D,WAAYvD,EAAOH,EAAPG,GAChBuD,EACAqF,EAAM7G,KAAK,CAAE2D,UAAWnC,EAAYoC,UAAW3F,KAE/C4I,EAAM7G,KAAK,CACP2D,UAAW1F,IAEftE,EAAM4N,aAAatJ,GAAIiD,SAAS5F,SAAQ,SAACsI,GACrCiD,EAAM7G,KAAK,CACP2D,UAAW1F,EACX2F,uBAKZjK,EAAM0O,iBAAiBG,YAAYlN,SAAQ,SAACqI,GAAD,OACvCkD,EAAM7G,KAAK,CACP2D,iBAGRhK,EAAM0O,iBAAiBC,YAAYhN,SAAQ,SAAC8P,GAAD,OACvCvE,EAAM7G,KAAK,CACP4D,UAAWwH,EACXzH,UACIhK,EAAM2N,aAAa8D,GAAY5J,gBAK/C,IAAMiB,EAA8B,CAChCxE,GAAE,OAAEA,QAAF,IAAEA,IAAM,GACV4I,SAGJ,OAAO+C,GAAYM,gBAAgBzH,GAAQvD,KACvCM,aAAI,kBAAMyJ,aAAqB,MAC/B/I,aAAW,SAAC/C,GAAD,OAASsB,YAAGyK,YAAqB/L,OAC5CiI,aACIkG,cACAxF,YA4DXyF,GAAoB,SAAC5L,GAAD,OAC7BA,EAAST,KACLU,YAAOmK,KACPjK,aAAU,SAAClG,GACP,OAAOgQ,GAAYG,cAAcnQ,EAAOC,SAASqF,KAC7CM,aAAI,kBAAMgM,aAAqB,MAC/BtL,aAAW,SAAC/C,GAAD,OAASsB,YAAGgN,YAAqBtO,aAK/CuO,GAA2B,SAAC/L,GAAD,OACpCA,EAAST,KACLU,YAAO4L,KACPhM,aAAI,WACA,OAAOqL,mBAINc,GAAmB,SAAChM,GAAD,OAC5BA,EAAST,KACLU,YAAYgM,KACZ9L,aAAU,SAAClG,GACP,OAAOgQ,GAAYO,WAAWvQ,EAAOC,SAASqF,KAC1CM,aAAI,SAAChF,GAAD,OAAcqR,YAAoBrR,MACtC0F,aAAW,SAAC/C,GAAD,OAASsB,YAAGqN,YAAoB3O,aAK9C4O,GAA6B,SAACpM,GAAD,OACtCA,EAAST,KACLU,YAAOkL,KACPpE,aAAa,KACblH,YAAIwM,OAGCC,GAAyB,SAACtM,GAAD,OAClCA,EAAST,KACLU,YAAYsM,KACZpM,aAAU,WACN,OAAO0K,GAAYC,cAAcvL,KAC7BM,aAAI,SAAChF,GAAD,OAAc2R,YAAkB3R,MACpC0F,aAAW,SAAC/C,GAAD,OAASsB,YAAG2N,YAAmBjP,aAK7CkP,GAAoB,SAAC1M,GAAD,OAC7BA,EAAST,KACLU,YAAOwK,KACPzF,IACI,iBAAO,CACHjH,QAAQ,gDACR5D,QAAS,CACLgP,QAAS,MACTC,UAAW,cAGnB,SAACnP,GAAD,OACIgQ,GAAYQ,cAAcxQ,EAAOC,SAASqF,KACtCM,aAAI,kBAAM8M,aAAqB,MAC/BpM,aAAW,SAAC/C,GAaR,OAAOsB,YAAG8N,kBAEdnH,aAAUoH,qBAMjBC,GAA2B,SAAC9M,GAAD,OACpCA,EAAST,KACLU,YAAY8M,KACZ/J,cACI,SAAC/I,GAAD,OAAsC,MAA1BA,EAAOC,QAAQ0D,UAE/BoH,IACI,iBAAO,CACHjH,QAAQ,sIAMXiP,GAA2B,SAAChN,GAAD,OACpCA,EAAST,KACLU,YAAO0M,KACP9M,aAAI,WACA,OAAOqL,mBC5VN+B,GAAkB,SAACjN,GAAD,OAC3BA,EAAST,KACLU,YAAY6K,KACZpF,IAAe,WACX,OAAOmF,GAAYC,cAAcvL,KAC7BM,aAAI,SAAChF,GAAD,OAAc2R,YAAkB3R,MACpC0F,aAAW,SAAC/C,GAAD,OAASsB,YAAG2N,YAAmBjP,aAK7C0P,GAAqB,SAC9BlN,EACA8E,GAF8B,OAI9B9E,EAAST,KACLU,YAAO+K,KACPtF,IAAe,SAACzL,EAA2CD,GAAW,IAAD,IAE3D8I,EAAiB,CACnBqK,aAAcnT,EAAMa,SAASA,SAASJ,IACtC2S,gBAAiB,CACbC,QAAO,oBACHrT,EAAMa,SAASA,SAASyS,OAAOtT,aAD5B,aACH,EAAsCqT,eADnC,QAC8C,OAI7D,OAAOxC,GAAYG,eAAelI,GAAQvD,KACtCwG,GAAazB,GAASE,oBAAoB,kBACtC+I,aAAsB,MAE1BhN,aAAW,SAAC/C,GAAD,OAASsB,YAAG0O,YAAsBhQ,aCY9CiQ,GAtDgC,CAAC,CAC5C,GAAM,EACN,SAAY,YACZ,KAAQ,YACR,KAAQ,YACR,MAAS,EACT,cAAiB,GACjB,MAAS,aACT,WAAc,EACd,MAAQ,EACR,YAAc,EACd,WAAc,KACd,WAAc,IACf,CACC,GAAM,EACN,SAAY,YACZ,KAAQ,YACR,KAAQ,aACR,MAAS,EACT,cAAiB,MACjB,MAAS,oDACT,WAAc,EACd,MAAQ,EACR,YAAc,EACd,WAAc,KACd,WAAc,KCeH5C,GANK,CAChB6C,gBA5BoB,WACpB,IAAM9O,EAAG,UALE,UAOX,OAAIC,cACOC,YAAG6O,IAAkBpO,KAAKK,YAAM,MAGpC/D,EAAMxC,IAA0BuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAsBlE2S,sBApB0B,WAC1B,IAAMhP,EAAG,UAdE,SAcF,WAET,OAAIC,cACOC,YAAG6O,GAAiB,IAAIpO,KAAKK,YAAM,MAGvC/D,EAAMxC,IAAqBuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAc7D4S,mBAXuB,SACvBhT,GAEA,IAAM+D,EAAG,UA1BE,UA4BX,OAAO/C,EAAMuI,KAAcxF,EAAK/D,GAAU0E,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,WCjBvD6S,GAAsB,SAAC9N,GAAD,OAC/BA,EAAST,KACLU,YAAYyN,KACZhI,IAAe,WACX,OAAOqI,GAAgBL,kBAAkBnO,KACrCM,aAAI,SAAC/E,GAAD,OAAkBkT,YAAuBlT,MAC7CyF,aAAW,SAAC/C,GAAD,OAASsB,YAAGmP,YAAuBzQ,aAIjD0Q,GAA4B,SAAClO,GAAD,OACrCA,EAAST,KACLU,YAAY2N,KACZlI,IAAe,WACX,OAAOqI,GAAgBH,wBAAwBrO,KAC3CM,aAAI,SAAC/E,GAAD,OACAqT,YAA6BrT,MAEjCyF,aAAW,SAAC/C,GAAD,OAASsB,YAAGsP,YAA6B5Q,aAKvD6Q,GAAmB,SAC5BrO,EACA8E,GAF4B,OAI5B9E,EAAST,KACLU,YAAOqO,KACPnO,aAAU,SAAClG,GAA6C,IAAD,EAG/CA,EADAC,QAAgBoE,GAF+B,EAEpC7D,IAFoC,EAE/B6D,IAAsBiQ,EAFS,EAE3BvJ,iBAF2B,EAM/CF,EAAOc,MADPhL,KAAiBtB,GAL8B,EAKvCI,QALuC,EAK9BJ,iBAOfkV,EAAW,WAqBb,OAPAzV,OAAOC,SAASyV,OACZ1S,EAAO,mBACKuC,EADL,YACW,IAAIyE,gBAClBzJ,GACFqK,aAGC7E,YAAGgH,gBAGd,OAAKyI,EAIEzP,YAAG7E,GAAQsF,KACdyF,IACI,SAAC/K,GAAD,MAAa,CACT8D,QAAQ,oJAEZyQ,IARGA,S,UC1BR3D,GALK,CAChB6D,mBA5CuB,WACvB,IAAM9P,EAAG,UAND,iBAMC,WAET,OAAIC,cAgBOC,YAAG,CACN6P,4BAA6BC,KAAgBC,eAIzBtP,KACpBC,aAAI,SAACC,GAAD,OAAOC,QAAQC,IAAI,SAAUF,MACjCG,YAAM,MAIP/D,EAAMxC,IAAuBuF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,UAe/D6T,yBAZ6B,WAC7B,IAAMlQ,EAAG,UAvCD,iBAuCC,YAET,OAAIC,cACOC,aAAG,GAAMS,KAAKK,YAAM,OAGxB/D,EAAMuI,KAAcxF,GAAKW,KAAKM,aAAI,SAACC,GAAD,OAASA,EAAI7E,WC5B7C8T,GAAwB,SACjC/O,EACA8E,GAFiC,OAIjC9E,EAAST,KACLU,YAAYyO,KACZxO,aAAW,WACP,OAAO8O,GAAaN,qBAAqBnP,KACrCY,aAAU,SAAC5C,GACP,IAAMpD,EAAe,CAAC8U,YAA0B1R,IAQhD,OANIA,EAASoR,8BACTC,KAAgBM,UAEhB/U,EAAQkG,KAAK8O,eAGV3V,YAAKW,MAEhBoG,aAAW,SAAC/C,GAAD,OACPhE,YAAK,CACD4V,YAA0B5R,GAC1B2R,yBAOXE,GAAyB,SAACrP,GAAD,OAClCA,EAAST,KACLU,YAAYqP,KACZnP,aAAU,kBACNQ,YAAM,EAAG,KAAMpB,KACXqB,YAAUZ,EAASC,OAAOkP,MAC1BtP,aAAI,kBAAM6O,uBAIba,GAA+B,SACxCvP,GADwC,OAGxCA,EAAST,KACLU,YAAYuP,KACZ9J,IAAe,WACX,OAAOsJ,GAAaF,2BAA2BvP,KAC3CM,aAAI,kBAAM4P,iBACVlP,aAAW,SAAC/C,GAAD,OAASsB,YAAG4Q,YAAiClS,aC9DlEmS,GAAgB,CAClBC,EACAC,EACAC,EACAC,EACAC,EACAC,GACFC,SAAQ,SAACC,GAAD,OAAO1U,OAAO2U,OAAOD,MAElBE,GAAa,CAACxL,IAEdyL,GAAWC,IAAY,WAAZ,EACjBF,GADiB,mBAEjBV,M,SCGDa,GAAiBC,cACVpW,GAAUqW,eAEjB5T,GAAQ6T,YAAe,CACzBC,QAASxW,EAAkBC,IAC3BwW,WAAY,CACRC,YAAiBzW,IACjB0W,IACAP,MAMRA,GAAeQ,IAAIV,IAKJxT,e,iCC5CR,IAAK8R,EAAZ,kC,SAAYA,K,6BAAAA,E,uBAAAA,E,mBAAAA,M,uCCAZ,sDAwBeM,IAlBf,YAII,IAAD,IAHC+B,YAGD,MAHQ,wDAGR,EACOpT,EAAWqT,cAKjB,OAJAC,IAAMC,WAAU,WACZvT,EAASyR,iBACV,IAGC,yBAAK+B,UAAU,6BACX,yBAAKA,UAAU,+BAA+BJ,GAC9C,kBAAC,IAAD,S,iCClBZ,mHAEaK,EAAmB,SAACnK,GAG7B,OAAOA,EAAQrG,MAAMzD,SAAS,kBAGrBkU,EAAgB,SAACpT,EAAyBuJ,GACnD,IACM8J,EADU1U,IAAMC,WAAWnC,KAAKlB,QACf,iBACnBkF,EAAG,kBAAc4S,GAErB,GAAI9J,EAAW,CAAC,IAAD,EACgBvJ,EAAnBG,EADG,EACHA,GAAIuD,EADD,EACCA,WACZjD,GAAG,0BAAuBiD,EAAvB,qBAA8CvD,OAC9C,CAAC,IACIA,EAAOH,EAAPG,GACRM,GAAG,0BAAuBN,GAG9B,OAAOM,GAGE6S,EAA0B,SACnCC,EACAjQ,GAEA,IAAIyE,EAAiB,GAMrB,OALIzE,GAAmB,IAAVA,KAETyE,EAASwL,EADTjQ,EAAQkQ,WAAWpO,OAAO9B,IAAQmQ,QAAQ,KAIvC1L,I,gCCvBX,kqBAiCM/M,EAA8B,CAChC0Y,aAAc,GACdC,YAAa,GACbC,SAAS,EACTvT,MAAO,KACPgF,SAAUwO,IACVtL,QAAS,CACLvD,MAAO,GACPvF,OAAQ,GACRqF,cAAe,IAEnBgP,iBAAkB,GAClB7O,KAAM8O,IACNC,aAAc,CACVJ,SAAS,EACT9W,KAAM,KACNuD,MAAO,KACP4T,MAAM,IAcRC,EAAuB,SACzBrY,EADyB,GAGvB,IADS8I,EACV,EADC5I,QAEF,GAAI4I,EAAQ,CAAC,IACDwP,EAAgBxP,EAAhBwP,YACJA,IACAtY,EAAM0M,QAAQ4L,EAAYtP,QAAUsP,EAAY1M,OAGpD5L,EAAMwJ,SAAWrK,EAAaqK,cAE9B+O,YAAavY,IAIfwY,EAAgB5Y,YAAY,CAC9BC,KAAM,WACNV,eACAW,SAAU,CACNyY,iBACAE,gBACAC,iBAAkBH,IAClBhG,6BAJM,SAIuBvS,GACzBA,EAAMmY,aAAaJ,SAAU,GAEjC3G,mBAPM,SAQFpR,EARE,GAUH,IAEOW,EAFR,EADIT,QAKFF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAQ,KAEd,IAAMmU,EAAOhY,EAASqC,QAClB,SAACC,EAAKyN,GAIF,OAHAzN,EAAItC,SAAS+P,EAAQpM,IAAMoM,EAC3BzN,EAAI6U,YAAYzR,KAAKqK,EAAQpM,IAEtBrB,IAEX,CAAEtC,SAAU,GAAImX,YAAa,KAMjC9X,EAAM6X,aAAec,EAAKhY,SAC1BX,EAAM8X,YAAca,EAAKb,aAE7BzG,mBAAoBuH,IAGpBC,eApCM,SAqCF7Y,EArCE,GAyCH,IAFc8X,EAEf,EAFM5X,QAGJF,EAAMiY,iBAAmBH,GAG7B5G,cAAemH,EACflH,uBAAwBkH,EACxBhG,4BAA6BkG,IAC7BO,iBAhDM,SAgDW9Y,EAhDX,GAgD8D,IAAjCoY,EAAgC,EAAzClY,QAEtBF,EAAMmY,aAAalX,KAAO9B,EAAagZ,aAAalX,KAEpDjB,EAAMmY,aAAaC,KAAOA,GAG9BhI,cAvDM,SAuDQpQ,EAvDR,GAuDuD,EAAtCE,QACnBF,EAAMmY,aAAaJ,SAAU,GAEjClG,qBA1DM,SA0De7R,EA1Df,GA0D2D,EAAnCE,QAC1BF,EAAMmY,aAAaJ,SAAU,EAC7B/X,EAAMmY,aAAaC,MAAO,GAE9BtG,qBA9DM,SA8De9R,EA9Df,GA8D2D,IAAnCE,EAAkC,EAAlCA,QAC1BF,EAAMmY,aAAaJ,SAAU,EAC7B/X,EAAMmY,aAAa3T,MAAQtE,GAE/B+R,aAlEM,SAkEOjS,EAlEP,GAkEiE,EAAlCE,QACjCF,EAAMmY,aAAaJ,SAAU,GAEjC7F,oBArEM,SAqEclS,EArEd,GAqE8D,IAAvCE,EAAsC,EAAtCA,QACzBF,EAAMmY,aAAaJ,SAAU,EAC7B/X,EAAMmY,aAAalX,KAAOf,EAC1BF,EAAMmY,aAAa3T,MAAQ,MAE/B2N,oBA1EM,SA0EcnS,EAAOC,GACvBD,EAAMmY,aAAaJ,SAAU,EAC7B/X,EAAMmY,aAAa3T,MAAQvE,EAAOC,SAEtCuQ,cA9EM,SA+EFzQ,EA/EE,GAiFJ,EADIE,SAINyS,qBApFM,SAoFe3S,EApFf,GAoF2D,EAAnCE,QAC1BF,EAAM+X,SAAU,GAEpBhF,qBAvFM,SAuFe/S,EAAOC,GACxBD,EAAM+X,SAAU,IAGxBgB,cAAe,SAACC,GAIZA,EACKC,QAAQzG,KAAmB,SAACxS,EAAOC,GAChCD,EAAMmY,aAAaJ,SAAU,KAEhCkB,QAAQxG,KAAoB,SAACzS,EAAOC,GACjCD,EAAMmY,aAAaC,MAAO,EAC1BpY,EAAMmY,aAAaJ,SAAU,Q,EA0BzCS,EAAcrY,QAnBdiR,G,EADAsH,iB,EACAtH,oBACAC,E,EAAAA,mBACAH,E,EAAAA,cACAC,E,EAAAA,uBACAkB,E,EAAAA,4BACAE,E,EAAAA,6BACAuG,E,EAAAA,iBACA1I,E,EAAAA,cACAyB,E,EAAAA,qBACAC,E,EAAAA,qBACA+G,E,EAAAA,eACA5G,E,EAAAA,aACAC,E,EAAAA,oBACAC,E,EAAAA,oBACA1B,E,EAAAA,cACAkC,E,EAAAA,qBACAI,E,EAAAA,qBACcF,E,EAAd0F,aACa3F,E,EAAb6F,YAGWD,MAAf,S,6GC7KeU,G,OA3CyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvC,OACI,yBAAK9B,UAAU,uBACX,yBAAKA,UAAU,gCACX,kBAAC+B,EAAA,EAAD,CAAaC,KAAK,SAAlB,6CAKJ,yBAAKhC,UAAU,uBACX,yBAAKA,UAAU,6BAAf,gDAGA,yBAAKA,UAAU,4BAAf,8BAGA,yBAAKA,UAAU,4BAAf,2DAKJ,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,+BAAf,aACA,yBAAKA,UAAU,8BACX,6LAKA,mNANJ,MAeJ,kBAACiC,EAAA,EAAD,CAAQC,QAASJ,GAAjB,c,QCzCCK,EAAsBC,aAFX,SAACzZ,GAAD,OAAsBA,EAAMY,QAIhD,SAAC8Y,GAAD,OAASA,EAAIha,WC0BFia,MA5Bf,WACI,IAAMC,EAAcC,YAAYL,GAE1BM,EAAgB3C,IAAM4C,aAAY,WAAO,IAClBC,EAASJ,EAA1B,iBACFK,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAME,MAAM,KAAK,GAGlCnb,OAAOqZ,KAAP,yBAEQ6B,QAFR,IAEQA,IAAY,GAFpB,yDAFsB,IAMlB,WAEL,CAACL,IAEJ,OACI,yBAAKvC,UAAU,4BACX,yBAAKA,UAAU,+BAAf,+CAGA,kBAACiC,EAAA,EAAD,CAAQC,QAASO,GAAjB,4C,iBCJGK,MAhBf,WACI,IAAMtW,EAAWqT,cACXkD,EAAcjD,IAAM4C,aAAY,WAClClW,EAAS2R,iBACV,IAEH,OACI,yBAAK6B,UAAU,6BACX,yBAAKA,UAAU,+BAAf,uCAGA,kBAACiC,EAAA,EAAD,CAAQC,QAASa,GAAjB,uB,gBC6BGC,UAhC6B,WACxC,IAAMzW,EAASiW,YAAYS,KADmB,EAENC,oBAAS,GAFH,mBAEvCC,EAFuC,KAExBC,EAFwB,KAGxCC,EAAsBvD,IAAM4C,aAC9B,kBAAMU,GAAe,KACrB,IAGAE,EAAO,kBAAC,EAAD,CAAOxB,OAAQuB,IAE1B,OAAQ9W,GACJ,KAAKoB,IAAUC,OACPuV,IACAG,EAAO,kBAAC,EAAD,OAEX,MACJ,KAAK3V,IAAU4V,6BACXD,EAAO,kBAACzF,EAAA,EAAD,MACP,MACJ,KAAKlQ,IAAUE,YACXyV,EAAO,kBAAC,EAAD,MAIf,OACI,yBAAKtD,UAAU,gBACX,kBAAC+B,EAAA,EAAD,CAAaC,KAAK,SAAlB,aACCsB,K,iCCzBN,IAAK5S,EAwEAuF,EAgBAuN,EAKAC,EAKAC,EAKAC,EAKAC,EAMAC,EAQAC,EA5HZ,kT,SAEYpT,K,kBAAAA,E,oBAAAA,E,uBAAAA,M,cAwEAuF,K,gBAAAA,E,cAAAA,E,aAAAA,M,cAgBAuN,K,sBAAAA,E,eAAAA,M,cAKAC,K,UAAAA,E,aAAAA,M,cAKAC,K,sBAAAA,E,uBAAAA,M,cAKAC,K,sBAAAA,E,uBAAAA,M,cAKAC,K,mBAAAA,E,mBAAAA,E,yBAAAA,M,cAMAC,K,YAAAA,E,YAAAA,E,cAAAA,E,oBAAAA,E,qBAAAA,M,cAQAC,K,yBAAAA,E,2BAAAA,E,yBAAAA,E,aAAAA,M,KAOL,IAAMC,EAAS,CAClBC,OAAQ,SACRC,cAAe,gBACfC,MAAO,SAGQ9Z,OAAO2U,OAAOgF,I,gGCvJjC,iFAEaI,GAAetZ,EAIb2C,IAFK,kBAAO2W,GAAgB1Y,IAAMC,WAAWtC,IAAIgb,MAGzD,IAAMC,GAAmB,G,wICPzB,IAAK1W,EAAZ,kC,SAAYA,K,gBAAAA,E,gEAAAA,E,4CAAAA,E,2BAAAA,M,sCCAZ,qLAgBO,SAASuT,EAAavY,GACzBA,EAAM+X,SAAU,EAGb,SAASU,EAAYzY,GACxBA,EAAM+X,SAAU,EAGb,SAASa,EACZ5Y,EACAC,GAEAD,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAQvE,EAAOC,QAGlB,IAAM8X,EAAe,CACxBnO,aAAa,EACbC,iBAAiB,EACjBL,SAAU,GACVC,cAAe4D,gBAAcqO,MAC7BxT,OAAQ,IAEC+P,EAAW,CACpB7O,IAAKyR,UAAQc,IACbtS,MAAOuR,YAAUgB,Q,0UCvCfC,EAAS,YA6CAxR,EA3CEC,YAAe,CAC5BwR,iBAAkB,CACdzX,GAAG,GAAD,OAAKwX,EAAL,sBACFvX,eAAgB,aAEpByX,gBAAiB,CACb1X,GAAG,GAAD,OAAKwX,EAAL,qBACFvX,eAAgB,YAEpB0X,iBAAkB,CACd3X,GAAG,GAAD,OAAKwX,EAAL,sBACFvX,eAAgB,aAEpB2X,gBAAiB,CACb5X,GAAG,GAAD,OAAKwX,EAAL,qBACFvX,eAAgB,gBAEpB4X,gBAAiB,CACb7X,GAAG,GAAD,OAAKwX,EAAL,qBACFvX,eAAgB,YAEpB6X,YAAa,CACT9X,GAAG,GAAD,OAAKwX,EAAL,iBACFvX,eAAgB,QAEpB8X,cAAe,CACX/X,GAAG,GAAD,OAAKwX,EAAL,mBACFvX,eAAgB,UAEpB+X,eAAgB,CACZhY,GAAG,GAAD,OAAKwX,EAAL,oBACFvX,eAAgB,YAEpBgY,qBAAsB,CAClBjY,GAAG,GAAD,OAAKwX,EAAL,0BACFvX,eAAgB,cAEpBiY,oBAAqB,CACjBlY,GAAG,GAAD,OAAKwX,EAAL,yBACFvX,eAAgB,mB,QCwETkY,MAvGf,WACI,IAAM5Y,EAAWqT,cAEXwF,GAAMC,EADiBC,cAArBD,kBACqBrS,GAiCvBuS,GA7BWH,EAAIV,gBAIJU,EAAIP,gBAIJO,EAAIH,qBAONG,EAAIN,YAGMM,EAAIR,gBAIJQ,EAAIF,oBAON,SAAC5X,GAAD,OAAiB,WACpCf,EAASwC,YAAKzB,OAIlB,OASI,kBAACkY,EAAA,EAAOC,QAAR,KAEI,yBAAKzY,GAAG,UACJ,kBAAC0Y,EAAA,EAAD,KAEI,kBAAC1D,EAAA,EAAD,CAAQC,QAASsD,EAAe,cAC3BH,EAAIV,iBAET,kBAAC1C,EAAA,EAAD,CAAQC,QAASsD,EAAe,cAC3BH,EAAIP,iBAET,kBAAC7C,EAAA,EAAD,CACI1U,IAAI,sDACJqY,UAAQ,GAEPP,EAAIH,sBAET,kBAACjD,EAAA,EAAD,CACI4D,oBAAqB,CACjBC,mBAAoBT,EAAIL,cACxBlc,QAAS,CAKL,CACI4D,QAAS2Y,EAAIR,gBACbkB,SAAU,kBAAMvZ,EAASwC,YAAK,gBAUlC,CACItC,QAAS2Y,EAAIF,oBACbY,SAAU,kBACNvZ,EAASwC,YAAK,uBAK7BqW,EAAIN,iB,+CClFdiB,EAvBQ,SACnBC,GAEA,mNACItd,MAAQ,CACJud,UAAW,MAFnB,kEAKyB,IAAD,OAChBD,IACKE,MAAK,SAACC,GACH,EAAKC,SAAS,CAAEH,UAAWE,EAAIE,aAElCC,OAAM,SAACpa,GAAD,OAASkC,QAAQlB,MAAMhB,QAV1C,+BAcQ,IAAMqa,EAAIC,KAAK9d,MAAMud,UACrB,OAAOM,EAAI,kBAACA,EAAMC,KAAKC,OAAY,SAf3C,GAAqBC,c,gDCyEVC,MA1Df,WACiCrB,cAArBD,iBADa,IAEf9Y,EAAWqT,cAFG,EAGwB2C,YACxCqE,KADIna,EAHY,EAGZA,QAASqU,EAHG,EAGHA,KAAMjY,EAHH,EAGGA,QAAS6D,EAHZ,EAGYA,QAG1Bma,EAAgBpE,uBAClB,kBAAMlW,EAASuH,iBACf,IAEEgT,EAAkBrE,uBACpB,kBAAMlW,EAASwH,iBACf,IAGEgT,EAAgBC,mBAClB,wBACgB,IAAZne,OACMqO,EACA,CACIzK,QAAO,iBAAE5D,QAAF,IAAEA,OAAF,EAAEA,EAASgP,eAAX,QAAsB,MAC7BiO,SAAUe,KAExB,CAAChe,IAGCoe,EAAmBD,mBACrB,wBACgB,IAAZne,OACMqO,EACA,CACI,CACIzK,QAAO,iBAAE5D,QAAF,IAAEA,OAAF,EAAEA,EAASiP,iBAAX,QAAwB,KAC/BgO,SAAUgB,MAG5B,CAACje,IAGL,OACI,kBAACqe,EAAA,EAAD,CACIpG,KAAMA,EACNtR,MAAM,GACN2X,QAASL,EACTC,cAAeA,EACfE,iBAAkBA,GAElB,kBAACC,EAAA,EAAMzB,QAAP,KACI,yBAAK1F,UAAU,qBACTrT,EACE,kBAAC0a,EAAA,EAAD,CAAMvT,OAAQwT,IAAWC,MAAM,WADvB,KAGZ,kBAACxF,EAAA,EAAD,CAAaC,KAAK,UAAUtV,O,iBC/DjC,SAAS8a,IACpB,IAAMhb,EAAWqT,cACXuE,EAAO5B,YAAYiF,KAEnBC,EAAiBhF,uBAAY,SAACtV,GAChCZ,EAASmb,YAAWva,IACfA,IACDZ,EAASyI,eACTzI,EAASqN,kBAEd,IACH,OACI,oCACKsK,IAAe,KACZ,yBAAKnE,UAAU,eACX,kBAAC4H,EAAA,EAAD,CACIC,MAAM,OACNC,SAAUJ,EACVK,QAAS3D,M,aCRlB4D,G,OARyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,OACI,yBAAKjI,UAAU,kBACX,yBAAKA,UAAU,uBAAuBiI,MCMnCC,EAV+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvCzH,EAAU8B,YAAY4F,KAE5B,OAAQD,GAAYzH,EAChB,kBAAC,EAAD,KACI,kBAAC2H,EAAA,EAAD,OAFsB,M,gBCenBC,MApBf,WACI,IAAM3T,EAAQ6N,YAAY+F,KACpB/b,EAAWqT,cACX2I,EAAY9F,uBAAY,kBAAMlW,EAASI,iBAAgB,IAE7D,GAAc,OAAV+H,EACA,OAAO,KANK,IASRjI,EAA6BiI,EAA7BjI,QAASqI,EAAoBJ,EAApBI,SAAU5H,EAAUwH,EAAVxH,MAE3B,OAAOwH,EACH,kBAAC8T,EAAA,EAAD,CACI/b,QAASA,EACTqI,SAAUA,EACV5H,MAAOA,EACPqb,UAAWA,IAEf,M,iCCpBD,SAASE,EAAT,GAA4D,IAAlCnc,EAAiC,EAAjCA,OACzBG,EAAU,kBAACsW,EAAA,QAAD,MAEd,OAAQzW,GACJ,KAAKoB,IAAU4V,6BACX7W,EAAU,kBAACmR,EAAA,EAAD,MACV,MACJ,KAAKlQ,IAAUgb,oBACXjc,EACI,kBAACmR,EAAA,EAAD,CAAU+B,KAAK,2CAEnB,MACJ,KAAKjS,IAAUE,YACXnB,EAAU,kBAACsW,EAAA,QAAD,MAGlB,OAAO,yBAAKhD,UAAU,0BAA0BtT,GCFpD,IAAMkc,EAAe5C,GACjB,kBAAM,qEAGJhD,EAAYgD,GACd,kBAAM,4CAGJ6C,EAAe7C,GACjB,kBACI,qEAKF8C,EAAc9C,GAChB,kBACI,qEAKF+C,EAAe/C,GACjB,kBACI,kCAKFgD,GAAM,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAUgB,EAAb,EAAaA,IAAb,OACR,yBAAKjJ,UAAW,iBAAmB9N,OAAO+W,IAAOhB,IAGtC,SAASiB,KACpB,IAAM1c,EAAWqT,cACXsJ,EAAY3G,YAAYS,KACxBmG,EAAgB5G,YAAY6G,KAoBlC,OAlBAtJ,qBAAU,WACNvT,EAAS6C,iBACV,IAEH0Q,qBAAU,WAWN,OAVIoJ,IACIA,IAAcxb,IAAUC,QAExBpB,EAASyI,eACTzI,EAASqN,gBACFsP,IAAcxb,IAAUE,aAC/BrB,EAASwC,YAAK,gBAIf,eACR,CAACma,IAEIA,EAOJ,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACVL,IAAcxb,IAAUC,OACrB,kBAAC,EAAD,CAAgBrB,OAAQ4c,IAExB,oCACI,kBAAC,GAAD,KACI,kBAAC,EAAD,OAEJ,kBAAC1D,EAAA,EAAOC,QAAR,CAAgB+D,SAAO,GACnB,kBAAC1H,EAAA,EAAD,CAAa2H,QAAQ,KAAK1H,KAAK,SAG3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2H,KAAK,aACR,kBAAC,GAAD,CAAKV,IAAI,UAAT,aAEJ,kBAAC,IAAD,CAAOU,KAAK,aACR,kBAAC,GAAD,CAAKV,IAAI,UAAT,eAIZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOU,KAAK,IAAIC,OAAK,GACjB,kBAAC,IAAD,CAAUC,GAAG,eAEjB,kBAAC,IAAD,CAAOF,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAACf,EAAD,OAEJ,kBAAC,IAAD,CAAOe,KAAK,aACR,kBAACd,EAAD,OAEJ,kBAAC,IAAD,CAAOc,KAAK,aACR,kBAACb,EAAD,OAEJ,kBAAC,IAAD,CAAOa,KAAK,iBACR,kBAACZ,EAAD,UAMpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACvB,EAAD,QAtDR4B,EACI,6BAAOA,EAAsB/c,SAE7B,kBAAC,EAAD,CAAsB8b,SAAO,I,uBC5EnC2B,GAAyB,8BAEhB,SAASC,GAAT,GAMa,IALxB9B,EAKuB,EALvBA,SAKuB,IAJvB1a,WAIuB,MAJjB,GAIiB,EAHvBqY,EAGuB,EAHvBA,SAEGoE,GACoB,EAFvBC,IAEuB,qDAIvB,OAAIrE,GAAYkE,GAAuBI,KAAK3c,IACxCyc,EAAKG,OAAS,SACdH,EAAKI,IAAM,sBAEP,qCAAGxiB,KAAM2F,GAASyc,GACb/B,IAMT,kBAAC,KAAD,eAAiB4B,GAAItc,GAASyc,GACzB/B,G,wBCZPoC,I,OAAOC,IAuBEC,OAtBf,WACI,OACI,kBAAC,IAAD,CAAU9e,MAAOA,KACb,kBAAC,IAAD,CAAiBzC,QAASA,KACtB,kBAAC,IAAD,KACI,kBAACwhB,EAAA,EAAcC,SAAf,MACK,gBAAWC,EAAX,EAAGnf,OAAH,OACG,kBAAC,KAAiBmf,EACd,kBAACC,EAAA,EAAD,CAAaN,KAAMA,GAAMO,cAAeb,IAEpC,kBAACb,GAAD,eCrBxB,IAAIzhB,IAAIC,OAAOC,SAASC,MACjBC,aAgBnBgjB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,U,gCC3B5B,qSAiBMC,EAAiB3iB,YAAY,CAC/BC,KAAM,YACNV,aATiC,CACjC4Y,SAAS,EACTvT,MAAO,KACPZ,OAAQ,KACR4e,SAAS,GAMT1iB,SAAU,CACNwV,yBADM,SACmBtV,GACrBA,EAAMwiB,SAAU,GAEpBrN,wBAJM,SAIkBnV,GACpBA,EAAMwiB,SAAU,GAEpB9N,mBAPM,SAOa1U,GACfA,EAAM+X,SAAU,GAEpB9C,0BAVM,SAWFjV,EAXE,GAaH,IADGE,EACJ,EADIA,QAEFF,EAAM+X,SAAU,EAChB/X,EAAM4D,OAAS1D,EAAQyU,4BACvB3U,EAAMwiB,QACFtiB,EAAQyU,8BACRC,IAAgBM,UAExBE,0BApBM,SAoBoBpV,EApBpB,GAoBiE,IAApCE,EAAmC,EAAnCA,QAC/BF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAStE,GAAsB,KACrCF,EAAMwiB,SAAU,GAEpBhN,0BAzBM,SAyBoBxV,GACtBA,EAAM+X,SAAU,GAEpBtC,iCA5BM,SA4B2BzV,GAC7BA,EAAM+X,SAAU,EAChB/X,EAAM4D,OAASgR,IAAgBM,UAEnCQ,iCAhCM,SAiCF1V,EAjCE,GAmCH,IADGE,EACJ,EADIA,QAEFF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAStE,GAAoB,KACnCF,EAAMwiB,SAAU,IAGxBzJ,cAAe,e,EAgBfwJ,EAAepiB,QARfmV,E,EAAAA,yBACAH,E,EAAAA,wBACAT,E,EAAAA,mBACAO,E,EAAAA,0BACAG,E,EAAAA,0BACAI,E,EAAAA,0BACAC,E,EAAAA,iCACAC,E,EAAAA,iCAGW6M,MAAf,S,yaC5CMpjB,EAAiC,CACnC4Y,SAAS,EACTvT,MAAO,KACP3D,SAAU,CACNJ,IAAK,KACL6S,OAAQ,CACJmP,SAAU,CACNC,SAAU,SACVC,SAAU,UAEd3iB,MAAO,QAyBbqC,EAAQzC,YAAY,CACtBC,KAAM,WACNV,eACAW,SAAU,CACN8iB,cADM,SACQ5iB,GACV,OAAOb,GAEX0jB,oBAJM,cAWH,IAAD,IALMhiB,SACIyS,OAAUtT,EAIpB,EAJoBA,MAGP8iB,GACb,EAJ2BL,SAI3B,EADIviB,SAEEF,IACAA,EAAMqT,QAAQyP,GAAQ9iB,EAAM2d,QAAQmF,KAG5CC,YAhBM,SAiBF/iB,EAjBE,GAqBH,IAAD,IAFME,QAAW4iB,EAEjB,EAFiBA,KAAME,EAEvB,EAFuBA,KAGrBhjB,EAAMa,SAASyS,OAAOmP,SAASK,GAAQE,GAE3ClS,YAxBM,SAwBM9Q,GACRA,EAAM+X,SAAU,GAEpBvF,kBA3BM,SA2BYxS,EA3BZ,GA2BgE,IAA3CE,EAA0C,EAA1CA,QACvBF,EAAMa,SAASJ,IAAf,2BACOtB,EAAa0B,SAASJ,KACtBP,EAAQiT,cAEfnT,EAAMa,SAASyS,OAAf,2BACOnU,EAAa0B,SAASyS,QAD7B,IAEItT,MAAOE,EAAQkT,kBAcnBpT,EAAM+X,SAAU,GAEpBtF,mBAlDM,SAkDazS,EAlDb,GAkDgE,EAA1CE,QACxBF,EAAM+X,SAAU,GAEpBkL,iBArDM,SAsDFjjB,EAtDE,GAwDH,IADGE,EACJ,EADIA,QAEFF,EAAMa,SAASJ,IAAMP,GAEzBgjB,+BA3DM,cAuEH,IAAD,IAVMriB,SACIyS,OAAUtT,EASpB,EAToBA,MAAOyiB,EAS3B,EAT2BA,SAS3B,IALMviB,QAAWijB,EAKjB,EALiBA,MAAOL,EAKxB,EALwBA,KAMhBM,EAAcpjB,EAAOqT,QAAQyP,GACnCM,EAAYX,EAASK,IAArB,2BACOM,EAAYX,EAASK,KACrBK,IAGXE,mCA9EM,cAwFH,IAAD,IARMxiB,SACIyS,OACItT,EAMd,EANcA,MACsByiB,EAKpC,EALcA,SAAYE,SAItBziB,EACJ,EADIA,QAEFF,EAAOqT,QAAQsP,SAASF,GAAxB,2BACOziB,EAAOqT,QAAQsP,SAASF,IACxBviB,IASX8Q,eApGM,SAoGShR,GACXA,EAAM+X,SAAU,GAEpBxE,sBAvGM,SAuGgBvT,EAvGhB,GAuG4D,EAAnCE,QAC3BF,EAAM+X,SAAU,GAEpBvE,sBA1GM,SA0GgBxT,EA1GhB,GA0GwD,EAA/BE,QAC3BF,EAAM+X,SAAU,IAGxBgB,cAAe,e,EAoBf1W,EAAMlC,QAZNyiB,E,EAAAA,cACAC,E,EAAAA,oBACAE,E,EAAAA,YACAjS,E,EAAAA,YACA0B,E,EAAAA,kBACAC,E,EAAAA,mBACAwQ,E,EAAAA,iBACAjS,E,EAAAA,eACAuC,E,EAAAA,sBACAC,E,EAAAA,sBACA0P,E,EAAAA,+B,EACAG,mCAGWhhB,MAAf,S,gCC5MA,gWAEMihB,EAAiB,SAACtjB,GAAD,OAAsBA,EAAMS,KAEtCyd,EAAuBzE,YAChC6J,GACA,SAAC5J,GAAD,OAASA,EAAI6J,gBAGJ3D,EAAgBnG,YAAe6J,GAAgB,SAAC5J,GAAD,OAASA,EAAI1N,SAE5D8S,EAAerF,YAAe6J,GAAgB,SAAC5J,GAAD,OAASA,EAAI+B,QAE3DgE,EAAuBhG,YAChC6J,GACA,SAAC5J,GAAD,OAASA,EAAI3B,WAGJuC,EAAiBb,YAC1B6J,GACA,SAAC5J,GAAD,OAASA,EAAI9V,UASX4f,EAAuB/J,YACzB6J,GACA,SAAC5J,GAAD,OAASA,EAAIvU,gBAGXse,EAAkChK,YACpC6J,GACA,SAAC5J,GAAD,OAASA,EAAIgK,2BAGJC,EAAsBlK,YAC/B+J,EACAC,GACA,SAACte,EAAcue,GAAf,MAA4C,CACxCve,eACAue,8BAGKE,EAAyBnK,YAClC6J,GACA,SAAC5J,GAAD,OAASA,EAAImK,mBAGJC,EAAyBrK,YAClC6J,GACA,SAAC5J,GAAD,OAASA,EAAIqK,mBAGJrD,EAAgBjH,YAAe6J,GAAgB,SAAC5J,GAAD,OAASA,EAAIlV,SAC5Dwf,EAAwBvK,YACjC6J,GACA,SAAC5J,GAAD,OAASA,EAAIuK,kB,2sCCrBjB,SAASC,EAAuBC,EAAYhgB,GACxC,IAAMigB,EAAQD,EAAME,QAAQlgB,IACb,IAAXigB,GACAD,EAAMG,OAAOF,EAAO,GAI5B,IAAMG,EAA0B,SAACvkB,GAC7BuY,YAAavY,GACbA,EAAMwkB,oBAAsB,IAmC1BrlB,EAA8B,CAEhC4Y,SAAS,EACTvT,MAAO,KACPgF,SAAUwO,IACVtJ,iBAAkB,CACdG,YAAa,GACbF,YAAa,GACb8V,KAAK,GAET/X,QAAS,CACLvD,MAAO,GACPvF,OAAQ,GACRqF,cAAe,IAEnBG,KAAM,CACFC,IAAKyR,UAAQc,IACbtS,MAAOuR,YAAUgB,OAErB2I,oBAAqB,GACrB5W,aAAc,GACdiB,YAAa,GACblB,aAAc,GACd+W,cAAe,CACX3M,SAAS,EACT9W,KAAM,KACNuD,MAAO,KACP4T,MAAM,GAEV5G,mBAAoB,CAChBuG,SAAS,EACTvT,MAAO,KACP4T,MAAM,IAQd,IAAMuM,EAAuB,SACzB3kB,EADyB,GAGvB,IADS8I,EACV,EADC5I,QAEF,GAAI4I,EAAQ,CAAC,IACDwP,EAAgBxP,EAAhBwP,YACJA,IACAtY,EAAM0M,QAAQ4L,EAAYtP,QAAUsP,EAAY1M,OAGpD5L,EAAMwJ,SAAWrK,EAAaqK,UACf,OAAX8O,QAAW,IAAXA,OAAA,EAAAA,EAAatP,UAAWoS,SAAOG,OAC/BgJ,EAAwBvkB,QAG5BuY,YAAavY,IAgBf4kB,EAA0B,SAACzgB,GAC7B,OAAQA,EAAK2D,iBACT,KAAKC,iBAAeM,QAChB,OAAO,EAEX,KAAKN,iBAAeK,SAChB,OAAO,EAGX,QACI,OAAO,IAgCbyc,EAAgBjlB,YAAY,CAC9BC,KAlJW,WAmJXV,eACAW,SAAU,CACNyY,iBAEAuM,iBAAkBvM,IAClB5L,mBAJM,SAKF3M,EALE,GAOH,IADGE,EACJ,EADIA,QAEMQ,EAAuBR,EAAvBQ,SAAU8I,EAAatJ,EAAbsJ,SAElBxJ,EAAMwJ,SAAN,2BAAsBxJ,EAAMwJ,UAAaA,GACzCxJ,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAQ,KAEd,IAAMmU,EAAOjY,EAASsC,QAClB,SAACC,EAAKmK,GAAa,IACP7F,EAA6B6F,EAA7B7F,SAAawd,EADP,YACuB3X,EADvB,cAGV4X,GAAc,EACdC,GAAe,EAEbC,EAAiD,GACvDzjB,OAAO2U,OAAO7O,GAAU5F,SAAQ,SAACwL,GAC7B,IAAMgY,EAAiBP,EAAwBzX,GAE1CmK,YAAiBnK,IASlB6X,GAAc,EACdC,GAAe,EACf7X,EAAQtF,gBAAkBqF,EAAQrF,kBARlCkd,EAAcA,IAAgBG,EAC9BF,EACIA,GACA9X,EAAQrF,kBACRC,iBAAeC,WAMvBkd,EAAgB/X,EAAQ7I,IAAxB,2BACO6I,GADP,IAEIF,QAASkY,OAIbH,IACA5X,EAAQtF,gBAAkBC,iBAAeK,UAEzC6c,IACA7X,EAAQtF,gBAAkBC,iBAAeC,WAG7C,IAAMod,EAAiBR,EAAwBxX,GAW/C,OAVAnK,EAAIvC,SAAS0M,EAAQ9I,IAArB,2BACOygB,GADP,IAEIjd,gBAAiBsF,EAAQtF,gBACzBP,SAAU9F,OAAOC,KAAK6F,GAEtB0F,QAASmY,IAEbniB,EAAI4L,YAAYwW,IAAIjY,EAAQ9I,IAC5BrB,EAAIsE,SAAJ,2BAAoBtE,EAAIsE,UAAa2d,GAE9BjiB,IAEX,CAAEvC,SAAU,GAAImO,YAAa,IAAIyW,IAAO/d,SAAU,KAOtDvH,EAAM4N,aAAe+K,EAAKjY,SAC1BV,EAAM6O,YAActP,MAAMC,KAAKmZ,EAAK9J,aACpC7O,EAAM2N,aAAegL,EAAKpR,UAE9BqF,mBAAoBgM,IAGpBxK,0BA9EM,SA+EFpO,EA/EE,GAiFH,IADGE,EACJ,EADIA,QAKFF,EAAM0kB,cAAc3M,SAAU,EAC9B/X,EAAM0kB,cAAczjB,KAAOf,EAC3BF,EAAMwE,MAAQ,MAElB6J,0BAzFM,SAyFoBrO,EAzFpB,GAyFgE,IAAnCE,EAAkC,EAAlCA,QAC/BF,EAAM0kB,cAAN,2BACOvlB,EAAaulB,eADpB,IAEIlgB,MAAOtE,KAMfqlB,eAlGM,SAmGFvlB,EAnGE,GAuGH,IAAD,EACQwlB,EADR,EAFMtlB,QAAW2O,YAGyB7F,QACpC,SAAC1E,GAAD,YAAmCkK,IAA3BxO,EAAM4N,aAAatJ,MAG/BtE,EAAM0O,iBAAiBG,YAAc2W,EAErCxlB,EAAM0O,iBAAiB+V,IACnBe,EAAoBC,SAAWzlB,EAAM6O,YAAY4W,OAErDzlB,EAAM0O,iBAAiBC,YAAvB,UACI6W,EAAoBxiB,QAAO,SAACC,EAAKqB,GAE7B,OADArB,EAAIoD,KAAJ,MAAApD,EAAG,YAASjD,EAAM4N,aAAatJ,GAAIiD,WAC5BtE,IACR,WAJP,QAI0B,IAE9ByiB,eAvHM,SAwHF1lB,EAxHE,GA4HH,IAAD,IAFME,QAAWuiB,EAEjB,EAFiBA,SAAUzY,EAE3B,EAF2BA,UAOnB2b,EAAgB,YAAO3lB,EAAM0O,iBAAiBC,aAE9CiX,EAAkB5lB,EAAM4N,aAAa5D,GAAWzC,SAEtDqe,EAAgBjkB,SAAQ,SAAC8D,GAAD,OACpBye,EAAoByB,EAAkBlgB,MAE1CkgB,EAAiBtf,KAAjB,MAAAsf,EAAgB,YAASlD,IAErBmD,EAAgBH,SAAWhD,EAASgD,OAC/BzlB,EAAM0O,iBAAiBG,YAAYxL,SAAS2G,IAC7ChK,EAAM0O,iBAAiBG,YAAYxI,KAAK2D,GAG5Cka,EACIlkB,EAAM0O,iBAAiBG,YACvB7E,GAIRhK,EAAM0O,iBAAiBC,YAAvB,YAAyCgX,GACzC3lB,EAAM0O,iBAAiB+V,IACnBzkB,EAAM0O,iBAAiBG,YAAY4W,SACnCzlB,EAAMwJ,SAASC,UAIvBgD,QA5JM,SA4JEzM,EA5JF,GA4JqD,IAA1CE,EAAyC,EAAzCA,QACTA,IAAYoN,gBAAcC,OAC1BvN,EAAMwJ,SAASE,cAAgBxJ,GAEnC,IAAMsJ,EAAWxJ,EAAMwJ,SAEvB,GAAItJ,IAAYoN,gBAAcqO,OAAS3b,EAAMwJ,SAASK,YAAa,CAC/D,IAAMgc,EACF7lB,EAAM6O,YAAY7O,EAAM6O,YAAY4W,OAAS,GACjDjc,EAASrB,OAASnI,EAAM4N,aAAaiY,GAAiB1d,YACnD,GACHjI,IAAYoN,gBAAcwY,QAC1B9lB,EAAMwJ,SAASM,gBACjB,CACE,IAAMic,EAAmB/lB,EAAM6O,YAAY,GAC3CrF,EAASrB,OAASnI,EAAM4N,aAAamY,GAAkB5d,OAG3DnI,EAAM0O,iBAAmBvP,EAAauP,iBAElCxO,GAAWoN,gBAAcC,KACzBgL,YAAavY,GAEbukB,EAAwBvkB,IAKhCwM,QAxLM,SAwLExM,EAxLF,GAwLiD,IAAtCE,EAAqC,EAArCA,QACbF,EAAMoJ,KAAOlJ,EACbF,EAAMwJ,SAAWrK,EAAaqK,SAE9BxJ,EAAM0O,iBAAmBvP,EAAauP,iBACtC6V,EAAwBvkB,IAI5BgmB,UAjMM,SAkMFhmB,EAlME,GAoMH,IAAD,IADIE,QAAW8I,EACf,EADeA,OAAQ4C,EACvB,EADuBA,MAErB5L,EAAM0M,QAAQ1D,GAAU4C,GAE5Bqa,eAvMM,SAuMSjmB,EAvMT,GAuMqD,IAAnCE,EAAkC,EAAlCA,QACpBF,EAAM0M,QAAQvD,MAAQjJ,GAE1BgmB,gBA1MM,SA0MUlmB,EA1MV,GA0M4D,IAAzCE,EAAwC,EAAxCA,QACrBF,EAAM0M,QAAQ9I,OAAS1D,GAE3BimB,uBA7MM,SA8MFnmB,EA9ME,GAgNH,IADGE,EACJ,EADIA,QAEFF,EAAM0M,QAAQzD,cAAgB/I,GAIlCkmB,YArNM,SAsNFpmB,EAtNE,GAwNH,IADGE,EACJ,EADIA,QAEEA,EAAQmmB,SACRrmB,EAAMwkB,oBAAoBne,KAAKnG,EAAQoE,IAEvC4f,EAAoBlkB,EAAMwkB,oBAAqBtkB,EAAQoE,KAK/DmJ,UAjOM,SAkOFzN,EAlOE,GA0OJ,EANME,SAORqO,WA3OM,SA2OKvO,EA3OL,GA2O2D,EAA7CE,SACpB4O,kBA5OM,SA4OY9O,EA5OZ,GA4OwD,EAAnCE,QACvBF,EAAM+X,SAAU,GAEpB1K,wBA/OM,SA+OkBrN,GACpBA,EAAM+X,SAAU,GAEpBhJ,kBAlPM,SAkPY/O,EAAOC,GACrBD,EAAM+X,SAAU,GAEpBuO,uBArPM,SAsPFtmB,EAtPE,GA4PH,IAJKE,EAIN,EAJMA,QAKJF,EAAMwR,mBAAmB4G,MAAO,EAChCpY,EAAMwR,mBAAmBvQ,KAAOf,GAEpCqmB,wBAhQM,SAgQkBvmB,EAAOC,GAC3BD,EAAMwR,mBAAqBrS,EAAaqS,oBAE5CD,cAnQM,SAoQFvR,EApQE,GAsQJ,EADIE,QAEFF,EAAMwR,mBAAmBuG,SAAU,EACnC/X,EAAMwR,mBAAmB4G,MAAO,EAChCpY,EAAM0kB,cAActM,MAAO,EAC3BpY,EAAM+X,SAAU,GAEpBzI,qBA5QM,SA4QetP,EA5Qf,GA4Q2D,EAAnCE,QAC1BF,EAAMwR,mBAAqBrS,EAAaqS,oBAE5CjC,qBA/QM,SA+QevP,EA/Qf,GA+Q2D,IAAnCE,EAAkC,EAAlCA,QAC1BF,EAAMwR,mBAAmBuG,SAAU,EACnC/X,EAAMwR,mBAAmBhN,MAAQtE,EACjCF,EAAMwR,mBAAmB4G,MAAO,EAChCpY,EAAM+X,SAAU,GAEpBxH,gBArRM,SAsRFvQ,EAtRE,GA0RJ,EAFME,SAMRyR,sBA9RM,SA8RgB3R,EA9RhB,GA8R8D,EAArCE,QAE3BF,EAAM+X,SAAU,GAEpBvI,uBAlSM,SAkSiBxP,EAlSjB,GAkS6D,EAAnCE,QAC5BF,EAAMwR,mBAAqBrS,EAAaqS,mBACxCxR,EAAM+X,SAAU,GAEpBtI,uBAtSM,SAsSiBzP,EAtSjB,GAsS4D,EAAlCE,QAG5BF,EAAM+X,SAAU,GAEpB/J,YA3SM,SA2SMhO,EA3SN,GA2S+D,EAAhDE,QACjBF,EAAM0kB,cAAc3M,SAAU,GAElCvN,mBA9SM,SA8SaxK,EA9Sb,GA8SyD,EAAnCE,QACxBF,EAAM0kB,cAAgBvlB,EAAaulB,eAEvCzW,mBAjTM,SAiTajO,EAjTb,GAiTyD,IAAnCE,EAAkC,EAAlCA,QACxBF,EAAM0kB,cAAc3M,SAAU,EAC9B/X,EAAM0kB,cAAclgB,MAAQtE,GAEhCsmB,kBArTM,SAqTYxmB,EArTZ,GAqT+D,IAAjCoY,EAAgC,EAAzClY,QACvBF,EAAM0kB,cAActM,KAAOA,EACtBA,IACDpY,EAAM0kB,cAAgBvlB,EAAaulB,gBAG3Cva,oCA3TM,SA4TFnK,EA5TE,GAoUH,IANKE,EAMN,EANMA,QAOIQ,EAAgCR,EAAhCQ,SAAU6G,EAAsBrH,EAAtBqH,SAAU0F,EAAY/M,EAAZ+M,QAC5BsL,YAAavY,GAEbU,EAASiB,SAAQ,SAACwC,GACEnE,EAAM4N,aAAazJ,EAAKG,IAChC2I,QAAUA,KAEtB1F,EAAS5F,SAAQ,SAACwC,GACEnE,EAAM2N,aAAaxJ,EAAKG,IAChC2I,QAAUA,MAI1BX,cAAeqY,EACf7X,uBAAwB6X,EACxBpY,4BAA6BgY,EAC7BpW,qBA9Y4B,SAChCnO,EADgC,GAQ/B,EALGE,QAMJF,EAAM0kB,cAAc3M,SAAU,IAuY9BgB,cAAe,SAACC,GAQZA,EACKC,QAAQH,KAAkB,SAAC9Y,EAAOC,GAC/BD,EAAM0kB,cAActM,MAAO,KAE9Ba,QAAQpH,KAAsB,SAAC7R,EAAOC,GACnCD,EAAM0kB,cAActM,MAAO,KAE9Ba,QAAQxG,KAAoB,SAACzS,EAAOC,U,EA2C7C4kB,EAAc1kB,QAnCdwM,G,EADAmY,iB,EACAnY,oBACAC,E,EAAAA,mBACA2Y,E,EAAAA,eAEAjZ,G,EADA0Z,U,EACA1Z,eACAC,E,EAAAA,4BACAO,E,EAAAA,uBACAL,E,EAAAA,QACAD,E,EAAAA,QACA4Z,E,EAAAA,YACAV,E,EAAAA,eACAjY,E,EAAAA,UACAO,E,EAAAA,YACAwY,E,EAAAA,kBACArc,E,EAAAA,oCACAgE,E,EAAAA,qBACAC,E,EAAAA,0BACAC,E,EAAAA,0BACA7D,E,EAAAA,mBACAyD,E,EAAAA,mBACAM,E,EAAAA,WACAO,E,EAAAA,kBACAzB,E,EAAAA,wBACA0B,E,EAAAA,kBACAuX,E,EAAAA,uBACAC,E,EAAAA,wBACAhV,E,EAAAA,cACAjC,E,EAAAA,qBACAC,E,EAAAA,qBACAgB,E,EAAAA,gBACAf,E,EAAAA,uBACAC,E,EAAAA,uBACAkC,E,EAAAA,sBAEc3C,E,EAAduJ,aAGWsM,MAAf,S,+SC3lBMlD,EAAK,CACPI,OAAQ,KACRzX,SAAU,KAQd,SAAuBmc,GAEnB,IAAMva,EAAS,GACf,IAAK,IAAMwa,KAAQD,GACf,SAAWE,EAAGC,GACVnlB,OAAOolB,eAAe3a,EAAQya,EAAG,CAC7BtnB,IAAK,WACD,OAAOsnB,KAHnB,CAMGD,GAMKI,CAAcnF,EAAGrX,UAAjC,I,2DCDayc,EAAb,WAiBI,WAAYhF,GAAS,yBAhBrBiF,YAgBoB,OAZpBC,kBAYoB,OAVpBC,cAUoB,OANpBC,oBAMoB,OAJpBC,cAIoB,OAHpBC,oBAGoB,OAFpBC,eAEoB,EAChB,IAAMC,EAAQ,IAAIC,KAAKC,aAAa1F,GAAQ2F,cAAc,SACpDtjB,EAAO,IAAIojB,KAAKC,aAAa1F,EAAQ,CAAE4F,aAAa,IACpDC,EAAW,YAAIxjB,EAAKyjB,OAAO,YAAY3N,MAAM,KAAK4N,UAElD1D,EAAQ,IAAI2D,IAAIH,EAAS/hB,KAAI,SAACmiB,EAAGC,GAAJ,MAAU,CAACD,EAAGC,OACjDnK,KAAKkJ,OAASO,EAAMW,MAAK,SAACF,GAAD,MAAkB,UAAXA,EAAExc,QAAmBI,MAErDkS,KAAKmJ,aAAe,IAAIkB,OAAJ,WAAerK,KAAKkJ,OAApB,KAA+B,KACnDlJ,KAAKoJ,SAAWK,EAAMW,MAAK,SAACF,GAAD,MAAkB,YAAXA,EAAExc,QAAqBI,MACzDkS,KAAKqJ,eAAiB,IAAIgB,OAAJ,WACdZ,EAAMW,MAAK,SAACF,GAAD,MAAkB,YAAXA,EAAExc,QAAqBI,MAD3B,MAGtBkS,KAAKsJ,SAAWQ,EAASQ,KAAK,IAC9BtK,KAAKuJ,eAAiB,IAAIc,OAAJ,WAAerK,KAAKsJ,SAApB,KAAiC,KACvDtJ,KAAKwJ,UAAY,SAACU,GAAD,OAAOze,OAAO6a,EAAM/kB,IAAI2oB,KAhCjD,2DAGQ,OAAOlK,KAAKkJ,SAHpB,uCASQ,OAAOlJ,KAAKoJ,aATpB,8CAmCatb,GACL,IAAMyc,EAAgBzc,EACjB0c,OACAC,QAAQ,MAAO,IACfA,QAAQzK,KAAKmJ,aAAc,IAC3BsB,QAAQzK,KAAKqJ,eAAgB,KAC7BoB,QAAQzK,KAAKuJ,eAAgBvJ,KAAKwJ,WAEjCpb,EAASsc,OAAOH,GACtB,OAAOI,MAAMvc,IAAkBA,EAAOvC,eA5C9C,KAiDA+e,EAAepe,SAAWqe,IAAQC,GAElC,IAAMC,EAAQC,cAED1kB,EAAO2kB,YAAWL,EAAgBG,GAEzChH,EAAgB1K,IAAM6R,cAAiC,CACzDpmB,OAAQwB,EACR6kB,UAAW,SAACC,OAGVC,EAA2B,SAACpL,GAAW,IAAD,EACZxD,mBAAiBmO,GADL,mBAGlCU,EAAU,CACZxmB,OAJoC,KAKpCqmB,UALoC,MAOxC,OAAO,kBAACpH,EAAcwH,SAAf,eAAwBzd,MAAOwd,GAAarL,KAuBvD,SAASnB,IAAY,MAEqB0M,cAA9BjlB,EAFS,EAETA,cAAeklB,EAFN,EAEMA,WACjBC,EAAqBzP,uBACvB,SAA0B0P,GAA1B,OAdR,SACIA,EACA/R,GAEA,OAAOjW,OAAOC,KAAK+nB,GAAKzmB,QACpB,SAACC,EAAKrB,GAAN,mBAAC,eAAiBA,EAAM8V,EAAI+R,EAAI7nB,KAAqBqB,KACrD,IASI0Z,CAAoB8M,EAAKplB,KAC7B,CAACA,IAECqlB,EAAc7P,YAAY8J,KAE1BgG,EAAqBxS,IAAMmH,SAC7B,kBACIsL,YAAc,CACVtlB,GAAI,uBACJC,eAAgBmlB,EAAYvkB,iBAEpC,CAACukB,EAAYvkB,eAGX0kB,EAAwB,CAC1BC,sBAAuB,EACvBC,sBAAuB,GAErBC,EAAuB,CAAED,sBAAuB,GAEhDE,EAAiBlQ,uBAAY,WAAO,IAAD,EA2BrC,OA1Ba,mBACR3U,IAAsB8kB,OAAS,CAC5BnI,OAAQ,QACRoI,QAASN,IAHJ,cAKRzkB,IAAsBC,iBAAmB,CACtC0c,OAAQ,QACRoI,QAASH,IAPJ,cASR5kB,IAAsBglB,yBAA2B,CAC9CrI,OAAQ,QACRoI,QAASN,IAXJ,cAaRzkB,IAAsBilB,mCAAqC,CACxDtI,OAAQ,QACRoI,QAASH,IAfJ,cAiBR5kB,IAAsBklB,8BAAgC,CACnDvI,OAAQ,QACRoI,QAASN,IAnBJ,GAqBXH,EAAYhG,2BAMf,CAACgG,EAAYhG,0BAEV6G,EAAsBxQ,uBACxB,SAACyQ,EAAgBL,GACb,IAAM/lB,EAAO6lB,IAUb,OARAO,EAASzB,YAAW,CAAEhH,OAAQ3d,EAAK2d,SAAU0I,aACzCjC,OAAOgC,GADF,2BAGEpmB,EAAK+lB,SACLA,MAMf,CAACF,IAGCS,EAAc3Q,uBAChB,SAACyQ,GAGG,OAFAA,EAASD,EAAoBC,GAEtBnmB,EAAcslB,EAAD,eACfD,EAAYhG,wBAA0B8G,MAG/C,CACInmB,EACAslB,EACAD,EAAYhG,wBACZ6G,IAYFI,EAAiB5Q,uBACnB,SAACyQ,GAAD,OACI/S,YAAwBiT,EAAaF,KACzC,IAyBJ,OAtBmBlM,mBACf,iBAAO,CACH5G,IAAKrT,EACLsY,iBAAkB6M,EAClBnlB,gBACAklB,aACAgB,sBACAG,cACAC,iBACAV,oBAEJ,CACI5lB,EACAmlB,EACAD,EACAmB,EACAT,EACAM,EACAI,M,+BC3OZ,0b,iSCwBMC,EAAoBhrB,YAAY,CAClCC,KAAM,eACNV,aARoC,CACpC4Y,SAAS,EACTvT,MAAO,KACP1D,aAAc,CAAEoM,MAAO,GAAI2d,OAAQ,OAMnC/qB,SAAU,CACNwU,aADM,SAEFtU,EAFE,GAUJ,EANME,QAOJF,EAAM+X,SAAU,GAEpBrE,gBAbM,SAaU1T,GACZA,EAAM+X,SAAU,GAEpB/D,uBAhBM,SAiBFhU,EAjBE,GAmBH,IADGE,EACJ,EADIA,QAEFF,EAAMc,aAAaoM,MAAQhN,EAC3BF,EAAM+X,SAAU,GAEpB9D,uBAvBM,SAuBiBjU,EAvBjB,GAuB8D,IAApCE,EAAmC,EAAnCA,QAC5BF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAStE,GAAoB,MAEvC0T,sBA3BM,SA2BgB5T,GAClBA,EAAM+X,SAAU,GAEpB5D,6BA9BM,SA+BFnU,EA/BE,GAiCH,IADGE,EACJ,EADIA,QAEFF,EAAMc,aAAa+pB,OAAnB,2BACO3qB,GADP,IAEI4qB,MACI,+DAER9qB,EAAM+X,SAAU,GAEpB3D,6BAzCM,SA0CFpU,EA1CE,GA4CH,IADGE,EACJ,EADIA,QAEFF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAStE,GAAoB,OAG3C6Y,cAAe,e,EAef6R,EAAkBzqB,QAPlBmU,E,EAAAA,aACAZ,E,EAAAA,gBACAM,E,EAAAA,uBACAC,E,EAAAA,uBACAL,E,EAAAA,sBACAO,E,EAAAA,6BACAC,E,EAAAA,6BAGWwW,MAAf,S,iiBCpEYxlB,E,2FAAAA,K,gBAAAA,E,sCAAAA,E,uDAAAA,E,6EAAAA,E,kEAAAA,M,KA+BZ,IAAMjG,EAAyB,CAC3B4Y,SAAS,EACTvT,MAAO,KACPwH,MAAO,KACPyP,KAAMC,IACNqP,cAAc,EACdnnB,OAAQ,KACRuB,aAAc,YACdG,cAAe,MACfue,gBAAiB,IACjBH,wBAAyBte,EAAsB8kB,OAC/CnG,gBAAiB8D,YAAO,IAAIvmB,KAAQ,OACpCiiB,aAAc,CACVnL,MAAM,EACNrU,QAAS,GACT5D,QAAS,CACLgP,QAAS,MACTC,UAAW,OAGnB6U,cAAe,MAGb+G,EAAWprB,YAAY,CACzBC,KAAM,MACNV,eACAW,SAAU,CACNyY,iBACAE,gBACAuG,WAHM,SAGKhf,EAHL,GAGkD,IAApCE,EAAmC,EAAnCA,QAChBF,EAAMyb,KAAOvb,GAEjB4D,mBANM,SAOF9D,EACAC,GACD,IAAD,EACED,EAAMujB,aAAN,uCACOvjB,EAAMujB,cACNtjB,EAAOC,SAFd,IAGIkY,KAAI,UAAEnY,EAAOC,QAAQkY,YAAjB,YAGZnU,YAhBM,SAiBFjE,EACAC,GAEqB,IAAD,EAAhBA,EAAOC,QACPF,EAAMgM,MAAN,uCACOhM,EAAMgM,OACN/L,EAAOC,SAFd,IAGIkM,SAAQ,UAAEnM,EAAOC,QAAQkM,gBAAjB,QAA6B,MAGzCpM,EAAMgM,MAAQ7M,EAAa6M,OAGnCZ,gCA9BM,SA8B0BpL,GAC5BA,EAAMujB,aAAepkB,EAAaokB,cAEtClY,kCAjCM,SAiC4BrL,GAC9BA,EAAMujB,aAAepkB,EAAaokB,cAEtC7c,kBApCM,SAoCY1G,GACdA,EAAM+qB,cAAe,GAEzBzkB,iBAvCM,SAuCWtG,GACbA,EAAM+qB,cAAe,GAEzBpmB,YA1CM,SA0CM3E,GACRA,EAAM+X,SAAU,GAEpB3R,mBA7CM,SA8CFpG,EA9CE,GAgDH,IAAD,EADIE,EACJ,EADIA,QAIF,GAFAF,EAAM+X,SAAU,EAChB/X,EAAM4D,OAAS1D,EAAQ6E,WACnB7E,EAAQiF,aAAc,CACtB,IAAM8lB,EAAQ,eAAeC,KAAKhrB,EAAQiF,cAEtC8lB,GAASA,EAAMxF,SACfzlB,EAAMmF,aAAejF,EAAQiF,aAC7BnF,EAAM0jB,wBAA0BuH,EAAM,IAG1C/qB,EAAQoF,gBACRtF,EAAMsF,cAAgBpF,EAAQoF,eAE9BpF,EAAQ6jB,kBACR/jB,EAAM+jB,gBAAkB7jB,EAAQ6jB,iBAEpC/jB,EAAM6jB,gBAAN,UACIsH,IAAsBjrB,EAAQoF,sBADlC,QAEItF,EAAM6jB,gBACV7jB,EAAM+qB,aAAe,CACjB/lB,IAAUC,OACVD,IAAUE,aACZ7B,SAASnD,EAAQ6E,aAEvByB,mBAzEM,SAyEaxG,EAzEb,GAyE0D,IAApCE,EAAmC,EAAnCA,QACxBF,EAAM+X,SAAU,EAChB/X,EAAMwE,MAAStE,GAAsB,KACrCF,EAAM+qB,cAAe,GAEzBK,YA9EM,SA8EMprB,EA9EN,GA8EyD,IAA1CE,EAAyC,EAAzCA,QACjBF,EAAMikB,cAAgB/jB,GAE1BmrB,aAjFM,SAiFOrrB,EAjFP,GAiF0D,IAA1CE,EAAyC,EAAzCA,QACdF,EAAMikB,gBAAkB/jB,IACxBF,EAAMikB,cAAgB,QAIlClL,cAAe,SAACC,GACZA,EACKC,QAAQxD,KAAkC,SAACzV,EAAOC,GAC/CD,EAAM4D,OAASoB,IAAU4V,gCAE5B0Q,YACG,SAACrrB,GAAD,MACI,CAACqmB,IAAwB/V,IAAiBhC,KACrC1I,KAAI,SAAC1B,GAAD,OAAUA,EAAKwF,cACnBtG,SAASpD,EAAOuL,SACzB,SAACxL,EAAOC,GACJD,EAAMgM,MAAQ7M,EAAa6M,Y,EAqB3Cgf,EAAS7qB,QAdK2L,E,EAAdyM,aACa1M,E,EAAb4M,YACAuG,E,EAAAA,WACAlb,E,EAAAA,mBACAG,E,EAAAA,YACAmH,E,EAAAA,gCACAC,E,EAAAA,kCACA3E,E,EAAAA,kBACAJ,E,EAAAA,iBACA3B,E,EAAAA,YACAyB,E,EAAAA,mBACAI,E,EAAAA,mBACA4kB,E,EAAAA,YACAC,E,EAAAA,aAGWL,MAAf,U","file":"static/js/main.1236e19e.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { createApp } from '@shopify/app-bridge';\n\nconst url = new URL(window.location.href);\nconst search = url.searchParams;\n\nconst initialState = {\n    apiKey: search.get('api_key'),\n    originalHeaders: Array.from(search.entries()),\n    headers: {\n        'X-Shop-Signature': search.get('hmac'), // X-Shop-Signature   - hmac\n        'X-Shop-Ses': search.get('session'), // X-Shop-Ses - session id\n        'X-Shop-Time': search.get('timestamp'), // X-Shop-Time - timestamp\n        'X-Shop-Domain': search.get('shop'), // X-Shop-Domain - shop domain\n        'X-Shop-Locale': search.get('locale'), // X-Shop-Locale - locale\n        'X-Shop-lng': search.get('new_design_language'), // X-Shop-lng - language\n        'X-Shop-Host': search.get('host'), // X-Shop-host - host token ???\n    },\n};\n\n//TODO remove after dubbugging\n// if (!initialState.headers['X-Shop-Signature']) {\nif (false) {\n    // if (window.top == window.self) {\n    // window.location.assign(permissionUrl);\n\n    const config = {\n        // apiKey: store.getState().auth.apiKey ?? '',\n        apiKey: '49e2006401f6ab93d445cb5c74b51bc0',\n        // apiKey: 'd53d160d30d3cde82887670b2c06188b',\n        shopOrigin: search.get('shop') || '',\n        // forceRedirect: true,\n    };\n\n    const redirectUri = window.location.origin;\n\n    const permissionUrl =\n        'https://' +\n        config.shopOrigin +\n        '/admin' +\n        '/oauth/authorize?client_id=' +\n        config.apiKey +\n        '&scope=read_products,read_content&redirect_uri=' +\n        redirectUri;\n\n    // createApp(config);\n    window.location.assign(permissionUrl);\n    // If the current window is the 'child', change the parent's URL with Shopify App Bridge's Redirect action\n}\n// }\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setHeaders(state, action: PayloadAction<typeof initialState.headers>) {\n            state.headers = action.payload;\n        },\n    },\n});\n\nexport const { setHeaders } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport products from './products';\nimport profiles from './profiles';\nimport auth from './auth';\nimport settings from './settings';\nimport subscription from './subscription';\nimport uninstall from './uninstall';\nimport app from './app';\n\n// const rootReducer = combineReducers({\n//     app,\n//     products,\n//     profiles,\n//     auth,\n// });\n\nconst createRootReducer = (history) =>\n    combineReducers({\n        router: connectRouter(history),\n        app,\n        products,\n        profiles,\n        auth,\n        settings,\n        subscription,\n        uninstall,\n    });\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>;\n\nexport default createRootReducer;\n","/* eslint-disable */\n\nexport function buildFormData(formData: FormData, data, parentKey?: string) {\n    if (\n        data &&\n        typeof data === 'object' &&\n        !(data instanceof Date) &&\n        !(data instanceof File)\n    ) {\n        Object.keys(data).forEach((key) => {\n            buildFormData(\n                formData,\n                data[key],\n                parentKey ? `${parentKey}[${key}]` : key\n            );\n        });\n    } else {\n        // const value = data == null ? '' : data;\n\n        formData.append(parentKey!, data);\n    }\n}\n\nexport function jsonToFormData(data) {\n    const formData = new FormData();\n\n    buildFormData(formData, data);\n\n    return formData;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { intl } from '@contexts/LocaleContext';\nimport { toggleConfirmation, toggleToast } from '@redux/reducers/app';\nimport { AxiosError, AxiosRequestConfig } from 'axios';\nimport Axios from 'axios-observable';\nimport store from '../redux/store';\nimport { buildFormData, jsonToFormData } from './utils.ts/buildFormData';\n\nconst axios = Axios;\n\nlet apiHost =\n    __preorder_env__?.REACT_APP_API_HOST || process.env.REACT_APP_API_HOST!;\nif (!apiHost) {\n    throw new Error(\n        'REACT_APP_API_HOST environment variable should be provided'\n    );\n}\n\nif (apiHost.endsWith('/')) {\n    apiHost = apiHost.slice(0, -1);\n}\n\nconst baseURL = apiHost + '/api';\n\nconst instance = axios.create({\n    baseURL,\n});\n\ninstance.interceptors.request.use(function (config) {\n    const headersFromState = store.getState().auth.headers;\n    const headers = Object.keys(headersFromState).reduce((acc, headerName) => {\n        const headerValue = headersFromState[headerName];\n        if (headerValue) {\n            acc[headerName] = headerValue;\n        }\n        return acc;\n    }, {});\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    config.headers.common = { ...config.headers.common, ...headers };\n\n    const withFormData: AxiosRequestConfig['method'][] = [\n        'POST',\n        'post',\n        'PUT',\n        'put',\n        'PATCH',\n        'patch',\n    ];\n\n    if (withFormData.includes(config.method)) {\n        config.data = jsonToFormData(config.data);\n        // eslint-disable-next-line\n        config.headers['Content-Type'] = 'multipart/form-data';\n    }\n\n    return config;\n});\n\ninstance.interceptors.response.use(\n    (response) => response,\n    (err: AxiosError<any>) => {\n        if (err.isAxiosError) {\n            const { message, code, response } = err;\n            const data = response?.data;\n            const status = response?.status;\n\n            if ([423].includes(status ?? 200)) {\n                store.dispatch(\n                    toggleConfirmation({\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                        content: data?.message,\n                        actions: false,\n                        warning: true,\n                    })\n                );\n                throw { message, code, data, status };\n            }\n\n            store.dispatch(toggleToast(errorServerToastPayload));\n            throw { message, code, data, status };\n        }\n        return err;\n    }\n);\n\nfunction getToastPayload(): Parameters<typeof toggleToast>[0] {\n    const content = intl.formatMessage({\n        id: 'app.serverError',\n        defaultMessage: 'Server Error',\n    });\n\n    return { content, error: true };\n}\n\nconst errorServerToastPayload = getToastPayload();\n\nexport { apiHost };\nexport default instance;\n","import { defineMessages } from 'react-intl';\n\nconst PREFIX = 'toast';\nconst singleSaved = (item: string) => `${item} has been succefully saved`;\nconst pluralSaved = (item: string) => `${item} have been succefully saved`;\n\nconst messages = defineMessages({\n    setSettingsSuccess: {\n        id: `${PREFIX}.setSettingsSuccess`,\n        defaultMessage: pluralSaved('Settings'),\n    },\n    bulkEnableWarning: {\n        id: `${PREFIX}.bulkEnableWarning`,\n        defaultMessage:\n            'Changes may take up to 2 minutes to appear. Please contact cs@appbossapps.com for any issues or help. We are happy to help.',\n    },\n});\n\nexport default messages;\n","import { CurrencyShopifyFormat } from '@redux/reducers/app';\nimport { interval, Observable, of } from 'rxjs';\nimport { delay, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\nimport axios from './axios';\nimport isMocksMode from './mocks/mock-env';\nimport { AppStateDTO, AppStatus } from './types/app';\n\nconst prefix = `/app`;\n\nexport type AppStateResponse = AppStateDTO;\n\nlet v = 0;\nconst getAppState = () => {\n    const url = `${prefix}`;\n\n    if (isMocksMode()) {\n        // return interval(1000).pipe(\n        //     take(1),\n        //     tap(() => console.log('status', v++)),\n        //     mergeMap(() =>\n        //         of({\n        //             is_prepared_to_uninstall:\n        //                 v < 3\n        //                     ? UninstallStatus.Progress\n        //                     : UninstallStatus.Complition,\n        //         } as UninstalStatusDTO).pipe(\n        //             tap((s) => console.log('status', s)),\n        //             delay(800)\n        //         )\n        //     )\n        // );\n        return of({\n            // app_status: AppStatus.Active,\n            app_status: v++ < 3 ? AppStatus.Active : AppStatus.Uninstalled,\n            money_format: `$$$ {${CurrencyShopifyFormat.AmountNoDecimals}} `,\n            currency_code: 'RUB',\n        } as AppStateDTO).pipe(\n            tap((s) => console.log('status', s)),\n            delay(800)\n        );\n    }\n\n    return axios.get<AppStateDTO>(url).pipe(map((res) => res.data));\n};\n\nconst appApi = {\n    getAppState,\n} as const;\n\nexport default appApi;\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { from, timer } from 'rxjs';\nimport {\n    catchError,\n    exhaustMap,\n    map,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\nimport { getUninstallStatus } from '@redux/reducers/uninstall';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport appApi from '@api/app';\nimport { AppStatus } from '@api/types/app';\nimport {\n    getAppState,\n    getAppStateFailure,\n    getAppStateSuccess,\n    startPollAppState,\n    stopPollAppState,\n} from '@redux/reducers/app';\nimport { Action } from '@reduxjs/toolkit';\n\nexport const getAppStateEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(getAppState),\n        exhaustMap(() => {\n            return appApi.getAppState().pipe(\n                switchMap((response) => {\n                    const actions: Action<any>[] = [\n                        getAppStateSuccess(response),\n                    ];\n                    if (\n                        [AppStatus.Active, AppStatus.Uninstalled].includes(\n                            response.app_status\n                        )\n                    ) {\n                        actions.push(stopPollAppState());\n                    }\n\n                    return from(actions);\n                }),\n                catchError((err) =>\n                    from([getAppStateFailure(err), stopPollAppState()])\n                )\n            );\n        })\n    );\n\nexport const pollAppStateEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(startPollAppState),\n        switchMap(() =>\n            timer(0, 5000).pipe(\n                takeUntil(\n                    actions$.ofType(stopPollAppState)\n                    // .pipe(tap((v) => console.log('xxx', v)))\n                )\n            )\n        ),\n        map(() => getAppState())\n    );\n","import { PreorderStatus, ProductDTO } from '@api/types';\nconst ProductsListMock: ProductDTO[] = [\n    {\n        id: '5290593779879',\n        title: 'Samsung galaxy--1',\n        bodyHtml: 'This is test product 1',\n        totalInventory: 0,\n        images: [\n            {\n                id: 'gid://shopify/ProductImage/17297342955687',\n                src:\n                    'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/phone1.jpg?v=1591448865',\n            },\n        ],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-08-10T07:55:56Z',\n        createdAt: '2020-06-06T13:07:43Z',\n        variants: {\n            '34801873846439': {\n                id: '34801873846439',\n                profile_id: '123',\n                // price: '28000.00',\n                // price_shopify: '28000.00',\n                price: '15000.55',\n                price_shopify: null,\n                sku: 'p001',\n                title:\n                    'black black black black black black blackblack black black black black black blackblack black black black black black blackblack black black black black black black',\n                image: null,\n                product_id: '5290593779879',\n                preorder_status: PreorderStatus.Activated,\n                preorder_activating_start_date: '2021-01-01T07:55:56Z',\n                preorder_activating_end_date: '2021-01-07T07:55:56Z',\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MjkwNTkzNzc5ODc5LCJsYXN0X3ZhbHVlIjoiNTI5MDU5Mzc3OTg3OSJ9',\n        preorder_status: PreorderStatus.Activated,\n        preorder_activating_start_date: '2021-01-01T07:55:56Z',\n        preorder_activating_end_date: null,\n        profile_id: '123',\n    },\n    {\n        id: '5290597351591',\n        profile_id: '123',\n        title: 'Huawei p30 lite',\n        bodyHtml: 'test item 2',\n        totalInventory: 66,\n        images: [\n            {\n                id: 'gid://shopify/ProductImage/17297352163495',\n                src:\n                    'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/phone2.jpg?v=1591448955',\n            },\n        ],\n        productType: 'AT',\n        vendor: 'testphonestore',\n        updatedAt: '2020-08-13T11:54:52Z',\n        createdAt: '2020-06-06T13:09:14Z',\n        variants: {\n            '34663159070887': {\n                id: '34663159070887',\n                profile_id: '124',\n                price: '15000.00',\n                price_shopify: '15000.00',\n                sku: 'p002',\n                title: 'red',\n                image: null,\n                product_id: '5290597351591',\n                preorder_status: PreorderStatus.Activated,\n                preorder_activating_start_date: '2021-03-01T07:55:56Z',\n                preorder_activating_end_date: '2021-03-01T07:55:56Z',\n            },\n            '34663205175463': {\n                id: '34663205175463',\n                profile_id: '124',\n                price: '15000.00',\n                price_shopify: '15000.00',\n                sku: 'p232',\n                title: 'ytllopw',\n                image: null,\n                product_id: '5290597351591',\n                preorder_status: PreorderStatus.Activated,\n                preorder_activating_start_date: '2021-01-01T07:55:56Z',\n                preorder_activating_end_date: '2021-01-01T07:55:56Z',\n            },\n            '34663205175468': {\n                id: '34663205175468',\n                profile_id: '125',\n                price: '3000.00',\n                price_shopify: '3000.00',\n                sku: 'p232',\n                title: 'ytllopw',\n                image: null,\n                product_id: '5290597351591',\n                preorder_status: PreorderStatus.Activated,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MjkwNTk3MzUxNTkxLCJsYXN0X3ZhbHVlIjoiNTI5MDU5NzM1MTU5MSJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: '2020-10-21T10:31:39.751Z',\n        preorder_activating_end_date: '2021-12-31T10:31:39.751Z',\n    },\n    {\n        id: '5290600104103',\n        profile_id: null,\n        title: 'Iphone 11',\n        bodyHtml: 'test item 3',\n        totalInventory: 0,\n        images: [\n            {\n                id: 'gid://shopify/ProductImage/17297359732903',\n                src:\n                    'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/phone3.jpg?v=1591449023',\n            },\n        ],\n        productType: 'MT',\n        vendor: 'testphonestore33',\n        updatedAt: '2020-07-11T08:53:07Z',\n        createdAt: '2020-06-06T13:10:22Z',\n        variants: {\n            '34663225786535': {\n                id: '34663225786535',\n                profile_id: '123',\n                price: '30000.00',\n                price_shopify: '30000.00',\n                sku: 'p003',\n                title: '10',\n                image: null,\n                product_id: '5290600104103',\n                preorder_status: PreorderStatus.Enabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n            '34663225819303': {\n                id: '34663225819303',\n                profile_id: null,\n                price: '30000.00',\n                price_shopify: '30000.00',\n                sku: 'p004',\n                title: '20',\n                image: null,\n                product_id: '5290600104103',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MjkwNjAwMTA0MTAzLCJsYXN0X3ZhbHVlIjoiNTI5MDYwMDEwNDEwMyJ9',\n        preorder_status: PreorderStatus.Enabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5315712975015',\n        profile_id: '124',\n        title: 'LG phone',\n        bodyHtml: 'test item 4',\n        totalInventory: 0,\n        images: [\n            {\n                id: '',\n                src:\n                    'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/lg.jpg?v=1591875516',\n            },\n        ],\n        productType: '',\n        vendor: 'testphonestore44',\n        updatedAt: '2020-07-11T08:53:08Z',\n        createdAt: '2020-06-11T11:36:54Z',\n        variants: {\n            '34675319472295': {\n                id: '34675319472295',\n                profile_id: '123',\n                price: '8500.00',\n                price_shopify: '8500.00',\n                sku: 'p005',\n                title: 'Default Title',\n                image: null,\n                product_id: '5315712975015',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MzE1NzEyOTc1MDE1LCJsYXN0X3ZhbHVlIjoiNTMxNTcxMjk3NTAxNSJ9',\n        preorder_status: PreorderStatus.Enabled,\n        preorder_activating_start_date: '2021-01-01T07:55:56Z',\n        preorder_activating_end_date: '2021-01-01T07:55:56Z',\n    },\n    {\n        id: '5364780335271',\n        profile_id: '123',\n        title: 'Nokia',\n        bodyHtml: 'Test product Nokia',\n        totalInventory: 4,\n        images: [],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-07-27T17:25:52Z',\n        createdAt: '2020-06-22T15:45:55Z',\n        variants: {\n            '35021504381095': {\n                id: '35021504381095',\n                profile_id: '123',\n                price: '1800.00',\n                price_shopify: '1800.00',\n                sku: 'n-123',\n                title: '1',\n                image: null,\n                product_id: '5364780335271',\n                preorder_status: PreorderStatus.Enabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n            '35021504413863': {\n                id: '35021504413863',\n                profile_id: '123',\n                price: '1800.00',\n                price_shopify: '1800.00',\n                sku: 'n-124',\n                title: '2',\n                image: null,\n                product_id: '5364780335271',\n                preorder_status: PreorderStatus.Activated,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MzY0NzgwMzM1MjcxLCJsYXN0X3ZhbHVlIjoiNTM2NDc4MDMzNTI3MSJ9',\n        preorder_status: PreorderStatus.Activated,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5372512665767',\n        profile_id: '123',\n        title: 'Xiaomi redmi note 9',\n        bodyHtml: 'Test Add product event for webhook',\n        totalInventory: 1,\n        images: [\n            {\n                id: 'gid://shopify/ProductImage/18655811993767',\n                src:\n                    'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/phone1_6d22f739-47cd-47ea-b626-10d54dc226cc.jpg?v=1597231573',\n            },\n        ],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-08-12T11:27:08Z',\n        createdAt: '2020-06-23T21:01:16Z',\n        variants: {\n            '35743396495527': {\n                id: '35743396495527',\n                profile_id: '123',\n                price: '7899.00',\n                price_shopify: '7899.00',\n                sku: '',\n                title: 'red',\n                image: {\n                    id: 'gid://shopify/ProductImage/18655840239783',\n                    src:\n                        'https://cdn.shopify.com/s/files/1/0402/9851/2551/products/lg_09acb976-3343-4ba5-8ecc-7d5a94ead5c3.jpg?v=1597231573',\n                },\n                product_id: '5372512665767',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n            '35743396561063': {\n                id: '35743396561063',\n                profile_id: '123',\n                price: '7899.00',\n                price_shopify: '7899.00',\n                sku: '',\n                title: 'green',\n                image: null,\n                product_id: '5372512665767',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MzcyNTEyNjY1NzY3LCJsYXN0X3ZhbHVlIjoiNTM3MjUxMjY2NTc2NyJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5372523675815',\n        profile_id: '123',\n        title: 'FlyWWzxc',\n        bodyHtml: 'Test product added event for webhook 2WWW',\n        totalInventory: 11,\n        images: [],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-07-20T11:06:00Z',\n        createdAt: '2020-06-23T21:04:22Z',\n        variants: {\n            '34879874367655': {\n                id: '34879874367655',\n                profile_id: '123',\n                price: '7010.00',\n                price_shopify: '7010.00',\n                sku: 'q12',\n                title: 'Default Title',\n                image: null,\n                product_id: '5372523675815',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1MzcyNTIzNjc1ODE1LCJsYXN0X3ZhbHVlIjoiNTM3MjUyMzY3NTgxNSJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5375961694375',\n        profile_id: '123',\n        title: 'Lenovo',\n        bodyHtml: 'test webhook 3',\n        totalInventory: 3,\n        images: [],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-07-11T08:53:07Z',\n        createdAt: '2020-06-24T10:30:33Z',\n        variants: {\n            '34892006293671': {\n                id: '34892006293671',\n                profile_id: '123',\n                price: '7800.00',\n                price_shopify: '7800.00',\n                sku: 's123777',\n                title: 'Default Title',\n                image: null,\n                product_id: '5375961694375',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1Mzc1OTYxNjk0Mzc1LCJsYXN0X3ZhbHVlIjoiNTM3NTk2MTY5NDM3NSJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5377090289831',\n        profile_id: '123',\n        title: 'Alcatel',\n        bodyHtml: 'Test Webhook Jobn',\n        totalInventory: -3,\n        images: [],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-07-15T17:56:51Z',\n        createdAt: '2020-06-24T16:40:30Z',\n        variants: {\n            '34913502101671': {\n                id: '34913502101671',\n                profile_id: '123',\n                price: '78.00',\n                price_shopify: '78.00',\n                sku: 'st1999',\n                title: 'green',\n                image: null,\n                product_id: '5377090289831',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n            '34913502134439': {\n                id: '34913502134439',\n                profile_id: '123',\n                price: '91.00',\n                price_shopify: '91.00',\n                sku: 'st2000',\n                title: 'Red',\n                image: null,\n                product_id: '5377090289831',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1Mzc3MDkwMjg5ODMxLCJsYXN0X3ZhbHVlIjoiNTM3NzA5MDI4OTgzMSJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '5377100611751',\n        profile_id: '123',\n        title: 'LG2GG',\n        bodyHtml: 'Tdfd',\n        totalInventory: 9,\n        images: [],\n        productType: '',\n        vendor: 'testphonestore',\n        updatedAt: '2020-07-11T08:53:08Z',\n        createdAt: '2020-06-24T16:43:20Z',\n        variants: {\n            '35011451256999': {\n                id: '35011451256999',\n                profile_id: '123',\n                price: '5000.00',\n                price_shopify: '5000.00',\n                sku: 'gh89',\n                title: '1',\n                image: null,\n                product_id: '5377100611751',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n            '35011451289767': {\n                id: '35011451289767',\n                profile_id: '123',\n                price: '5000.00',\n                price_shopify: '5000.00',\n                sku: 'gh90',\n                title: '2',\n                image: null,\n                product_id: '5377100611751',\n                preorder_status: PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo1Mzc3MTAwNjExNzUxLCJsYXN0X3ZhbHVlIjoiNTM3NzEwMDYxMTc1MSJ9',\n        preorder_status: PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n    },\n    {\n        id: '6621269950628',\n        title: 'product without variants 1',\n        bodyHtml: 'product without variants 1',\n        totalInventory: 0,\n        images: [],\n        productType: '',\n        vendor: 'testscriptstore2',\n        updatedAt: '2021-04-02T13:47:16Z',\n        createdAt: '2021-03-29T17:04:22Z',\n        variants: {\n            '39543325229220': {\n                id: '39543325229220',\n                price: '215.00',\n                sku: '',\n                title: 'Default Title',\n                image: null,\n                product_id: '6621269950628',\n                price_shopify: '215.00',\n                preorder_status: 'activated' as PreorderStatus.Disabled,\n                preorder_activating_start_date: null,\n                preorder_activating_end_date: null,\n                profile_id: null,\n            },\n        },\n        cursor:\n            'eyJsYXN0X2lkIjo2NjIxMjY5OTUwNjI4LCJsYXN0X3ZhbHVlIjoicHJvZHVjdCB3aXRob3V0IHZhcmlhbnRzIDEifQ==',\n        preorder_status: 'enabled' as PreorderStatus.Disabled,\n        preorder_activating_start_date: null,\n        preorder_activating_end_date: null,\n        profile_id: null,\n    },\n];\n\nexport default ProductsListMock;\n","import { PreorderStatus, ProductDTO, ProductSettingsDTO } from '@api/types';\nimport isMocksMode from './mock-env';\nconst ProductSettingsMock: ProductSettingsDTO = {\n    /**\n     * Price\n     */\n    price_change_value: '-1000000000',\n    /**\n     * Amount\n     */\n    price_type: 'relative_amount',\n    /**\n     * Inventory limit\n     */\n    inventory_limit: 100,\n    /**\n     * Button text\n     */\n    button_text: 'Text',\n    /**\n     * Button message\n     */\n    button_message: 'Message',\n    /**\n     * Start preorder date\n     */\n    // start_date: '2021-05-05T07:55:56Z',\n    /**\n     * End preorder date\n     */\n    // end_date: '2021-01-18T12:00:00.000000Z',\n    // availability_date: '2021-04-20T07:55:56Z',\n};\n\nexport default ProductSettingsMock;\n","import axios from './axios';\nimport {\n    Filter,\n    FiltersState,\n    PageInfo,\n    PageInfoResponse,\n    PreorderStatus,\n    ProductDTO,\n    SortState,\n    UpdateItemsParams,\n} from './types/common';\nimport productsList from './mocks/productsList';\nimport productSettings from './mocks/productSettings';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { ProductSettingsDTO } from './types';\nimport isMocksMode from './mocks/mock-env';\n\nconst prefix = '/products';\n\nexport interface ProductsResponse {\n    products: ProductDTO[];\n    pageInfo: PageInfoResponse;\n}\n\nexport type ProductSettingsResponse = ProductSettingsDTO;\n\ninterface GetProductsParams {\n    filter: FiltersState;\n    pageInfo: PageInfo;\n    sort: SortState;\n}\n\nconst getProducts = (\n    params: GetProductsParams\n): Observable<ProductsResponse> => {\n    const url = `${prefix}`;\n    const searchParams = new URLSearchParams();\n    if (params.filter.availiability) {\n        searchParams.set('filter', params.filter.availiability);\n    }\n\n    if (params.filter.query) {\n        searchParams.set('title', params.filter.query);\n    }\n\n    searchParams.set('sort_dir', params.sort.dir);\n    searchParams.set('sort_field', params.sort.field);\n    searchParams.set('per_page', String(params.pageInfo.pageSize));\n    searchParams.set('page_direction', params.pageInfo.pageDirection);\n    if (params.pageInfo.cursor) {\n        searchParams.set('cursor', params.pageInfo.cursor);\n    }\n    const search = searchParams.toString();\n\n    if (isMocksMode()) {\n        return of({\n            products: [\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n                // ...productsList,\n\n                productsList[0],\n            ],\n            pageInfo: {\n                hasNextPage: true,\n                hasPreviousPage: false,\n            },\n        }).pipe(delay(800));\n    }\n    // eslint-disable-next-line  no-constant-condition\n    return axios\n        .get<ProductsResponse>(url + '?' + search.toString())\n        .pipe(map((res) => res.data));\n};\n\nexport interface UpdateStatusBulkResponse { }\nexport interface UpdateSettingsResponse { }\n\nexport interface UpdateStatusBulkParams {\n    status: PreorderStatus;\n    items: {\n        productId: string;\n        variantId?: string;\n    }[];\n}\n\nexport interface UpdateSettingsParams extends UpdateItemsParams {\n    settings: ProductSettingsDTO;\n}\n\nconst updateProductsAndVariantsStatusBulk = (\n    params: UpdateStatusBulkParams\n): Observable<UpdateStatusBulkResponse | boolean> => {\n    const url = `${prefix}/status`;\n    const searchParams = new URLSearchParams();\n\n    if (isMocksMode()) {\n        return of(\n            true && {\n                products: [\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                    ...productsList,\n                ],\n                pageInfo: {\n                    hasNextPage: true,\n                    hasPreviousPage: false,\n                },\n            }\n        ).pipe(delay(800));\n    }\n\n    // eslint-disable-next-line  no-constant-condition\n    return axios\n        .post<ProductsResponse>(url, params)\n        .pipe(map((res) => res.status !== 205));\n};\n\ninterface GetProductSettingsParams {\n    variantId?: string;\n    productId: string;\n}\n\nconst getProductSettings = (\n    params: GetProductSettingsParams\n): Observable<ProductSettingsResponse> => {\n    const url = `${prefix}/settings/${params.productId}`;\n    const searchParams = new URLSearchParams();\n    if (params.variantId) {\n        searchParams.set('variant_id', params.variantId);\n    }\n    const search = searchParams.toString();\n\n    if (isMocksMode()) {\n        return of(productSettings).pipe(\n            delay(800)\n            // map((_) => {\n            //     throw new Error();\n            // })\n        );\n    }\n    // eslint-disable-next-line  no-constant-condition\n    return axios\n        .get<ProductSettingsResponse>(\n            url + (params.variantId ? '?' + search.toString() : '')\n        )\n        .pipe(map((res) => res.data));\n};\n\nconst updateProductsSettings = (\n    params: UpdateSettingsParams\n): Observable<UpdateSettingsResponse> => {\n    const url = `${prefix}/settings`;\n    const searchParams = new URLSearchParams();\n\n    if (isMocksMode()) {\n        return of({\n            products: [\n                ...productsList,\n                ...productsList,\n                ...productsList,\n                ...productsList,\n                ...productsList,\n                ...productsList,\n                ...productsList,\n                ...productsList,\n            ],\n            pageInfo: {\n                hasNextPage: true,\n                hasPreviousPage: false,\n            },\n        }).pipe(delay(800));\n    }\n\n    // eslint-disable-next-line  no-constant-condition\n    return axios\n        .post<ProductsResponse>(url, params)\n        .pipe(map((res) => res.data));\n};\n\nconst productsApi = {\n    getProducts,\n    getProductSettings,\n    updateProductsAndVariantsStatusBulk,\n    updateProductsSettings,\n} as const;\n\nexport default productsApi;\n","import { ActionFrom } from '@api/types';\nimport { intl } from '@contexts/LocaleContext';\nimport {\n    handlePrimaryConfirmationAction,\n    handleSecondaryConfirmationAction,\n    startAppLoading,\n    stopAppLoading,\n    toggleConfirmation,\n    toggleToast,\n} from '@redux/reducers/app';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { Action, ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { MessageDescriptor } from 'react-intl';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { EMPTY, from, iif, Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, startWith, switchMap, take } from 'rxjs/operators';\nimport messages from './messages';\n\nconst confirmationControl = (function () {\n    // const innerActions$ = new Subject<Action>();\n    let innerActions$: ActionsObservable<any>;\n    let innerState$: StateObservable<RootState>;\n\n    const innerActionEpic = (\n        actions$: ActionsObservable<any>,\n        state$: StateObservable<RootState>\n    ) => {\n        // actions$.subscribe(innerActions$);\n        innerActions$ = actions$;\n        innerState$ = state$;\n        return EMPTY;\n    };\n\n    const withConfirmation = <T extends ActionCreatorWithPayload<any, string>>(\n        confirmationState: (\n            action: ActionFrom<T>\n        ) => ActionFrom<typeof toggleConfirmation>['payload'],\n        afterConfirmation?: (\n            action: ActionFrom<T>\n        ) => Observable<{\n            payload: any;\n            type: string;\n        }>\n    ) => (source: Observable<any>) => {\n        return source.pipe(\n            switchMap((action: ActionFrom<T>) =>\n                innerActions$\n                    .pipe(\n                        ofType(\n                            handlePrimaryConfirmationAction,\n                            handleSecondaryConfirmationAction\n                        ),\n                        take(1),\n                        switchMap((innerAction: { type: string }) => {\n                            if (\n                                !afterConfirmation ||\n                                innerAction.type ===\n                                handleSecondaryConfirmationAction.toString()\n                            ) {\n                                return of({ type: 'noop' });\n                            }\n\n                            return afterConfirmation(action);\n                        })\n                    )\n                    .pipe(\n                        startWith(toggleConfirmation(confirmationState(action)))\n                    )\n            )\n        );\n    };\n\n    const withAppLoading = <T extends ActionCreatorWithPayload<any, string>>(\n        handler: (\n            action: ActionFrom<T>,\n            state: RootState\n        ) => Observable<{\n            payload: any;\n            type: string;\n        }>\n    ) => (source: Observable<any>) => {\n        return source.pipe(\n            switchMap((action: ActionFrom<T>) =>\n                handler(action, innerState$.value).pipe(\n                    switchMap((action: ActionFrom<T>) =>\n                        from([action, stopAppLoading()])\n                    ),\n                    startWith(startAppLoading())\n                )\n            )\n        );\n    };\n\n    const mapWithToast = <T extends ActionCreatorWithPayload<any, string>>(\n        toast:\n            | MessageDescriptor\n            | (Omit<\n                NonNullable<Parameters<typeof toggleToast>[0]>,\n                'content'\n            > & {\n                content: MessageDescriptor;\n            }),\n        mapResult: (...args: any) => ActionFrom<any>\n        // handler: (\n        //     action: ActionFrom<T>,\n        //     state: RootState\n        // ) => Observable<{\n        //     payload: any;\n        //     type: string;\n        // }>\n    ) => (source: Observable<any>) => {\n        let content: string;\n        let payload;\n        if ('content' in toast) {\n            content = intl.formatMessage(toast.content);\n            payload = { ...toast, content };\n        } else {\n            content = intl.formatMessage(toast);\n            payload = { content };\n        }\n\n        return source.pipe(\n            switchMap((result: any) =>\n                // handler(action, innerState$.value).pipe(\n                //     switchMap((action: ActionFrom<T>) => of(action)),\n                //     startWith(toggleToast(payload))\n                // )\n                from([mapResult(result), toggleToast(payload)])\n            )\n        );\n    };\n\n    return { innerActionEpic, withConfirmation, withAppLoading, mapWithToast };\n})();\n\nexport const toggleBulkEnableWarning = () =>\n    toggleToast({\n        content: intl.formatMessage(messages.bulkEnableWarning),\n        duration: 30000,\n    });\n\nexport const {\n    innerActionEpic,\n    withConfirmation,\n    withAppLoading,\n    mapWithToast,\n} = confirmationControl;\n","import productsApi, { UpdateStatusBulkParams } from '@api/products';\nimport { ActionFrom, PageDirection, PreorderStatus } from '@api/types';\nimport { intl } from '@contexts/LocaleContext';\nimport { toggleConfirmation, toggleToast } from '@redux/reducers/app';\nimport {\n    assignProfileFailure,\n    assignProfileSuccess,\n    bulkEnable,\n    bulkEnableFailure,\n    bulkEnableFailureByPlan,\n    bulkEnableSuccess,\n    fetchProducts,\n    fetchProductSettings,\n    fetchProductsWithQuery,\n    fetchProductsWithQueryStart,\n    getProductSettingsFailure,\n    getProductSettingsSuccess,\n    getProductsFailure,\n    getProductsSuccess,\n    setPage,\n    setSettings,\n    setSettingsFailure,\n    setSettingsSuccess,\n    setSort,\n    setStatus,\n    startLoadingProducts,\n    unassignProfileFailure,\n    unassignProfileSuccess,\n    updateProductsAndVariantsStatusBulk,\n} from '@redux/reducers/products';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { go, push } from 'connected-react-router';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { EMPTY, from, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    startWith,\n    switchMap,\n} from 'rxjs/operators';\nimport messages from './messages';\nimport {\n    withConfirmation,\n    mapWithToast,\n    toggleBulkEnableWarning,\n} from './utils';\n\nexport const fetchProductsEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType<any>(\n            fetchProducts,\n            fetchProductsWithQueryStart,\n            setSort,\n            setPage\n        ),\n        switchMap(() => {\n            const state = state$.value.products;\n            const filter = state.filters;\n            const pageInfo = { ...state.pageInfo };\n            const sort = state.sort;\n\n            return productsApi\n                .getProducts({\n                    filter,\n                    pageInfo,\n                    sort,\n                })\n                .pipe(\n                    map((products) => getProductsSuccess(products)),\n                    catchError((err) => of(getProductsFailure(err)))\n                );\n        })\n    );\n\nexport const fetchProductsWithQueryEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(fetchProductsWithQuery),\n        debounceTime(600),\n        map(fetchProductsWithQueryStart)\n    );\n\nexport const updateProductsAndVariantsStatusBulkEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(updateProductsAndVariantsStatusBulk),\n        switchMap(\n            (\n                action: ActionFrom<typeof updateProductsAndVariantsStatusBulk>\n            ) => {\n                const { products, variants, enabled } = action.payload;\n\n                const status = enabled\n                    ? PreorderStatus.Enabled\n                    : PreorderStatus.Disabled;\n\n                const items: UpdateStatusBulkParams['items'] = [];\n\n                for (const variant of variants) {\n                    items.push({\n                        productId: variant.product_id,\n                        variantId: variant.id,\n                    });\n                }\n\n                for (const product of products) {\n                    items.push({\n                        productId: product.id,\n                    });\n                }\n\n                return productsApi\n                    .updateProductsAndVariantsStatusBulk({ items, status })\n                    .pipe(\n                        switchMap((result) =>\n                            result === false\n                                ? from([\n                                    bulkEnableFailureByPlan(),\n                                    fetchProducts(),\n                                ])\n                                : of(setPage(PageDirection.Same))\n                        ),\n                        catchError(() => of(fetchProducts()))\n                    );\n            }\n        )\n    );\n\nexport const setStatusEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(setStatus),\n        map((action: ActionFrom<typeof setStatus>) => {\n            const { id, enabled, isVariant } = action.payload;\n            const state = state$.value.products;\n\n            type Payload = ActionFrom<\n                typeof updateProductsAndVariantsStatusBulk\n            >['payload'];\n\n            const payload: Payload = {\n                enabled,\n                products: [],\n                variants: [],\n            };\n\n            if (isVariant) {\n                const variant = state.variantsById[id];\n                payload.variants.push(variant);\n\n                const product = state.productsById[variant.product_id];\n\n                let allSame = true;\n                product.variants.forEach((variantId) => {\n                    if (id !== variantId) {\n                        const variant = state.variantsById[variantId];\n                        allSame = allSame && variant.enabled === enabled;\n                    }\n                });\n\n                if (\n                    (allSame && enabled) ||\n                    (!allSame && !enabled && product.enabled)\n                ) {\n                    payload.products.push(product);\n                }\n            } else {\n                const product = state.productsById[id];\n                payload.products.push(product);\n\n                payload.variants.push(\n                    ...product.variants.map((id) => state.variantsById[id])\n                );\n                // product.enabled = enabled; //getPreorderEnableStatus(product);\n                // product.variants.forEach((variantId) => {\n                //     const variant = state.variantsById[variantId];\n                //     // variant.enabled = enabled;\n                // });\n            }\n\n            return updateProductsAndVariantsStatusBulk(payload);\n        })\n    );\n\nexport const setStatusSuccessEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(setSettingsSuccess),\n        map(() => {\n            return setPage(PageDirection.Same);\n        })\n    );\n\nexport const setSettingsEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(setSettings),\n        switchMap(({ payload }: ActionFrom<typeof setSettings>) => {\n            const state = state$.value.products;\n            const item = payload.items[0];\n\n            if (!item.variantId) {\n                const variants: typeof payload.items = state.productsById[\n                    item.productId\n                ].variants.map((variantId) => ({\n                    productId: item.productId,\n                    variantId,\n                }));\n                payload.items.push(...variants);\n            }\n\n            return productsApi.updateProductsSettings(payload).pipe(\n                map(() => setSettingsSuccess(true)),\n                // mapWithToast(messages.setSettingsSuccess, () =>\n                //     setSettingsSuccess(true)\n                // ),\n                catchError((err) => of(setSettingsFailure(err)))\n            );\n        })\n    );\n\nexport const fetchProductsSettingsEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(fetchProductSettings),\n        switchMap((action: ActionFrom<typeof fetchProductSettings>) => {\n            return productsApi.getProductSettings(action.payload).pipe(\n                map((settings) => getProductSettingsSuccess(settings)),\n                catchError((err) => of(getProductSettingsFailure(err)))\n            );\n        })\n    );\n\nexport const bulkEnableEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(bulkEnable),\n        withConfirmation<typeof bulkEnable>(\n            (action) => ({\n                content: `Are you sure you want to ${action.payload === undefined ? 'enable' : 'disable'\n                    } selected items ? `,\n            }),\n            (action) => {\n                const state = state$.value.products;\n                const variantsItems = state.selectedProducts.variantsIds.map(\n                    (id) => ({\n                        productId: state.variantsById[id].product_id,\n                        variantId: id,\n                    })\n                );\n\n                const productItems = state.selectedProducts.productsIds.map(\n                    (productId) => ({ productId })\n                );\n\n                const items = [...productItems, ...variantsItems];\n\n                const status =\n                    action.payload === undefined\n                        ? PreorderStatus.Enabled\n                        : PreorderStatus.Disabled;\n\n                return productsApi\n                    .updateProductsAndVariantsStatusBulk({\n                        items,\n                        status,\n                    })\n                    .pipe(\n                        switchMap((result) =>\n                            result === false\n                                ? from([\n                                    bulkEnableFailureByPlan(),\n                                    toggleToast(),\n                                    fetchProducts(),\n                                ])\n                                : of(bulkEnableSuccess(true))\n                        ),\n                        catchError((err) => of(bulkEnableFailure(err))),\n                        startWith(\n                            startLoadingProducts(),\n                            toggleBulkEnableWarning()\n                        )\n                    );\n            }\n        )\n    );\n\nexport const bulkEnableSuccessEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(bulkEnableSuccess),\n        // mapWithToast(\n        //     { content: messages.bulkEnableWarning, duration: 30000 },\n        //     () => ({\n        //         type: 'noop',\n        //         payload: null,\n        //     })\n        // )\n        map((action: ActionFrom<typeof bulkEnableSuccess>) => {\n            return { type: 'noop' }; //fetchProducts();\n        })\n    );\n\nexport const bulkEnableFailureByPlanEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(bulkEnableFailureByPlan),\n        withConfirmation<typeof bulkEnableFailureByPlan>(\n            () => ({\n                content: `Upgrade Required\\n\\n Upgrade to enable UNLIMITED Products for just $29.99 per month`,\n                actions: {\n                    primary: 'Upgrade',\n                    secondary: 'Stay on Free Plan',\n                },\n            }),\n            (action) => {\n                return of(push('/subscription'));\n            }\n        )\n        // map((action: ActionFrom<typeof bulkEnableFailureByPlan>) => {\n        //     return toggleConfirmation({\n        //         content: `The enabling has failed. You are able to activate up to 3 products on Free Plan.\\n Please upgrade your plan to get more.`,\n        //         actions: {\n        //             primary: 'Upgrade',\n        //             secondary: 'Stay on Free Plan',\n        //         },\n        //         warning: true,\n        //     });\n        // })\n    );\n\nexport const refetchOnSuccessEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType<any>(\n            bulkEnableSuccess,\n            assignProfileSuccess,\n            assignProfileFailure,\n            unassignProfileSuccess,\n            unassignProfileFailure\n        ),\n        map((action: ActionFrom<unknown>) => {\n            return fetchProducts();\n        })\n    );\n","import { ProfileDTO } from '@api/types';\n/* eslint-disable*/\n\nconst ProfilesListMock: ProfileDTO[]\n    = [\n        {\n            id: '123',\n            user_id: '',\n            name: 'Profile 123',\n            price_type: 'relative_percent',\n            price_change_value: \"-120\",\n            inventory_limit: 100,\n            button_text: 'Button Profile 123',\n            button_message: 'Button Profile 123',\n            start_date: '2021-08-05T07:55:56Z',\n            end_date: '2021-08-15T07:55:56Z',\n            creted_at: '',\n            updated_at: '',\n            is_default: true,\n        },\n        {\n            id: '124',\n            user_id: '',\n            name: 'Profile 124',\n            price_type: 'specific',\n            price_change_value: \"20000\",\n            // price_change_value: null,\n            inventory_limit: 100,\n            button_text: '',\n            button_message: '',\n            start_date: '2020-08-02T07:55:56Z',\n            end_date: '2020-08-22T07:55:56Z',\n            creted_at: '',\n            updated_at: '',\n            is_default: false,\n        },\n        {\n            id: '125',\n            user_id: '',\n            name: 'Profile 125',\n            price_type: 'relative_percent',\n            price_change_value: \"-20\",\n            inventory_limit: 100,\n            button_text: '',\n            button_message: '',\n            start_date: '',\n            end_date: '',\n            creted_at: '',\n            updated_at: '',\n            is_default: false,\n        },\n    ];\n\nexport default ProfilesListMock;\n","import { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport axios from './axios';\nimport isMocksMode from './mocks/mock-env';\nimport profilesList from './mocks/profiles/profilesList';\nimport { ProductSettingsDTO, ProfileDTO } from './types';\nimport {\n    FiltersState,\n    PageInfo,\n    PageInfoResponse,\n    SortState,\n    UpdateItemsParams,\n} from './types/common';\n\n// const prefix = '/profiles';\n// export interface ProfilesResponse {\n//     profiles: ProfileDTO[];\n//     pageInfo: PageInfoResponse;\n// }\nconst prefix = '/profiles';\n// export interface ProfilesResponse {\n//     profiles: ProfileDTO[];\n//     pageInfo: PageInfoResponse;\n// }\nexport type ProfilesResponse = ProfileDTO[];\nexport type ProfileResponse = ProfileDTO;\n\ninterface GetProfilesParams {\n    filter: FiltersState;\n    pageInfo: PageInfo;\n    sort: SortState;\n}\n\nconst updateProfile = (params: ProfileDTO): Observable<ProfileDTO> => {\n    const { id, ...data } = params;\n    let url = `${prefix}`;\n    const method = axios.post.bind(axios);\n\n    if (id) {\n        url += `/${id}`;\n    }\n\n    // eslint-disable-next-line  no-constant-condition\n    return method<ProfileDTO>(url, data).pipe(map((res) => res.data));\n};\n\nexport interface ApplyProfilesParams extends UpdateItemsParams {\n    id: string;\n}\n\nconst applyProfile = (params: ApplyProfilesParams): Observable<ProfileDTO> => {\n    const { id, ...data } = params;\n    const url = `${prefix}/${id}/apply`;\n\n    if (isMocksMode()) {\n        return of(profilesList[0]).pipe(delay(800));\n    }\n\n    // eslint-disable-next-line  no-constant-condition\n    return axios.post<ProfileDTO>(url, data).pipe(map((res) => res.data));\n};\n\nconst unassignProfile = (\n    params: ApplyProfilesParams\n): Observable<ProfileDTO> => {\n    const { id, ...data } = params;\n    const url = `${prefix}/unassign`;\n\n    // if (isMocksMode()) {\n    //     return of(profilesList[0]).pipe(delay(800));\n    // }\n\n    return axios.post<ProfileDTO>(url, data).pipe(map((res) => res.data));\n};\n\nconst getProfiles = (params: GetProfilesParams) => {\n    const url = `${prefix}`;\n    const searchParams = new URLSearchParams();\n    // searchParams.set('filter', params.filter.availiability);\n    if (params.filter.query) {\n        searchParams.set('name', params.filter.query);\n    }\n\n\n    if (params.filter.query) {\n        searchParams.set('sort_dir', params.sort.dir);\n        searchParams.set('sort_field', params.sort.field);\n    }\n\n    if (params.filter.query) {\n        searchParams.set('per_page', String(params.pageInfo.pageSize));\n        searchParams.set('page_direction', params.pageInfo.pageDirection);\n        searchParams.set('cursor', params.pageInfo.cursor);\n    }\n\n    const search = searchParams.toString();\n\n    if (isMocksMode()) {\n        // return of({\n        //     profiles: [...profilesList],\n        //     pageInfo: {\n        //         hasNextPage: true,\n        //         hasPreviousPage: false,\n        //     },\n        // }).pipe(delay(800));\n        return of(profilesList).pipe(delay(800));\n    }\n\n    return axios.get<ProfilesResponse>(url + '?' + search.toString()).pipe(map((res) => res.data));\n};\n\nconst getProfile = (id: string) => {\n    const url = `${prefix}/${id}`;\n\n    if (isMocksMode()) {\n        return of(profilesList[0]).pipe(delay(800));\n    }\n\n    return axios.get<ProfileResponse>(url).pipe(map((res) => res.data));\n};\n\nconst deleteProfile = (profile: ProfileDTO): Observable<ProfileDTO> => {\n    const url = `${prefix}/${profile.id}`;\n\n    return axios.delete<ProfileDTO>(url).pipe(map((res) => res.data));\n};\n\nconst profilesApi = {\n    getProfiles,\n    updateProfile,\n    applyProfile,\n    unassignProfile,\n    getProfile,\n    deleteProfile,\n} as const;\n\nexport default profilesApi;\n","/* eslint-disable*/\n\nimport { AppSettingsDTO } from \"@api/types/settings\";\n\nconst AppSettingsMock: AppSettingsDTO = {\n    \"design_settings\": {\n        // \"user_id\": '1',\n        // \"created_at\": \"2020-11-12T08:33:29.000000Z\",\n        // \"updated_at\": \"2020-11-12T08:33:29.000000Z\",\n        \"current\": {\n            \"preorder\": {\n                \"button\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#182CD9\",\n                    \"border_color\": \"#182CD9\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"hover\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#4FA7EC\",\n                    \"border_color\": \"#4FA7EC\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"message\": {\n                    \"color\": \"#898989\",\n                    \"background_color\": \"initial\",\n                    \"border_color\": \"initial\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"14px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"0\",\n                    \"border_width\": \"0\",\n                    \"padding_top\": \"0\",\n                    \"padding_bottom\": \"0\",\n                    \"padding_right\": \"0\",\n                    \"padding_left\": \"0\"\n                }\n            },\n            \"checkout\": {\n                \"button\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#182CD9\",\n                    \"border_color\": \"#182CD9\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"hover\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#4FA7EC\",\n                    \"border_color\": \"#4FA7EC\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"message\": {\n                    \"color\": \"#898989\",\n                    \"background_color\": \"initial\",\n                    \"border_color\": \"initial\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"14px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"0\",\n                    \"border_width\": \"0\",\n                    \"padding_top\": \"0\",\n                    \"padding_bottom\": \"0\",\n                    \"padding_right\": \"0\",\n                    \"padding_left\": \"0\"\n                }\n            }\n        },\n        \"default\": {\n            \"preorder\": {\n                \"button\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#182CD9\",\n                    \"border_color\": \"#182CD9\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"hover\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#4FA7EC\",\n                    \"border_color\": \"#4FA7EC\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"message\": {\n                    \"color\": \"#898989\",\n                    \"background_color\": \"initial\",\n                    \"border_color\": \"initial\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"14px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"0\",\n                    \"border_width\": \"0\",\n                    \"padding_top\": \"0\",\n                    \"padding_bottom\": \"0\",\n                    \"padding_right\": \"0\",\n                    \"padding_left\": \"0\"\n                }\n            },\n            \"checkout\": {\n                \"button\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#182CD9\",\n                    \"border_color\": \"#182CD9\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"hover\": {\n                    \"color\": \"#D3E1F1\",\n                    \"background_color\": \"#4FA7EC\",\n                    \"border_color\": \"#4FA7EC\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"18px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"3px\",\n                    \"border_width\": \"1px\",\n                    \"padding_top\": \"12px\",\n                    \"padding_bottom\": \"12px\",\n                    \"padding_right\": \"30px\",\n                    \"padding_left\": \"30px\"\n                },\n                \"message\": {\n                    \"color\": \"#898989\",\n                    \"background_color\": \"initial\",\n                    \"border_color\": \"initial\",\n                    \"font_family\": \"inherit\",\n                    \"font_size\": \"14px\",\n                    \"font_weight\": \"normal\",\n                    \"text_decoration\": \"none\",\n                    \"font_style\": \"normal\",\n                    \"border_radius\": \"0\",\n                    \"border_width\": \"0\",\n                    \"padding_top\": \"0\",\n                    \"padding_bottom\": \"0\",\n                    \"padding_right\": \"0\",\n                    \"padding_left\": \"0\"\n                }\n            }\n        }\n    },\n    \"app_settings\": {\n        \"user_id\": '1',\n        \"price\": \"100.00\",\n        \"price_change_value\": \"100.00\",\n        \"price_type\": \"relative_percent\",\n        \"start_date\": \"2020-11-12T08:33:29.000000Z\",\n        \"end_date\": \"2020-11-12T08:33:29.000000Z\",\n        \"inventory_limit\": '19',\n        \"button_text\": \"New default btn text\",\n        \"button_message\": \"New default btn message\",\n        \"created_at\": \"2020-11-12T08:33:29.000000Z\",\n        \"updated_at\": \"2020-11-12T10:34:52.000000Z\"\n    }\n};\n\nexport default AppSettingsMock;\n\n","import { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport axios from './axios';\nimport isMocksMode from './mocks/mock-env';\nimport appSettings from './mocks/app/appSettings';\nimport {\n    AppSettingsDTO,\n    AppSettingsInState,\n    AppSettingsParam,\n} from './types/settings';\n\nconst prefix = '/settings';\n\nconst getSettings = () => {\n    const url = `${prefix}`;\n\n    if (isMocksMode()) {\n        return of(appSettings).pipe(delay(800));\n    }\n\n    return axios.get<AppSettingsDTO>(url).pipe(map((res) => res.data));\n};\n\nconst updateSettings = (settings: AppSettingsParam): Observable<boolean> => {\n    const url = `${prefix}`;\n\n    if (isMocksMode()) {\n        return of(true).pipe(delay(800));\n    }\n\n    return axios.post<boolean>(url, settings).pipe(map((res) => res.data));\n};\n\nconst settingsApi = {\n    getSettings,\n    updateSettings,\n} as const;\n\nexport default settingsApi;\n","import { ActionFrom, AxiosClientError, Variant } from '@api/types';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { catchError, debounceTime, filter, map, startWith, switchMap } from 'rxjs/operators';\nimport {\n    deleteProfile,\n    deleteProfileFailure,\n    deleteProfileSuccess,\n    fetchProfile,\n    fetchProfileFailure,\n    fetchProfiles,\n    fetchProfileSuccess,\n    fetchProfilesWithQuery,\n    fetchProfilesWithQueryStart,\n    getDefaultSettingsForProfile,\n    getProfilesFailure,\n    getProfilesSuccess,\n    startLoadingProfiles,\n    stopLoadingProfiles,\n    updateProfile,\n    updateProfileFailure,\n    updateProfileSuccess,\n} from '@redux/reducers/profiles';\nimport profilesApi, { ApplyProfilesParams } from '@api/profiles';\nimport {\n    assignProfile,\n    assignProfileFailure,\n    assignProfileSuccess,\n    startUnassignProfiles,\n    unassignProfile,\n} from '@redux/reducers/products';\nimport { toggleConfirmation } from '@redux/reducers/app';\nimport { toggleBulkEnableWarning, withConfirmation } from './utils';\nimport settingsApi from '@api/settings';\nimport {\n    getSettingsFailure,\n    getSettingsSucces,\n} from '@redux/reducers/settings';\n\nexport const fetchProfilesEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType<any>(fetchProfiles, fetchProfilesWithQuery),\n        switchMap(() => {\n            const state = state$.value.profiles;\n            const filter = state.filters;\n            const pageInfo = { ...state.pageInfo };\n            const sort = state.sort;\n\n            // if (\n            //     pageInfo.pageDirection === PageDirection.After &&\n            //     state.pageInfo.hasNextPage\n            // ) {\n            //     const idOfLastProfile =\n            //         state.profilesIds[state.profilesIds.length - 1];\n            //     pageInfo.cursor = state.profilesIds[idOfLastProfile].cursor;\n            // } else if (\n            //     pageInfo.pageDirection === PageDirection.Before &&\n            //     state.pageInfo.hasPreviousPage\n            // ) {\n            //     const idOfFirstProduct = state.productsIds[0];\n            //     pageInfo.cursor = state.productsById[idOfFirstProduct].cursor;\n            // }\n\n            return profilesApi\n                .getProfiles({\n                    filter,\n                    pageInfo,\n                    sort,\n                })\n                .pipe(\n                    map((profiles) => getProfilesSuccess(profiles)),\n                    catchError((err) => of(getProfilesFailure(err)))\n                );\n        })\n    );\n\n// export const fetchUserWithQueryEpic = (\n//     actions$: ActionsObservable<any>,\n//     state$: StateObservable<RootState>\n// ) =>\n//     actions$.pipe(\n//         ofType(fetchProductsWithQuery),\n//         debounceTime(600),\n//         map(fetchProductsWithQueryStart)\n//     );\n\nexport const assignProfileEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(assignProfile),\n        switchMap((action: ActionFrom<typeof assignProfile>) => {\n            const state = state$.value.products;\n            const { id, item } = action.payload;\n            const items: ApplyProfilesParams['items'] = [];\n\n            const product = state.assignProfileModal.data?.product || item;\n            if (product) {\n                const { product_id, id } = product as Variant;\n                if (product_id) {\n                    items.push({ productId: product_id, variantId: id });\n                } else {\n                    items.push({\n                        productId: id,\n                    });\n                    state.productsById[id].variants.forEach((variantId) => {\n                        items.push({\n                            productId: id,\n                            variantId,\n                        });\n                    });\n                }\n            } else {\n                state.selectedProducts.productsIds.forEach((productId) =>\n                    items.push({\n                        productId,\n                    })\n                );\n                state.selectedProducts.variantsIds.forEach((variant_id) =>\n                    items.push({\n                        variantId: variant_id,\n                        productId: state.variantsById[variant_id].product_id,\n                    })\n                );\n            }\n\n            const params: ApplyProfilesParams = {\n                id,\n                items,\n            };\n\n            return profilesApi.applyProfile(params).pipe(\n                map(() => assignProfileSuccess(true)),\n                catchError((err) => of(assignProfileFailure(err))),\n                startWith(toggleBulkEnableWarning())\n            );\n        })\n    );\n\nexport const unassignProfileEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(unassignProfile),\n        withConfirmation<typeof unassignProfile>(\n            () => ({\n                content: `Are you sure you want to cancel the profile assignment?`,\n                actions: {\n                    primary: 'Yes',\n                    secondary: 'Cancel',\n                },\n            }),\n            (action) => {\n                const state = state$.value.products;\n                const { id, item } = action.payload ?? {};\n                const items: ApplyProfilesParams['items'] = [];\n\n                // const product = state.assignProfileModal.data?.product || item;\n                if (item) {\n                    const { product_id, id } = item;\n                    if (product_id) {\n                        items.push({ productId: product_id, variantId: id });\n                    } else {\n                        items.push({\n                            productId: id,\n                        });\n                        state.productsById[id].variants.forEach((variantId) => {\n                            items.push({\n                                productId: id,\n                                variantId,\n                            });\n                        });\n                    }\n                } else {\n                    state.selectedProducts.productsIds.forEach((productId) =>\n                        items.push({\n                            productId,\n                        })\n                    );\n                    state.selectedProducts.variantsIds.forEach((variant_id) =>\n                        items.push({\n                            variantId: variant_id,\n                            productId:\n                                state.variantsById[variant_id].product_id,\n                        })\n                    );\n                }\n\n                const params: ApplyProfilesParams = {\n                    id: id ?? '',\n                    items,\n                };\n\n                return profilesApi.unassignProfile(params).pipe(\n                    map(() => assignProfileSuccess(true)),\n                    catchError((err) => of(assignProfileFailure(err))),\n                    startWith(\n                        startUnassignProfiles(),\n                        toggleBulkEnableWarning()\n                    )\n                );\n                // profilesApi.deleteProfile(action.payload).pipe(\n                //     map(() => deleteProfileSuccess(true)),\n                //     catchError((err: AxiosClientError) => {\n                //         if (err.status === 403) {\n                //             return Array.from([\n                //                 toggleConfirmation({\n                //                     content: `This profile is assigned to active pre-orders. To delete this profile, please end all pre-orders this profile is assigned to.`,\n                //                     actions: false,\n                //                     warning: true,\n                //                 }),\n                //                 stopLoadingProfiles(),\n                //             ]);\n                //         }\n                //         return of(deleteProfileFailure(err));\n                //     }),\n                //     startWith(startLoadingProfiles())\n                // )}\n                // actions$\n            }\n            // switchMap((action: ActionFrom<typeof unassignProfile>) => {\n            //     const state = state$.value.products;\n            //     const { id, item } = action.payload;\n            //     const items: ApplyProfilesParams['items'] = [];\n\n            //     const product = state.assignProfileModal.data?.product || item;\n            //     if (product) {\n            //         const { product_id, id } = product as Variant;\n            //         if (product_id) {\n            //             items.push({ productId: product_id, variantId: id });\n            //         }\n            //     } else {\n            //         state.selectedProducts.productsIds.forEach((productId) =>\n            //             items.push({\n            //                 productId,\n            //             })\n            //         );\n            //         state.selectedProducts.variantsIds.forEach((variant_id) =>\n            //             items.push({\n            //                 variantId: variant_id,\n            //                 productId: state.variantsById[variant_id].product_id,\n            //             })\n            //         );\n            //     }\n\n            //     const params: ApplyProfilesParams = {\n            //         id,\n            //         items,\n            //     };\n\n            //     return profilesApi.applyProfile(params).pipe(\n            //         map(() => assignProfileSuccess(true)),\n            //         catchError((err) => of(assignProfileFailure(err)))\n            //     );\n            // })\n        )\n    );\n\nexport const updateProfileEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(updateProfile),\n        switchMap((action: ActionFrom<typeof updateProfile>) => {\n            return profilesApi.updateProfile(action.payload).pipe(\n                map(() => updateProfileSuccess(true)),\n                catchError((err) => of(updateProfileFailure(err)))\n            );\n        })\n    );\n\nexport const updateProfileSuccessEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(updateProfileSuccess),\n        map(() => {\n            return fetchProfiles();\n        })\n    );\n\nexport const fetchProfileEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(fetchProfile),\n        switchMap((action: ActionFrom<typeof fetchProfile>) => {\n            return profilesApi.getProfile(action.payload).pipe(\n                map((settings) => fetchProfileSuccess(settings)),\n                catchError((err) => of(fetchProfileFailure(err)))\n            );\n        })\n    );\n\nexport const fetchProfilesWithQueryEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(fetchProfilesWithQuery),\n        debounceTime(600),\n        map(fetchProfilesWithQueryStart)\n    );\n\nexport const getDefaultSettingsEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(getDefaultSettingsForProfile),\n        switchMap(() => {\n            return settingsApi.getSettings().pipe(\n                map((settings) => getSettingsSucces(settings)),\n                catchError((err) => of(getSettingsFailure(err)))\n            );\n        })\n    );\n\nexport const deleteProfileEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(deleteProfile),\n        withConfirmation<typeof deleteProfile>(\n            () => ({\n                content: `Are you sure you want to delete this profile?`,\n                actions: {\n                    primary: 'Yes',\n                    secondary: 'Cancel',\n                },\n            }),\n            (action) =>\n                profilesApi.deleteProfile(action.payload).pipe(\n                    map(() => deleteProfileSuccess(true)),\n                    catchError((err: AxiosClientError) => {\n                        //TODO remove after workflow approvement\n                        //     if (err.status === 403) {\n                        //         return Array.from([\n                        //             toggleConfirmation({\n                        //                 content: `This profile is assigned to active pre-orders. To delete this profile, please end all pre-orders this profile is assigned to.`,\n                        //                 actions: false,\n                        //                 warning: true,\n                        //             }),\n                        //             stopLoadingProfiles(),\n                        //         ]);\n                        //     }\n                        //     return of(deleteProfileFailure(err));\n                        return of(stopLoadingProfiles());\n                    }),\n                    startWith(startLoadingProfiles())\n                )\n            // actions$\n        )\n    );\n\nexport const deleteProfileFailureEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(deleteProfileFailure),\n        filter<ActionFrom<typeof deleteProfileFailure>>(\n            (action) => action.payload.status === 400\n        ),\n        withConfirmation<typeof deleteProfileFailure>(\n            () => ({\n                content: `This profile is assigned to active pre-orders. To delete this profile, please end all pre-orders this profile is assigned to.`,\n            })\n            // actions$\n        )\n    );\n\nexport const deleteProfileSuccessEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType(deleteProfileSuccess),\n        map(() => {\n            return fetchProfiles();\n        })\n    );\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport settingsApi from '@api/settings';\nimport {\n    getSettings,\n    getSettingsSucces,\n    getSettingsFailure,\n    updateSettings,\n    updateSettingsSuccess,\n    updateSettingsFailure,\n} from '@redux/reducers/settings';\nimport { mapWithToast, withAppLoading } from './utils';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { ActionFrom, Nullable } from '@api/types';\nimport messages from './messages';\n\nexport const getSettingsEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(getSettings),\n        withAppLoading(() => {\n            return settingsApi.getSettings().pipe(\n                map((settings) => getSettingsSucces(settings)),\n                catchError((err) => of(getSettingsFailure(err)))\n            );\n        })\n    );\n\nexport const updateSettingsEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(updateSettings),\n        withAppLoading((action: ActionFrom<typeof updateSettings>, state) => {\n            type Params = Parameters<typeof settingsApi.updateSettings>[0];\n            const params: Params = {\n                app_settings: state.settings.settings.app,\n                design_settings: {\n                    current:\n                        state.settings.settings.design.state?.current ?? null,\n                },\n            };\n\n            return settingsApi.updateSettings(params).pipe(\n                mapWithToast(messages.setSettingsSuccess, () =>\n                    updateSettingsSuccess(true)\n                ),\n                catchError((err) => of(updateSettingsFailure(err)))\n            );\n        })\n    );\n\n// export const updateProfileSuccessEpic = (\n//     actions$: ActionsObservable<any>,\n//     state$: StateObservable<RootState>\n// ) =>\n//     actions$.pipe(\n//         ofType(updateProfileSuccess),\n//         map((action: ActionFrom<typeof updateProfileSuccess>) => {\n//             return fetchProfiles();\n//         })\n//     );\n","/* eslint-disable*/\n\nimport { SubscriptionResponse } from \"@api/subscription\";\nimport { AppSettingsDTO } from \"@api/types/settings\";\nimport { SubscriptionDTO } from \"@api/types/subscription\";\n\nconst SubscriptionMock: SubscriptionResponse = [{\n    \"id\": 3,\n    \"key_name\": 'free_plan',\n    \"type\": \"RECURRING\",\n    \"name\": \"Test Plan\",\n    \"price\": 5,\n    \"capped_amount\": 10,\n    \"terms\": \"Test terms\",\n    \"trial_days\": 7,\n    \"test\": true,\n    \"on_install\": true,\n    \"created_at\": null,\n    \"updated_at\": ''\n}, {\n    \"id\": 4,\n    \"key_name\": 'plus_plan',\n    \"type\": \"RECURRING\",\n    \"name\": \"Test Plan2\",\n    \"price\": 0,\n    \"capped_amount\": 19.99,\n    \"terms\": \"Free for up to 3 Products. Standard email support\",\n    \"trial_days\": 0,\n    \"test\": true,\n    \"on_install\": true,\n    \"created_at\": null,\n    \"updated_at\": ''\n},\n    //  {\n    //     \"id\": 6,\n    //     \"type\": \"RECURRING\",\n    //     \"name\": \"Test Plan2\",\n    //     \"price\": 0,\n    //     \"capped_amount\": 19.99,\n    //     \"terms\": \"Free for up to 3 Products. Standard email support\",\n    //     \"trial_days\": 0,\n    //     \"test\": true,\n    //     \"on_install\": true,\n    //     \"created_at\": null,\n    //     \"updated_at\": ''\n    // }, {\n    //     \"id\": 5,\n    //     \"type\": \"RECURRING\",\n    //     \"name\": \"New3\",\n    //     \"price\": 0,\n    //     \"capped_amount\": 29.99,\n    //     \"terms\": \"Free for up to 3 Products. Includes a dedicated Tier-3 account and support manager, priority queue when requesting support, & up to 3 h\\/month of customizations and personal assistance to set up the app\",\n    //     \"trial_days\": 0,\n    //     \"test\": true,\n    //     \"on_install\": true,\n    //     \"created_at\": null,\n    //     \"updated_at\": ''\n    // }\n];\n\nexport default SubscriptionMock;\n","import { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { DeepNullable } from 'ts-essentials';\nimport axios from './axios';\nimport isMocksMode from './mocks/mock-env';\nimport subscriptionList from './mocks/subscription/subscriptionList';\nimport { AppSettingsDTO, AppSettingsInState } from './types/settings';\nimport { SubscriptionDTO } from './types/subscription';\n\nconst prefix = '/plans';\n\nexport type SubscriptionResponse = SubscriptionDTO[];\n\nconst getSubscription = () => {\n    const url = `${prefix}`;\n\n    if (isMocksMode()) {\n        return of(subscriptionList).pipe(delay(800));\n    }\n\n    return axios.get<SubscriptionResponse>(url).pipe(map((res) => res.data));\n};\nconst getActiveSubscription = () => {\n    const url = `${prefix}/active`;\n\n    if (isMocksMode()) {\n        return of(subscriptionList[1]).pipe(delay(800));\n    }\n\n    return axios.get<SubscriptionDTO>(url).pipe(map((res) => res.data));\n};\n\nconst updateSubscription = (\n    settings: AppSettingsInState\n): Observable<boolean> => {\n    const url = `${prefix}`;\n\n    return axios.post<boolean>(url, settings).pipe(map((res) => res.data));\n};\n\nconst settingsApi = {\n    getSubscription,\n    getActiveSubscription,\n    updateSubscription,\n} as const;\n\nexport default settingsApi;\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { EMPTY, of } from 'rxjs';\nimport { catchError, filter, map, switchMap } from 'rxjs/operators';\nimport subscriptionApi from '@api/subscription';\nimport { apiHost } from '@api/axios';\nimport {\n    getSubscription,\n    getSubscriptionSuccess,\n    getSubscriptionFailure,\n    getActiveSubscriptionSuccess,\n    getActiveSubscriptionFailure,\n    getActiveSubscription,\n    switchToPlan,\n} from '@redux/reducers/subscription';\nimport { withAppLoading, withConfirmation } from './utils';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { ActionFrom } from '@api/types';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { startAppLoading } from '@redux/reducers/app';\n\nexport const getSubscriptionEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(getSubscription),\n        withAppLoading(() => {\n            return subscriptionApi.getSubscription().pipe(\n                map((subscription) => getSubscriptionSuccess(subscription)),\n                catchError((err) => of(getSubscriptionFailure(err)))\n            );\n        })\n    );\nexport const getActiveSubscriptionEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(getActiveSubscription),\n        withAppLoading(() => {\n            return subscriptionApi.getActiveSubscription().pipe(\n                map((subscription) =>\n                    getActiveSubscriptionSuccess(subscription)\n                ),\n                catchError((err) => of(getActiveSubscriptionFailure(err)))\n            );\n        })\n    );\n\nexport const switchToPlanEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType(switchToPlan),\n        switchMap((action: ActionFrom<typeof switchToPlan>) => {\n            const {\n                payload: { app, id, withConfirmation: withConfirmationFlag },\n            } = action;\n            const {\n                auth: { headers, originalHeaders },\n            } = state$.value;\n\n            // const searchParams = Object.entries(headers).filter(\n            //     (entry) => entry[1] !== null\n            // ) as [string, string][];\n\n            const callback = () => {\n                // const redirect = Redirect.create(app);\n                // const params = new URLSearchParams({\n                //     resource_name: 'Product',\n                //     edit: editFields.join(',')\n                //   })\n                // redirect.dispatch(Redirect.Action.REMOTE as any, {\n                //     path: apiHost + `/billing/${id}`,\n                // });\n                // app.dispatch(\n                //     Redirect.toRemote({\n                //         url: apiHost + `/billing/${id}`,\n                //     })\n                // );\n                window.location.assign(\n                    apiHost +\n                    `/billing/${id}?${new URLSearchParams(\n                        originalHeaders\n                    ).toString()}`\n                );\n\n                return of(startAppLoading());\n            };\n\n            if (!withConfirmationFlag) {\n                return callback();\n            }\n\n            return of(action).pipe(\n                withConfirmation<typeof switchToPlan>(\n                    (action) => ({\n                        content: `By switching to the Free Plan, all products that are currently enabled with PreOrder Boss will be disabled. Are you sure you want to proceed? `,\n                    }),\n                    callback\n                )\n            );\n        })\n    );\n","import { interval, Observable, of } from 'rxjs';\nimport { delay, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\nimport axios from './axios';\nimport isMocksMode from './mocks/mock-env';\nimport { UninstallStatus, UninstalStatusDTO } from './types/uninstall';\nimport { logWithPrefix } from './../../storefront/scripts/src/utils/common/common';\n\nconst prefix = `/app/uninstall`;\n\nexport type UninstalStatusResponse = UninstalStatusDTO;\n\nconst v = 0;\nconst getUninstallStatus = () => {\n    const url = `${prefix}/status`;\n\n    if (isMocksMode()) {\n        // return interval(1000).pipe(\n        //     take(1),\n        //     tap(() => console.log('status', v++)),\n        //     mergeMap(() =>\n        //         of({\n        //             is_prepared_to_uninstall:\n        //                 v < 3\n        //                     ? UninstallStatus.Progress\n        //                     : UninstallStatus.Complition,\n        //         } as UninstalStatusDTO).pipe(\n        //             tap((s) => console.log('status', s)),\n        //             delay(800)\n        //         )\n        //     )\n        // );\n        return of({\n            prepare_to_uninstall_status: UninstallStatus.NotInitiated,\n            // v++ < 3\n            //     ? UninstallStatus.NotInitiated\n            //     : UninstallStatus.Complition,\n        } as UninstalStatusDTO).pipe(\n            tap((s) => console.log('status', s)),\n            delay(800)\n        );\n    }\n\n    return axios.get<UninstalStatusDTO>(url).pipe(map((res) => res.data));\n};\n\nconst startUnistallPreparation = (): Observable<boolean> => {\n    const url = `${prefix}/prepare`;\n\n    if (isMocksMode()) {\n        return of(true).pipe(delay(1800));\n    }\n\n    return axios.post<boolean>(url).pipe(map((res) => res.data));\n};\n\nconst settingsApi = {\n    getUninstallStatus,\n    startUnistallPreparation,\n} as const;\n\nexport default settingsApi;\n","import { ActionsObservable, ofType, StateObservable } from 'redux-observable';\nimport { from, of, timer } from 'rxjs';\nimport {\n    catchError,\n    exhaustMap,\n    map,\n    switchMap,\n    takeUntil,\n} from 'rxjs/operators';\nimport uninstallApi from '@api/uninstall';\nimport { withAppLoading } from './utils';\nimport {\n    getUninstallStatus,\n    getUninstallStatusSuccess,\n    getUninstallStatusFailure,\n    startPollUninstallStatus,\n    startUninstallPreparation,\n    startUninstallPreparationFailure,\n    startUninstallPreparationSuccess,\n    stopPollUninstallStatus,\n} from '@redux/reducers/uninstall';\nimport { RootState } from '@redux/reducers/rootReducer';\nimport { UninstallStatus } from '@api/types/uninstall';\n\nexport const getUnistallStatusEpic = (\n    actions$: ActionsObservable<any>,\n    state$: StateObservable<RootState>\n) =>\n    actions$.pipe(\n        ofType<any>(getUninstallStatus),\n        exhaustMap(() => {\n            return uninstallApi.getUninstallStatus().pipe(\n                switchMap((response) => {\n                    const actions: any = [getUninstallStatusSuccess(response)];\n                    if (\n                        response.prepare_to_uninstall_status !==\n                        UninstallStatus.Progress\n                    ) {\n                        actions.push(stopPollUninstallStatus());\n                    }\n\n                    return from(actions);\n                }),\n                catchError((err) =>\n                    from([\n                        getUninstallStatusFailure(err),\n                        stopPollUninstallStatus(),\n                    ])\n                )\n            );\n        })\n    );\n\nexport const pollUnistallStatusEpic = (actions$: ActionsObservable<any>) =>\n    actions$.pipe(\n        ofType<any>(startPollUninstallStatus),\n        switchMap(() =>\n            timer(0, 5000).pipe(\n                takeUntil(actions$.ofType(stopPollUninstallStatus)),\n                map(() => getUninstallStatus())\n            )\n        )\n    );\nexport const startUnistallPreparationEpic = (\n    actions$: ActionsObservable<any>\n) =>\n    actions$.pipe(\n        ofType<any>(startUninstallPreparation),\n        withAppLoading(() => {\n            return uninstallApi.startUnistallPreparation().pipe(\n                map(() => startUninstallPreparationSuccess()),\n                catchError((err) => of(startUninstallPreparationFailure(err)))\n            );\n        })\n    );\n\n// export const updateSettingsEpic = (\n//     actions$: ActionsObservable<any>,\n//     state$: StateObservable<RootState>\n// ) =>\n//     actions$.pipe(\n//         ofType(updateSettings),\n//         withAppLoading((action: ActionFrom<typeof updateSettings>, state) => {\n//             return subscriptionApi.updateSettings(state.settings).pipe(\n//                 map(() => updateSettingsSuccess(true)),\n//                 catchError((err) => of(updateSettingsFailure(err)))\n//             );\n//         })\n//     );\n","import { combineEpics } from 'redux-observable';\nimport * as appEpics from './app';\nimport * as productsEpics from './products';\nimport * as profilesEpics from './profiles';\nimport * as settingsEpics from './settings';\nimport * as subscriptionEpics from './subscription';\nimport * as uninstallEpics from './uninstall';\nimport { innerActionEpic } from './utils';\n\nconst featuredEpics = [\n    appEpics,\n    productsEpics,\n    profilesEpics,\n    settingsEpics,\n    subscriptionEpics,\n    uninstallEpics,\n].flatMap((e) => Object.values(e));\n\nexport const utilsEpics = [innerActionEpic];\n\nexport const rootEpic = combineEpics<any, any, any, any>(\n    ...utilsEpics,\n    ...featuredEpics\n);\n","import createRootReducer, { RootState } from './reducers/rootReducer';\nimport thunk, { ThunkAction } from 'redux-thunk';\nimport {\n    Action,\n    configureStore,\n    compose,\n    applyMiddleware,\n} from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { routerMiddleware } from 'connected-react-router';\nimport { rootEpic } from './epics';\nimport { createBrowserHistory } from 'history';\n\n// create a makeStore function\n/*\nfunction storeLogger(store) {\n    return function(next) {\n        return function(action) {\n            const result = next(action);\n            console.log(\"STORE LOGGED OUT with action\", action.type,\":\", store.getState());\n            return result;\n        }\n    }\n}\n*/\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory();\n\nconst store = configureStore({\n    reducer: createRootReducer(history),\n    middleware: [\n        routerMiddleware(history), // for dispatching history actions\n        thunk,\n        epicMiddleware,\n    ],\n    // middleware: [thunk]\n    // middleware: [thunk, epicMiddleware],\n});\n\nepicMiddleware.run(rootEpic);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport default store;\n","export enum UninstallStatus {\n    NotInitiated = 'NOT_INITIATED',\n    Progress = 'IN_PROGRESS',\n    Complition = 'DONE',\n}\n\nexport interface UninstalStatusDTO {\n    prepare_to_uninstall_status: UninstallStatus;\n}\n","import React from 'react';\nimport { Button, Spinner } from '@shopify/polaris';\nimport './progress.scss';\nimport { startPollUninstallStatus } from '@redux/reducers/uninstall';\nimport { useDispatch } from 'react-redux';\n\nfunction Progress({\n    text = 'Preparation for application removal is in progress...',\n}: {\n    text?: string;\n}) {\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        dispatch(startPollUninstallStatus());\n    }, []);\n\n    return (\n        <div className=\"appUninstall__preparation\">\n            <div className=\"appUninstall__step__content\">{text}</div>\n            <Spinner />\n        </div>\n    );\n}\n\nexport default Progress;\n","import { Product, Variant } from '@api/types';\nimport store from '@redux/store';\n\nexport const isDefaultVariant = (variant: { title: string }) => {\n    // const regxp = new RegExp('(w*Default Title|testw*)', 'g');\n    // const if_vars = !regxp.test(prod_var.title);\n    return variant.title.includes('Default Title');\n};\n\nexport const getProductUrl = (item: Product | Variant, isVariant?: true) => {\n    const headers = store.getState().auth.headers;\n    const domain = headers['X-Shop-Domain'];\n    let url = `https://${domain}`;\n\n    if (isVariant) {\n        const { id, product_id } = item as Variant;\n        url += `/admin/products/${product_id}/variants/${id}`;\n    } else {\n        const { id } = item;\n        url += `/admin/products/${id}`;\n    }\n\n    return url;\n};\n\nexport const getFormattedPriceString = (\n    fmt: (amount: string) => string,\n    price?: string | number | null\n) => {\n    let result: string = '';\n    if (price || price === 0) {\n        price = parseFloat(String(price)).toFixed(2);\n        result = fmt(price);\n    }\n\n    return result;\n};\n\nexport const isNullOrUndefined = (value?: string | number | null) => {\n    return value === null || value === undefined;\n};\n","import {\n    AxiosClientError,\n    Filter,\n    FiltersState,\n    FilterValue,\n    PageInfo,\n    ProductSettingsDTO,\n    Profile,\n    ProfileDTO,\n    ProfileInState,\n    SortState,\n} from '@api/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ProfilesResponse } from '../../api/profiles';\nimport {\n    loadingFailed,\n    pageInfoInit,\n    sortInit,\n    startLoading,\n    stopLoading,\n    StateWithLoadingAndError,\n} from './common/reducers';\nimport { getSettingsFailure, getSettingsSucces } from './settings';\n// import { openSettingsModal } from './products';\n\ntype FetchProfilesParams = undefined | { filterValue?: FilterValue };\n\ninterface ProfilesState extends StateWithLoadingAndError {\n    // profiles: Profile[] | null;\n    profilesById: Record<string, ProfileInState>;\n    profilesIds: string[];\n    filters: FiltersState;\n    pageInfo: PageInfo;\n    loading: boolean;\n    error: string | null;\n    selectedProfiles: string[];\n    sort: SortState;\n    // filters: FiltersState;\n    profileModal: {\n        loading: boolean;\n        open: boolean;\n        data: Partial<ProfileDTO> | null;\n    } & StateWithLoadingAndError;\n}\n\nconst initialState: ProfilesState = {\n    profilesById: {},\n    profilesIds: [],\n    loading: false,\n    error: null,\n    pageInfo: pageInfoInit,\n    filters: {\n        query: '',\n        status: '',\n        availiability: '',\n    },\n    selectedProfiles: [],\n    sort: sortInit,\n    profileModal: {\n        loading: false,\n        data: null,\n        error: null,\n        open: false,\n    },\n};\n\n// export const fetchProfiles = (): AppThunk => async (dispatch) => {\n//     try {\n//         dispatch(getProfilesStart());\n//         const profiles = await profilesApi.getProfiles().toPromise();\n//         dispatch(getProfilesSuccess(profiles.profiles));\n//     } catch (err) {\n//         dispatch(getProfilesFailure(err));\n//     }\n// };\n\nconst fetchProfilesReducer = (\n    state: ProfilesState,\n    { payload: params }: PayloadAction<FetchProfilesParams>\n) => {\n    if (params) {\n        const { filterValue } = params;\n        if (filterValue) {\n            state.filters[filterValue.filter] = filterValue.value as '';\n        }\n\n        state.pageInfo = initialState.pageInfo;\n    } else {\n        startLoading(state);\n    }\n};\n\nconst profilesSlice = createSlice({\n    name: 'profiles',\n    initialState,\n    reducers: {\n        startLoading,\n        stopLoading,\n        getProfilesStart: startLoading,\n        getDefaultSettingsForProfile(state) {\n            state.profileModal.loading = true;\n        },\n        getProfilesSuccess(\n            state,\n            { payload }: PayloadAction<ProfilesResponse>\n        ) {\n            // const { profiles, pageInfo } = payload;\n            const profiles = payload;\n            // state.pageInfo = { ...state.pageInfo, ...pageInfo };\n            state.loading = false;\n            state.error = null;\n\n            const byId = profiles.reduce(\n                (acc, profile) => {\n                    acc.profiles[profile.id] = profile;\n                    acc.profilesIds.push(profile.id);\n\n                    return acc;\n                },\n                { profiles: {}, profilesIds: [] } as {\n                    profiles: ProfilesState['profilesById'];\n                    profilesIds: string[];\n                }\n            );\n\n            state.profilesById = byId.profiles;\n            state.profilesIds = byId.profilesIds;\n        },\n        getProfilesFailure: loadingFailed,\n\n        // Profiles Selection\n        selectProfiles(\n            state,\n            {\n                payload: profilesIds,\n            }: PayloadAction<typeof initialState.selectedProfiles>\n        ) {\n            state.selectedProfiles = profilesIds;\n        },\n        //epics\n        fetchProfiles: fetchProfilesReducer,\n        fetchProfilesWithQuery: fetchProfilesReducer,\n        fetchProfilesWithQueryStart: startLoading,\n        openProfileModal(state, { payload: open }: PayloadAction<boolean>) {\n            // if (!open) {\n            state.profileModal.data = initialState.profileModal.data;\n            // } else {\n            state.profileModal.open = open;\n            // }\n        },\n        updateProfile(state, { payload }: PayloadAction<ProfileDTO>) {\n            state.profileModal.loading = true;\n        },\n        updateProfileSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.profileModal.loading = false;\n            state.profileModal.open = false;\n        },\n        updateProfileFailure(state, { payload }: PayloadAction<string>) {\n            state.profileModal.loading = false;\n            state.profileModal.error = payload;\n        },\n        fetchProfile(state: ProfilesState, { payload }: PayloadAction<string>) {\n            state.profileModal.loading = true;\n        },\n        fetchProfileSuccess(state, { payload }: PayloadAction<ProfileDTO>) {\n            state.profileModal.loading = false;\n            state.profileModal.data = payload;\n            state.profileModal.error = null;\n        },\n        fetchProfileFailure(state, action: PayloadAction<string>) {\n            state.profileModal.loading = false;\n            state.profileModal.error = action.payload;\n        },\n        deleteProfile(\n            state: ProfilesState,\n            { payload }: PayloadAction<Profile>\n        ) {\n            // state.profileModal.loading = true;\n        },\n        deleteProfileSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.loading = false;\n        },\n        deleteProfileFailure(state, action: PayloadAction<AxiosClientError>) {\n            state.loading = false;\n        },\n    },\n    extraReducers: (builder) => {\n        // builder.addCase(openSettingsModal, (state, action) => {\n        //     state.profileModal = initialState.profileModal;\n        // });\n        builder\n            .addCase(getSettingsSucces, (state, action) => {\n                state.profileModal.loading = false;\n            })\n            .addCase(getSettingsFailure, (state, action) => {\n                state.profileModal.open = false;\n                state.profileModal.loading = false;\n            });\n    },\n});\n\nexport const {\n    getProfilesStart,\n    getProfilesSuccess,\n    getProfilesFailure,\n    fetchProfiles,\n    fetchProfilesWithQuery,\n    fetchProfilesWithQueryStart,\n    getDefaultSettingsForProfile,\n    openProfileModal,\n    updateProfile,\n    updateProfileSuccess,\n    updateProfileFailure,\n    selectProfiles,\n    fetchProfile,\n    fetchProfileSuccess,\n    fetchProfileFailure,\n    deleteProfile,\n    deleteProfileSuccess,\n    deleteProfileFailure,\n    startLoading: startLoadingProfiles,\n    stopLoading: stopLoadingProfiles,\n} = profilesSlice.actions;\n\nexport default profilesSlice.reducer;\n","import { Button, DisplayText } from '@shopify/polaris';\nimport React, { FunctionComponent } from 'react';\nimport './start.scss';\n\ntype Props = {\n    onNext: () => void;\n};\n\nconst Start: FunctionComponent<Props> = ({ onNext }) => {\n    return (\n        <div className=\"appUninstall__start\">\n            <div className=\"appUninstall__start__caption\">\n                <DisplayText size=\"small\">\n                    Uninstall Pre-Order Application cleanly:\n                </DisplayText>\n            </div>\n\n            <div className=\"appUninstall__steps\">\n                <div className=\"appUninstall__steps-title\">\n                    Application removal is performed in 2 steps:\n                </div>\n                <div className=\"appUninstall__steps-step\">\n                    1. preparation for removal\n                </div>\n                <div className=\"appUninstall__steps-step\">\n                    2. deleting an application from the Shopify admin area\n                </div>\n            </div>\n\n            <div className=\"appUninstall__warning\">\n                <div className=\"appUninstall__warning-title\">WARNINIG:</div>\n                <div className=\"appUninstall__warning-body\">\n                    <div>\n                        If you uninstall the application from the Shopify admin\n                        panel, then inventory policies and prices for products\n                        will not be restored to their previous value.\n                    </div>\n                    <div>\n                        This is the standard Shopify behavior in such a case.\n                        Deletion via the Shopify admin panel is done outside of\n                        the Pre-Order Manager app and therefore all data will\n                        remain intact.\n                    </div>\n                    .\n                </div>\n            </div>\n            <Button onClick={onNext}>Next &gt;&gt;</Button>\n        </div>\n    );\n};\n\nexport default Start;\n","import { RootState } from '@redux/reducers/rootReducer';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst selectAuthState = (state: RootState) => state.auth;\n\nexport const authHeadersSelector = createSelector(\n    selectAuthState,\n    (sub) => sub.headers\n);\n","import React from 'react';\nimport { Button } from '@shopify/polaris';\nimport { authHeadersSelector } from '@redux/selectors/auth';\nimport { useSelector } from 'react-redux';\n\nfunction Complition() {\n    const authHeaders = useSelector(authHeadersSelector);\n\n    const handleOnClick = React.useCallback(() => {\n        const { 'X-Shop-Domain': host } = authHeaders;\n        const shopName = host?.split('.')[0];\n        const applicationId = '';\n\n        window.open(\n            `https://${\n                shopName ?? ''\n            }.myshopify.com/admin/applications#application-${applicationId}`,\n            'blank'\n        );\n    }, [authHeaders]);\n\n    return (\n        <div className=\"appUninstall__complition\">\n            <div className=\"appUninstall__step__content\">\n                Preparation for application removal is done\n            </div>\n            <Button onClick={handleOnClick}>\n                Delete App from Shopify admin panel &gt;&gt;\n            </Button>\n        </div>\n    );\n}\n\nexport default Complition;\n","import React from 'react';\nimport { Button } from '@shopify/polaris';\nimport './preparation.scss';\nimport { startUninstallPreparation } from '@redux/reducers/uninstall';\nimport { useDispatch } from 'react-redux';\n\nfunction Preparation() {\n    const dispatch = useDispatch();\n    const handleStart = React.useCallback(() => {\n        dispatch(startUninstallPreparation());\n    }, []);\n\n    return (\n        <div className=\"appUninstall__preparation\">\n            <div className=\"appUninstall__step__content\">\n                Preparation for application removal\n            </div>\n            <Button onClick={handleStart}>Start Preparation</Button>\n        </div>\n    );\n}\n\nexport default Preparation;\n","import { AppStatus } from '@api/types/app';\nimport { UninstallStatus } from '@api/types/uninstall';\nimport { statusSelector } from '@redux/selectors/app';\nimport { DisplayText } from '@shopify/polaris';\nimport React, { FunctionComponent, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Start from './Start/Start';\nimport Complition from './Steps/Complition/Complition';\nimport Preparation from './Steps/Preparation/Preparation';\nimport Progress from './Steps/Progress/Progress';\nimport './uninstall.scss';\n\ntype Props = {};\n\nconst Uninstall: FunctionComponent<Props> = () => {\n    const status = useSelector(statusSelector);\n    const [isPreparation, setPreparation] = useState(false);\n    const handleNextfromStart = React.useCallback(\n        () => setPreparation(true),\n        []\n    );\n\n    let step = <Start onNext={handleNextfromStart} />;\n\n    switch (status) {\n        case AppStatus.Active:\n            if (isPreparation) {\n                step = <Preparation />;\n            }\n            break;\n        case AppStatus.PrepareToUninstallInProgress:\n            step = <Progress />;\n            break;\n        case AppStatus.Uninstalled:\n            step = <Complition />;\n            break;\n    }\n\n    return (\n        <div className=\"appUninstall\">\n            <DisplayText size=\"large\">Uninstall</DisplayText>\n            {step}\n        </div>\n    );\n};\n\nexport default Uninstall;\n","import {\n    ActionCreatorWithPayload,\n    Action,\n    PayloadAction,\n} from '@reduxjs/toolkit';\nimport { Component } from 'react';\nimport { components } from '../schema';\nimport * as Libs from '@libs/common/types';\n\nexport type Nullable<T> = Libs.Nullable<T>;\n\ntype schemas = components['schemas'];\n\nexport type Plan = schemas['Plans'];\n// export type Profile = schemas['Profile'];\n\nexport enum PreorderStatus {\n    Enabled = 'enabled',\n    Disabled = 'disabled',\n    Activated = 'activated',\n}\n\ninterface EnableStatus {\n    enabled: boolean;\n}\n\nexport type ProductDTO = {\n    id: string;\n    preorder_status: PreorderStatus;\n    title: string;\n    bodyHtml: string;\n    totalInventory: number;\n    // images: {\n    //     edges: {\n    //         node: {\n    //             id: string;\n    //             src: string;\n    //         };\n    //     }[];\n    // };\n    images: {\n        id: string;\n        src: string;\n    }[];\n    productType: string;\n    vendor: string;\n    profile_id: string | null;\n    updatedAt: string;\n    createdAt: string;\n    variants: Record<string, VariantDTO>;\n    cursor: string;\n    preorder_activating_start_date: null | string;\n    preorder_activating_end_date: null | string;\n};\n\nexport type ProductInState = Omit<ProductDTO, 'variants'> &\n    EnableStatus & {\n        variants: string[];\n    };\n\nexport type Product = Omit<ProductInState, 'variants'> & {\n    variants: Record<string, Variant>;\n    different: boolean;\n    differentProfile?: boolean;\n};\n\nexport type VariantDTO = {\n    id: string;\n    price: string | null;\n    price_shopify: string | null;\n    sku: string;\n    title: string;\n    image: null | {\n        id: string;\n        src: string;\n    };\n    product_id: string;\n    profile_id: string | null;\n    preorder_status: PreorderStatus;\n    preorder_activating_start_date: null | string;\n    preorder_activating_end_date: null | string;\n};\n\nexport type VariantInState = VariantDTO & EnableStatus;\n\nexport type Variant = VariantInState;\nexport type Settings = schemas['Settings'];\n\nexport enum PageDirection {\n    Before = 'before',\n    After = 'after',\n    Same = 'same',\n}\n\nexport interface PageInfoResponse {\n    hasNextPage: boolean;\n    hasPreviousPage: boolean;\n}\nexport interface PageInfo extends PageInfoResponse {\n    pageSize: number;\n    pageDirection: PageDirection;\n    cursor: string;\n}\n\nexport enum SortField {\n    Inventory = 'inventory',\n    Title = 'title',\n}\n\nexport enum SortDir {\n    Asc = 'asc',\n    Desc = 'desc',\n}\n\nexport enum FilterStatus {\n    Activated = 'activated',\n    Scheduled = 'scheduled',\n}\n\nexport enum FilterPriceType {\n    Activated = 'activated',\n    Scheduled = 'scheduled',\n}\n\nexport enum FilterAvailiability {\n    SoldOut = 'sold_out',\n    InStock = 'in_stock',\n    Preordered = 'preordered',\n}\n\nexport enum PriceSettingsMode {\n    Unstated = '',\n    Same = 'same',\n    Value = 'value',\n    Increase = 'increase',\n    Decrease = 'decrease',\n}\n\nexport enum PriceType {\n    SpecificValue = 'specific',\n    Percent = 'relative_percent',\n    Amount = 'relative_amount',\n    Same = 'same',\n}\n\nexport const Filter = {\n    Status: 'status',\n    Availiability: 'availiability',\n    Query: 'query',\n} as const;\n\nconst filterKeys = Object.values(Filter);\nexport type FilterKey = typeof filterKeys[number];\nexport type FilterValue = {\n    filter: FilterKey;\n    value: string | '';\n};\n\nexport type FiltersState = {\n    [Filter.Query]: string;\n    [Filter.Status]: FilterStatus | '';\n    [Filter.Availiability]: FilterAvailiability | '';\n};\n\nexport type SortState = {\n    dir: SortDir;\n    field: SortField;\n};\n\nexport type PayloadOf<A> = A extends ActionCreatorWithPayload<infer T>\n    ? T\n    : unknown;\n\nexport type ActionFrom<A> = PayloadAction<PayloadOf<A>>;\n\nexport type Defined<T> = T extends undefined ? never : T;\n\nexport interface UpdateItemsParams {\n    items: {\n        productId: string;\n        variantId?: string;\n    }[];\n}\n\nexport interface AxiosClientError {\n    message: string;\n    code: string | undefined;\n    data: any;\n    status: number | undefined;\n}\n","import store from '@redux/store';\n\nexport const isProduction = process.env.NODE_ENV === 'production';\n\nconst isMocksMode = () => !isProduction && store.getState().app.mock;\n\nexport default isMocksMode;\nexport const isMocksLocalMode = true;\n","export enum AppStatus {\n    Active = 'ACTIVE',\n    PrepareToUninstallInProgress = 'PREPARE_TO_UNINSTALL_IN_PROGRESS',\n    DowngradeInProgress = 'DOWNGRADE_IN_PROGRESS',\n    Uninstalled = 'UNINSTALLED',\n}\n\nexport interface AppStateDTO {\n    app_status: AppStatus;\n    money_format: string;\n    currency_code: string;\n    timezone_offset: string;\n}\n","import { PageDirection, SortDir, SortField } from '@api/types';\nimport { PayloadAction } from '@reduxjs/toolkit';\n\nexport interface StateWithLoadingAndError {\n    loading: boolean;\n    error:\n    | string\n    | null\n    | {\n        message?: string;\n        data?: {\n            errors: { [key: string]: string[] };\n        };\n    };\n}\n\nexport function startLoading(state: StateWithLoadingAndError) {\n    state.loading = true;\n}\n\nexport function stopLoading(state: StateWithLoadingAndError) {\n    state.loading = false;\n}\n\nexport function loadingFailed(\n    state: StateWithLoadingAndError,\n    action: PayloadAction<string>\n) {\n    state.loading = false;\n    state.error = action.payload;\n}\n\nexport const pageInfoInit = {\n    hasNextPage: false,\n    hasPreviousPage: false,\n    pageSize: 10,\n    pageDirection: PageDirection.After,\n    cursor: '',\n};\nexport const sortInit = {\n    dir: SortDir.Asc,\n    field: SortField.Title,\n};\n","import { defineMessages } from 'react-intl';\n\nconst PREFIX = 'topNavBar';\n\nconst messages = defineMessages({\n    buttonsDashboard: {\n        id: `${PREFIX}.buttons.Dashboard`,\n        defaultMessage: 'Dashboard',\n    },\n    buttonsProducts: {\n        id: `${PREFIX}.buttons.Products`,\n        defaultMessage: 'Products',\n    },\n    buttonsUninstall: {\n        id: `${PREFIX}.buttons.Uninstall`,\n        defaultMessage: 'Uninstall',\n    },\n    buttonsSettings: {\n        id: `${PREFIX}.buttons.Settings`,\n        defaultMessage: 'App Settings',\n    },\n    buttonsProfiles: {\n        id: `${PREFIX}.buttons.Profiles`,\n        defaultMessage: 'Profiles',\n    },\n    buttonsMore: {\n        id: `${PREFIX}.buttons.More`,\n        defaultMessage: 'More',\n    },\n    buttonsDesign: {\n        id: `${PREFIX}.buttons.Design`,\n        defaultMessage: 'Design',\n    },\n    buttonsProfile: {\n        id: `${PREFIX}.buttons.Profile`,\n        defaultMessage: 'Profiles',\n    },\n    buttonsKnowledgeBase: {\n        id: `${PREFIX}.buttons.KnowledgeBase`,\n        defaultMessage: 'How to Use',\n    },\n    buttonsSubscription: {\n        id: `${PREFIX}.buttons.Subscription`,\n        defaultMessage: 'Pricing plans',\n    },\n});\n\nexport default messages;\n","import React from 'react';\nimport { Stack, Button, Layout } from '@shopify/polaris';\nimport { useFormat } from '@contexts/LocaleContext';\nimport messages from './messages';\nimport { push } from 'connected-react-router';\n\nimport { ModalSettingsProps } from '@components/Products/ModalProductSettings/ModalProductSettingsParts';\nimport ModalCreateProfile from '@components/Profiles/ModalCreateProfile/ModalCreateProfile';\nimport { useDispatch } from 'react-redux';\nimport { TitleBar } from '@shopify/app-bridge-react';\nimport { ActionProps } from '@shopify/app-bridge-react/types';\n\nfunction TopNavBar() {\n    const dispatch = useDispatch();\n    const { formatDictionary } = useFormat();\n    const msg = formatDictionary(messages);\n\n    const secondaryActions: ActionProps[] = [\n        {\n            content: msg.buttonsProducts,\n            onAction: () => dispatch(push('/products')),\n        },\n        {\n            content: msg.buttonsProfiles,\n            onAction: () => dispatch(push('/profiles')),\n        },\n        {\n            content: msg.buttonsKnowledgeBase,\n            url: 'https://appbossapps.freshdesk.com/support/solutions',\n            external: true,\n        },\n    ];\n    const actionGroups = [\n        {\n            title: msg.buttonsMore,\n            actions: [\n                {\n                    content: msg.buttonsSettings,\n                    onAction: () => dispatch(push('/settings')),\n                },\n                {\n                    content: msg.buttonsSubscription,\n                    onAction: () => dispatch(push('/subscription')),\n                },\n            ],\n        },\n    ];\n\n    const onClickCreator = (url: string) => () => {\n        dispatch(push(url));\n    };\n\n    // TODO remove after AppBridge setup will be finished\n    return false ? (\n        <TitleBar\n            title=\"\"\n            // title=\"My App using up-to-date code\"\n            breadcrumbs={[]}\n            secondaryActions={secondaryActions}\n            actionGroups={actionGroups}\n        />\n    ) : (\n        <Layout.Section>\n            {/*Top Navigation Section*/}\n            <div id=\"topNav\">\n                <Stack>\n                    {/* <Button>{msg.buttonsDashboard}</Button> */}\n                    <Button onClick={onClickCreator('/products')}>\n                        {msg.buttonsProducts}\n                    </Button>\n                    <Button onClick={onClickCreator('/profiles')}>\n                        {msg.buttonsProfiles}\n                    </Button>\n                    <Button\n                        url=\"https://appbossapps.freshdesk.com/support/solutions\"\n                        external\n                    >\n                        {msg.buttonsKnowledgeBase}\n                    </Button>\n                    <Button\n                        connectedDisclosure={{\n                            accessibilityLabel: msg.buttonsDesign,\n                            actions: [\n                                // {\n                                //     content: msg.buttonsProfiles,\n                                //     onAction: () => dispatch(push('/profiles')),\n                                // },\n                                {\n                                    content: msg.buttonsSettings,\n                                    onAction: () => dispatch(push('/settings')),\n                                },\n                                // {\n                                //     content: msg.buttonsKnowledgeBase,\n                                //     onAction: () =>\n                                //         window.open(\n                                //             'https://appbossapps.freshdesk.com/support/solutions',\n                                //             'blank'\n                                //         ),\n                                // },\n                                {\n                                    content: msg.buttonsSubscription,\n                                    onAction: () =>\n                                        dispatch(push('/subscription')),\n                                },\n                            ],\n                        }}\n                    >\n                        {msg.buttonsMore}\n                    </Button>\n                    {/* <Button url=\"/uninstall\">{msg.buttonsUninstall}</Button> */}\n                </Stack>\n            </div>\n        </Layout.Section>\n    );\n}\nexport default TopNavBar;\n","import React, { Component } from 'react';\n\nconst asyncComponent = (\n    importComponent: () => Promise<{ default: React.ComponentType }>\n) => {\n    return class extends Component {\n        state = {\n            component: null,\n        };\n\n        componentDidMount() {\n            importComponent()\n                .then((cmp) => {\n                    this.setState({ component: cmp.default });\n                })\n                .catch((err) => console.error(err));\n        }\n\n        render() {\n            const C = this.state.component as React.ComponentType | null;\n            return C ? <C {...this.props} /> : null;\n        }\n    };\n};\n\nexport default asyncComponent;\n","import React, { useCallback, useMemo } from 'react';\nimport {\n    DisplayText,\n    Icon,\n    Modal,\n    Stack,\n    TextContainer,\n} from '@shopify/polaris';\nimport { useFormat } from '@contexts/LocaleContext';\nimport messages from './messages';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { confirmationSelector } from '@redux/selectors/app';\nimport {\n    handlePrimaryConfirmationAction,\n    handleSecondaryConfirmationAction,\n} from '@redux/reducers/app';\nimport { RiskMajor } from '@shopify/polaris-icons';\nimport './confirmation.scss';\n\nfunction Confirmation() {\n    const { formatDictionary } = useFormat();\n    const dispatch = useDispatch();\n    const { content, open, actions, warning } = useSelector(\n        confirmationSelector\n    );\n    const handlePrimary = useCallback(\n        () => dispatch(handlePrimaryConfirmationAction()),\n        []\n    );\n    const handleSecondary = useCallback(\n        () => dispatch(handleSecondaryConfirmationAction()),\n        []\n    );\n\n    const primaryAction = useMemo(\n        () =>\n            actions === false\n                ? undefined\n                : {\n                      content: actions?.primary ?? 'Yes',\n                      onAction: handlePrimary,\n                  },\n        [actions]\n    );\n\n    const secondaryActions = useMemo(\n        () =>\n            actions === false\n                ? undefined\n                : [\n                      {\n                          content: actions?.secondary ?? 'No',\n                          onAction: handleSecondary,\n                      },\n                  ],\n        [actions]\n    );\n\n    return (\n        <Modal\n            open={open}\n            title=\"\"\n            onClose={handleSecondary}\n            primaryAction={primaryAction}\n            secondaryActions={secondaryActions}\n        >\n            <Modal.Section>\n                <div className=\"confirmationModal\">\n                    {!warning ? null : (\n                        <Icon source={RiskMajor} color=\"yellow\" />\n                    )}\n                    <DisplayText size=\"medium\">{content}</DisplayText>\n                </div>\n            </Modal.Section>\n        </Modal>\n    );\n}\nexport default Confirmation;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Checkbox } from '@shopify/polaris';\nimport { mockSelector } from '@redux/selectors/app';\nimport { isProduction } from '@api/mocks/mock-env';\nimport { toggleMock } from '@redux/reducers/app';\nimport { fetchProducts } from '@redux/reducers/products';\nimport { fetchProfiles } from '@redux/reducers/profiles';\n\nexport default function ToggleMock() {\n    const dispatch = useDispatch();\n    const mock = useSelector(mockSelector);\n\n    const handleOnChange = useCallback((v) => {\n        dispatch(toggleMock(v));\n        if (!v) {\n            dispatch(fetchProducts());\n            dispatch(fetchProfiles());\n        }\n    }, []);\n    return (\n        <>\n            {isProduction ? null : (\n                <div className=\"mockToggler\">\n                    <Checkbox\n                        label=\"Mock\"\n                        onChange={handleOnChange}\n                        checked={mock}\n                    />\n                </div>\n            )}\n        </>\n    );\n}\n","import React from 'react';\nimport './loading-overlay.scss';\n\ninterface Props {\n    // enabled: boolean;\n    // id: string;\n    // onColor: string;\n    // onChange: () => void;\n    // children: JSX.Element;\n}\n\nconst LoadingOverlay: React.FC<Props> = ({ children }) => {\n    return (\n        <div className=\"loadingOverlay\">\n            <div className=\"loadingOverlay__box\">{children}</div>\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Spinner } from '@shopify/polaris';\nimport { isLoadingAppSelector } from '@redux/selectors/app';\nimport LoadingOverlay from '@components/ui-kit/LoadingOverlay/LoadingOverlay';\n\ntype Props = {\n    visible?: boolean;\n};\n\nconst GlobalLoadingOverlay: React.FC<Props> = ({ visible }) => {\n    const loading = useSelector(isLoadingAppSelector);\n\n    return !visible && !loading ? null : (\n        <LoadingOverlay>\n            <Spinner />\n        </LoadingOverlay>\n    );\n};\n\nexport default GlobalLoadingOverlay;\n","import React, { useCallback } from 'react';\nimport { Toast } from '@shopify/polaris';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toastSelector } from '@redux/selectors/app';\nimport './app-toast.scss';\nimport { toggleToast } from '@redux/reducers/app';\n\nfunction AppToast() {\n    const toast = useSelector(toastSelector);\n    const dispatch = useDispatch();\n    const onDismiss = useCallback(() => dispatch(toggleToast()), []);\n\n    if (toast === null) {\n        return null;\n    }\n\n    const { content, duration, error } = toast;\n\n    return toast ? (\n        <Toast\n            content={content}\n            duration={duration}\n            error={error}\n            onDismiss={onDismiss}\n        />\n    ) : null;\n}\nexport default AppToast;\n","import React from 'react';\nimport { AppStatus } from '@api/types/app';\nimport Uninstall from '@components/Uninstall/Uninstall';\nimport Progress from '@components/Uninstall/Steps/Progress/Progress';\nimport './NoAvailableApp.scss';\n\nexport function NoAvailableApp({ status }: { status: AppStatus }) {\n    let content = <Uninstall />;\n\n    switch (status) {\n        case AppStatus.PrepareToUninstallInProgress:\n            content = <Progress />;\n            break;\n        case AppStatus.DowngradeInProgress:\n            content = (\n                <Progress text=\"Price plan downgrade is in progress...\" />\n            );\n            break;\n        case AppStatus.Uninstalled:\n            content = <Uninstall />;\n            break;\n    }\n    return <div className=\"app-in-long-processing\">{content}</div>;\n}\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Page, DisplayText, Layout, Frame } from '@shopify/polaris';\nimport TopNavBar from './TopNavbar/TopNavbar';\nimport { fetchProducts } from '@redux/reducers/products';\nimport { fetchProfiles } from '@redux/reducers/profiles';\nimport asyncComponent from '@components/HOC/asyncComponent';\nimport Confirmation from './Confirmation/Confirmation';\nimport ToggleMock from './ToggleMock';\nimport GlobalLoadingOverlay from './GlobalLoadingOverlay';\nimport AppToast from './AppToast/AppToast';\nimport { errorSelector, statusSelector } from '@redux/selectors/app';\nimport { UninstallStatus } from '@api/types/uninstall';\nimport { push } from 'connected-react-router';\nimport { startPollAppState } from '@redux/reducers/app';\nimport { AppStatus } from '@api/types/app';\nimport Progress from '@components/Uninstall/Steps/Progress/Progress';\nimport { NoAvailableApp } from './NoAvailableApp/NoAvailableApp';\n\nconst ProductsList = asyncComponent(\n    () => import('@components/Products/ProductsList/ProductsList')\n);\n\nconst Uninstall = asyncComponent(\n    () => import('@components/Uninstall/Uninstall')\n);\n\nconst ProfilesList = asyncComponent(\n    () =>\n        import(\n            /* webpackPrefetch: true */ '@components/Profiles/ProfilesList/ProfilesList'\n        )\n);\n\nconst AppSettings = asyncComponent(\n    () =>\n        import(\n            /* webpackPrefetch: true */ '@components/AppSettings/AppSettings'\n        )\n);\n\nconst Subscription = asyncComponent(\n    () =>\n        import(\n            /* webpackPrefetch: true */ '@components/Subscription/Subscription'\n        )\n);\n\nconst Box = ({ children, mod }: { children; mod?: string }) => (\n    <div className={'responsiveBox ' + String(mod)}>{children}</div>\n);\n\nexport default function AppContainer() {\n    const dispatch = useDispatch();\n    const appStatus = useSelector(statusSelector);\n    const appStateError = useSelector(errorSelector);\n\n    useEffect(() => {\n        dispatch(startPollAppState());\n    }, []);\n\n    useEffect(() => {\n        if (appStatus) {\n            if (appStatus === AppStatus.Active) {\n                // dispatch(push('/products'));\n                dispatch(fetchProducts());\n                dispatch(fetchProfiles());\n            } else if (appStatus === AppStatus.Uninstalled) {\n                dispatch(push('/uninstall'));\n            }\n        }\n        /*here will be check paid subscription plan*/\n        return () => {};\n    }, [appStatus]);\n\n    return !appStatus ? (\n        appStateError ? (\n            <div>{(appStateError as any).message}</div>\n        ) : (\n            <GlobalLoadingOverlay visible />\n        )\n    ) : (\n        <Frame>\n            <Page fullWidth>\n                {appStatus !== AppStatus.Active ? (\n                    <NoAvailableApp status={appStatus} />\n                ) : (\n                    <>\n                        <Box>\n                            <TopNavBar />\n                        </Box>\n                        <Layout.Section oneHalf>\n                            <DisplayText element=\"h2\" size=\"large\">\n                                {/* TODO uncomment after AppBridge setup */}\n                                {/* <RoutePropagator /> */}\n                                <Switch>\n                                    <Route path=\"/products\">\n                                        <Box mod=\"header\">Products</Box>\n                                    </Route>\n                                    <Route path=\"/profiles\">\n                                        <Box mod=\"header\">Profiles</Box>\n                                    </Route>\n                                </Switch>\n                            </DisplayText>\n                            <Switch>\n                                <Route path=\"/\" exact>\n                                    <Redirect to=\"/products\" />\n                                </Route>\n                                <Route path=\"/uninstall\">\n                                    <Uninstall />\n                                </Route>\n                                <Route path=\"/products\">\n                                    <ProductsList />\n                                </Route>\n                                <Route path=\"/profiles\">\n                                    <ProfilesList />\n                                </Route>\n                                <Route path=\"/settings\">\n                                    <AppSettings />\n                                </Route>\n                                <Route path=\"/subscription\">\n                                    <Subscription />\n                                </Route>\n                            </Switch>\n                        </Layout.Section>\n                    </>\n                )}\n                <Confirmation />\n                <AppToast />\n                <GlobalLoadingOverlay />\n                <ToggleMock />\n            </Page>\n        </Frame>\n    );\n}\n","import { LinkLikeComponentProps } from '@shopify/polaris/dist/types/latest/src/utilities/link/types';\nimport React from 'react';\nimport { Link as ReactRouterLink } from 'react-router-dom';\n\nconst IS_EXTERNAL_LINK_REGEX = /^(?:[a-z][a-z\\d+.-]*:|\\/\\/)/;\n\nexport default function Link({\n    children,\n    url = '',\n    external,\n    ref,\n    ...rest\n}: LinkLikeComponentProps) {\n    // react-router only supports links to pages it can handle itself. It does not\n    // support arbirary links, so anything that is not a path-based link should\n    // use a reglar old `a` tag\n    if (external || IS_EXTERNAL_LINK_REGEX.test(url)) {\n        rest.target = '_blank';\n        rest.rel = 'noopener noreferrer';\n        return (\n            <a href={url} {...rest}>\n                {children}\n            </a>\n        );\n    }\n\n    return (\n        <ReactRouterLink to={url} {...rest}>\n            {children}\n        </ReactRouterLink>\n    );\n}\n","import React from 'react';\nimport { AppProvider } from '@shopify/polaris';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider, ReactReduxContext } from 'react-redux';\nimport store, { history } from './redux/store';\nimport AppContainer from '@components/layout/AppContainer';\nimport Link from '@components/utils/Link';\nimport { LocaleProvider, LocaleContext } from '@contexts/LocaleContext';\nimport { IntlProvider } from 'react-intl';\nimport en from '@shopify/polaris/locales/en.json';\nimport './stylesheets/style.scss';\nimport AppInstall from './AppInstall';\nimport AppBridgeProvider from './app-bridge/AppBridgeProvider';\nimport RoutePropagator from './app-bridge/RoutePropagator';\n\nconst i18n = en;\nfunction App() {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <LocaleProvider>\n                    <LocaleContext.Consumer>\n                        {({ config: locale }) => (\n                            <IntlProvider {...locale}>\n                                <AppProvider i18n={i18n} linkComponent={Link}>\n                                    {/* <AppBridgeProvider> */}\n                                    <AppContainer />\n                                    {/* </AppBridgeProvider> */}\n                                </AppProvider>\n                            </IntlProvider>\n                        )}\n                    </LocaleContext.Consumer>\n                </LocaleProvider>\n            </ConnectedRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@shopify/polaris/dist/styles.css';\nimport App from './App';\nimport { createApp } from '@shopify/app-bridge';\n\nconst url = new URL(window.location.href);\nconst search = url.searchParams;\n\n// //TODO remove after dubbugging\n// // TRY redirect on install\n// if (!search.get('hmac')) {\n//     const config = {\n//         // apiKey: store.getState().auth.apiKey ?? '',\n//         apiKey: '49e2006401f6ab93d445cb5c74b51bc0',\n//         // apiKey: 'd53d160d30d3cde82887670b2c06188b',\n//         shopOrigin: window.location.host,\n//         forceRedirect: true,\n//     };\n\n//     createApp(config);\n// }\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UninstallStatus } from '../../api/types/uninstall';\nimport { UninstalStatusResponse } from '../../api/uninstall';\nimport { StateWithLoadingAndError } from './common/reducers';\n\ninterface UninstallState extends StateWithLoadingAndError {\n    status: UninstallStatus | null;\n    polling: boolean;\n}\n\nconst initialState: UninstallState = {\n    loading: false,\n    error: null,\n    status: null,\n    polling: false,\n};\n\nconst uninstallSlice = createSlice({\n    name: 'uninstall',\n    initialState,\n    reducers: {\n        startPollUninstallStatus(state) {\n            state.polling = true;\n        },\n        stopPollUninstallStatus(state) {\n            state.polling = false;\n        },\n        getUninstallStatus(state) {\n            state.loading = false;\n        },\n        getUninstallStatusSuccess(\n            state,\n            { payload }: PayloadAction<UninstalStatusResponse>\n        ) {\n            state.loading = false;\n            state.status = payload.prepare_to_uninstall_status;\n            state.polling =\n                payload.prepare_to_uninstall_status ===\n                UninstallStatus.Progress;\n        },\n        getUninstallStatusFailure(state, { payload }: PayloadAction<unknown>) {\n            state.loading = false;\n            state.error = (payload as string) || null;\n            state.polling = false;\n        },\n        startUninstallPreparation(state) {\n            state.loading = false;\n        },\n        startUninstallPreparationSuccess(state) {\n            state.loading = false;\n            state.status = UninstallStatus.Progress;\n        },\n        startUninstallPreparationFailure(\n            state,\n            { payload }: PayloadAction<unknown>\n        ) {\n            state.loading = false;\n            state.error = (payload as null) || null;\n            state.polling = false;\n        },\n    },\n    extraReducers: () => {\n        // builder.addCase(openSettingsModal, (state, action) => {\n        //     state.profileModal = initialState.profileModal;\n        //, });\n    },\n});\n\nexport const {\n    startPollUninstallStatus,\n    stopPollUninstallStatus,\n    getUninstallStatus,\n    getUninstallStatusSuccess,\n    getUninstallStatusFailure,\n    startUninstallPreparation,\n    startUninstallPreparationSuccess,\n    startUninstallPreparationFailure,\n} = uninstallSlice.actions;\n\nexport default uninstallSlice.reducer;\n","import {\n    AppSettingsDTO,\n    AppSettingsInState,\n    Area,\n    BaseDesignSettingsDTO,\n    ButtonPart,\n    CommonDesignSettingsDTO,\n} from '@api/types/settings';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { StateWithLoadingAndError } from './common/reducers';\n\ninterface ConfirmationActions {\n    primary: '12px';\n    secondary: '12px';\n}\n\ntype AppSettingsState = AppSettingsInState & StateWithLoadingAndError;\n\nconst defaultDesignSettings: BaseDesignSettingsDTO = {\n    color: '#FFFFFF',\n    background_color: '#6371c7',\n    border_color: '#3f4eae',\n    font_family: 'inherit',\n    font_size: '18px',\n    font_weight: 'normal',\n    text_decoration: 'none',\n    font_style: 'normal',\n    border_radius: '3px',\n    border_width: '1px',\n    padding_top: '12px',\n    padding_bottom: '12px',\n    padding_right: '30px',\n    padding_left: '30px',\n};\n\nconst initialState: AppSettingsState = {\n    loading: false,\n    error: null,\n    settings: {\n        app: null,\n        design: {\n            selected: {\n                preorder: 'button',\n                checkout: 'button',\n            },\n            state: null,\n        },\n    },\n    // design_settings: {\n    //     preorder_button: defaultDesignSettings,\n    //     checkout_button: defaultDesignSettings,\n\n    //     user_id: '',\n    //     created_at: '',\n    //     updated_at: '',\n    // },\n    // app_settings: {\n    //     user_id: '',\n    //     price: '',\n    //     price_type: 'specific',\n    //     start_date: '',\n    //     end_date: '',\n    //     inventory_limit: '1',\n    //     button_text: '',\n    //     button_message: '',\n    //     created_at: '',\n    //     updated_at: '',\n    // },\n};\n\nconst slice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        resetSettings(state) {\n            return initialState;\n        },\n        resetDesignSettings(\n            {\n                settings: {\n                    design: { state, selected },\n                },\n            },\n            { payload: area }: PayloadAction<Area>\n        ) {\n            if (state) {\n                state.current[area] = state.default[area];\n            }\n        },\n        setSelected(\n            state,\n            {\n                payload: { area, part },\n            }: PayloadAction<{ area: Area; part: ButtonPart }>\n        ) {\n            state.settings.design.selected[area] = part;\n        },\n        getSettings(state) {\n            state.loading = true;\n        },\n        getSettingsSucces(state, { payload }: PayloadAction<AppSettingsDTO>) {\n            state.settings.app = {\n                ...initialState.settings.app,\n                ...payload.app_settings,\n            };\n            state.settings.design = {\n                ...initialState.settings.design,\n                state: payload.design_settings,\n            };\n            // {\n            //     ...state.design_settings,\n            //     ...payload.design_settings,\n            //     preorder_button: {\n            //         ...initialState.design_settings?.preorder_button,\n            //         ...payload.design_settings.preorder_button,\n            //     },\n            //     checkout_button: {\n            //         ...initialState.design_settings?.checkout_button,\n            //         ...payload.design_settings.checkout_button,\n            //     },\n            // };\n            state.loading = false;\n        },\n        getSettingsFailure(state, { payload }: PayloadAction<AppSettingsDTO>) {\n            state.loading = false;\n        },\n        patchAppSettings(\n            state,\n            { payload }: PayloadAction<AppSettingsInState['settings']['app']>\n        ) {\n            state.settings.app = payload;\n        },\n        patchAreaDesignSettingsInState(\n            {\n                settings: {\n                    design: { state, selected },\n                },\n            },\n            {\n                payload: { style, area },\n            }: PayloadAction<{\n                style: Partial<CommonDesignSettingsDTO>;\n                area: Area;\n            }>\n        ) {\n            const areaInState = state!.current[area];\n            areaInState[selected[area]] = {\n                ...areaInState[selected[area]],\n                ...style,\n            };\n        },\n        patchCheckoutDesignSettingsInState(\n            {\n                settings: {\n                    design: {\n                        state,\n                        selected: { checkout: selected },\n                    },\n                },\n            },\n            { payload }: PayloadAction<Partial<CommonDesignSettingsDTO>>\n        ) {\n            state!.current.checkout[selected] = {\n                ...state!.current.checkout[selected],\n                ...payload,\n            };\n        },\n        // patchDesignSettings(\n        //     state,\n        //     { payload }: PayloadAction<AppSettingsInState['design_settings']>\n        // ) {\n        //     state.design_settings = payload;\n        // },\n        updateSettings(state) {\n            state.loading = true;\n        },\n        updateSettingsSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.loading = false;\n        },\n        updateSettingsFailure(state, { payload }: PayloadAction<any>) {\n            state.loading = false;\n        },\n    },\n    extraReducers: () => {\n        // builder.addCase(openSettingsModal, (state, action) => {\n        //     state.profileModal = initialState.profileModal;\n        //, });\n    },\n});\n\nexport const {\n    resetSettings,\n    resetDesignSettings,\n    setSelected,\n    getSettings,\n    getSettingsSucces,\n    getSettingsFailure,\n    patchAppSettings,\n    updateSettings,\n    updateSettingsSuccess,\n    updateSettingsFailure,\n    patchAreaDesignSettingsInState,\n    patchCheckoutDesignSettingsInState,\n} = slice.actions;\n\nexport default slice.reducer;\n","import { RootState } from '@redux/reducers/rootReducer';\nimport { createSelector } from '@reduxjs/toolkit';\n\nconst selectAppState = (state: RootState) => state.app;\n\nexport const confirmationSelector = createSelector(\n    selectAppState,\n    (sub) => sub.confirmation\n);\n\nexport const toastSelector = createSelector(selectAppState, (sub) => sub.toast);\n\nexport const mockSelector = createSelector(selectAppState, (sub) => sub.mock);\n\nexport const isLoadingAppSelector = createSelector(\n    selectAppState,\n    (sub) => sub.loading\n);\n\nexport const statusSelector = createSelector(\n    selectAppState,\n    (sub) => sub.status\n);\n\n// export const moneyFormatSelector = createSelector(selectAppState, (sub) => ({\n//     money_format: sub.money_format,\n//     currency_shopify_format: sub.currency_shopify_format,\n// }));\n\n\nconst money_formatSelector = createSelector(\n    selectAppState,\n    (sub) => sub.money_format\n);\n\nconst currency_shopify_formatSelector = createSelector(\n    selectAppState,\n    (sub) => sub.currency_shopify_format\n);\n\nexport const moneyFormatSelector = createSelector(\n    money_formatSelector,\n    currency_shopify_formatSelector,\n    (money_format, currency_shopify_format) => ({\n        money_format,\n        currency_shopify_format,\n    }));\n\nexport const currencySymbolSelector = createSelector(\n    selectAppState,\n    (sub) => sub.currency_symbol\n);\n\nexport const timezoneOffsetSelector = createSelector(\n    selectAppState,\n    (sub) => sub.timezone_offset\n);\n\nexport const errorSelector = createSelector(selectAppState, (sub) => sub.error);\nexport const openedPopoverSelector = createSelector(\n    selectAppState,\n    (sub) => sub.openedPopover\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n    ProductSettingsResponse,\n    ProductsResponse,\n    UpdateSettingsParams,\n} from '@api/products';\nimport {\n    loadingFailed,\n    pageInfoInit,\n    startLoading,\n    StateWithLoadingAndError,\n} from './common/reducers';\nimport ProductItem from '@components/Products/ProductItem/ProductItem';\nimport { isDefaultVariant } from '@components/utils/functions';\nimport {\n    FilterValue,\n    ProductInState,\n    VariantInState,\n    PageInfo,\n    FiltersState,\n    SortState,\n    SortDir,\n    SortField,\n    Filter,\n    PreorderStatus,\n    PageDirection,\n    FilterStatus,\n    FilterAvailiability,\n    ProfileDTO,\n    ProductSettingsDTO,\n    Profile,\n    Product,\n    Defined,\n    Variant,\n} from '@api/types';\nimport { openProfileModal, updateProfileSuccess } from './profiles';\nimport { getSettingsFailure } from './settings';\n\n// export type FilterKey = keyof ProductsState['filters'];\n\nfunction removeItemFromArray<T>(array: T[], item: T) {\n    const index = array.indexOf(item);\n    if (index !== -1) {\n        array.splice(index, 1);\n    }\n}\n\nconst startLoadingAndCollapse = (state: ProductsState) => {\n    startLoading(state);\n    state.unfoldedProductsIds = [];\n};\n\nconst PREFIX = 'products';\ntype FetchProductsParams = undefined | { filterValue?: FilterValue };\ntype FetchProductSettingsParams = undefined | { filterValue?: FilterValue };\n\ninterface ProductsState extends StateWithLoadingAndError {\n    // products: Product[];\n    productsById: Record<string, ProductInState>;\n    productsIds: string[];\n    variantsById: Record<string, VariantInState>;\n    pageInfo: PageInfo;\n    loading: boolean;\n    error: string | null;\n    selectedProducts: {\n        productsIds: string[];\n        variantsIds: string[];\n        all: boolean;\n    };\n    filters: FiltersState;\n    sort: SortState;\n    unfoldedProductsIds: string[];\n    settingsModal: {\n        open: boolean;\n        data: Partial<ProfileDTO> | null;\n    } & StateWithLoadingAndError;\n    assignProfileModal: {\n        open: boolean;\n        data?: {\n            profile?: Partial<Profile>;\n            product?: Partial<Product | Variant>;\n        };\n    } & StateWithLoadingAndError;\n}\nconst initialState: ProductsState = {\n    // products: [],\n    loading: false,\n    error: null,\n    pageInfo: pageInfoInit,\n    selectedProducts: {\n        productsIds: [],\n        variantsIds: [],\n        all: false,\n    },\n    filters: {\n        query: '',\n        status: '',\n        availiability: '',\n    },\n    sort: {\n        dir: SortDir.Asc,\n        field: SortField.Title,\n    },\n    unfoldedProductsIds: [],\n    productsById: {},\n    productsIds: [],\n    variantsById: {},\n    settingsModal: {\n        loading: false,\n        data: null,\n        error: null,\n        open: false,\n    },\n    assignProfileModal: {\n        loading: false,\n        error: null,\n        open: false,\n    },\n};\n\nfunction resetSelectedProducts(state: ProductsState) {\n    state.selectedProducts = { ...initialState.selectedProducts };\n}\n\nconst fetchProductsReducer = (\n    state: ProductsState,\n    { payload: params }: PayloadAction<FetchProductsParams>\n) => {\n    if (params) {\n        const { filterValue } = params;\n        if (filterValue) {\n            state.filters[filterValue.filter] = filterValue.value as '';\n        }\n\n        state.pageInfo = initialState.pageInfo;\n        if (filterValue?.filter !== Filter.Query) {\n            startLoadingAndCollapse(state);\n        }\n    } else {\n        startLoading(state);\n    }\n};\n\nconst fetchProductSettingsReducer = (\n    state: ProductsState,\n    {\n        payload,\n    }: PayloadAction<{\n        variantId?: string;\n        productId: string;\n    }>\n) => {\n    state.settingsModal.loading = true;\n};\n\nconst getPreorderEnableStatus = (item: { preorder_status: string }) => {\n    switch (item.preorder_status) {\n        case PreorderStatus.Enabled:\n            return true;\n            break;\n        case PreorderStatus.Disabled:\n            return false;\n            break;\n\n        default:\n            return true;\n    }\n};\n\n// export const fetchProducts = createAsyncThunk(\n//     'products/fetchProducts',\n//     async () => await productsApi.getProducts()\n// );\n// export const fetchProducts1 = (params?: {\n//     filterValue?: FilterValue;\n// }): AppThunk => async (dispatch, getState) => {\n//     // let filter: FiltersState;\n//     // let page: PageInfo;\n//     if (params) {\n//         const { filterValue } = params;\n//         if (filterValue) {\n//             dispatch(setFilter(filterValue));\n//         }\n//     }\n\n//     const filter = getState().products.filters;\n//     const pageInfo = getState().products.pageInfo;\n\n//     try {\n//         dispatch(getProductsStart());\n//         const products = await productsApi.getProducts({ filter, pageInfo });\n//         dispatch(getProductsSuccess(products));\n//     } catch (err) {\n//         dispatch(getProductsFailure(err));\n//     }\n// };\n\nconst productsSlice = createSlice({\n    name: PREFIX,\n    initialState,\n    reducers: {\n        startLoading,\n        //  Products Fetching\n        getProductsStart: startLoading,\n        getProductsSuccess(\n            state,\n            { payload }: PayloadAction<ProductsResponse>\n        ) {\n            const { products, pageInfo } = payload;\n            // state.products = products;\n            state.pageInfo = { ...state.pageInfo, ...pageInfo };\n            state.loading = false;\n            state.error = null;\n\n            const byId = products.reduce(\n                (acc, product) => {\n                    const { variants, ...productRest } = product;\n                    // let different = false;\n                    let allDisabled = true;\n                    let allActivated = true;\n\n                    const variantsInState: ProductsState['variantsById'] = {};\n                    Object.values(variants).forEach((variant) => {\n                        const variantEnabled = getPreorderEnableStatus(variant);\n\n                        if (!isDefaultVariant(variant)) {\n                            //     different =\n                            //         different || variantEnabled !== productEnabled;\n                            allDisabled = allDisabled && !variantEnabled;\n                            allActivated =\n                                allActivated &&\n                                variant.preorder_status ===\n                                PreorderStatus.Activated;\n                        } else {\n                            allDisabled = false;\n                            allActivated = false;\n                            product.preorder_status = variant.preorder_status;\n                        }\n                        variantsInState[variant.id] = {\n                            ...variant,\n                            enabled: variantEnabled,\n                        };\n                    });\n\n                    if (allDisabled) {\n                        product.preorder_status = PreorderStatus.Disabled;\n                    }\n                    if (allActivated) {\n                        product.preorder_status = PreorderStatus.Activated;\n                    }\n\n                    const productEnabled = getPreorderEnableStatus(product);\n                    acc.products[product.id] = {\n                        ...productRest,\n                        preorder_status: product.preorder_status,\n                        variants: Object.keys(variants),\n                        // different,\n                        enabled: productEnabled,\n                    };\n                    acc.productsIds.add(product.id);\n                    acc.variants = { ...acc.variants, ...variantsInState };\n\n                    return acc;\n                },\n                { products: {}, productsIds: new Set(), variants: {} } as {\n                    products: ProductsState['productsById'];\n                    productsIds: Set<string>;\n                    variants: ProductsState['variantsById'];\n                }\n            );\n\n            state.productsById = byId.products;\n            state.productsIds = Array.from(byId.productsIds);\n            state.variantsById = byId.variants;\n        },\n        getProductsFailure: loadingFailed,\n\n        // Product Settings fetching\n        getProductSettingsSuccess(\n            state,\n            { payload }: PayloadAction<ProductSettingsResponse>\n        ) {\n            // const { products, pageInfo } = payload;\n            // // state.products = products;\n            // state.pageInfo = { ...state.pageInfo, ...pageInfo };\n            state.settingsModal.loading = false;\n            state.settingsModal.data = payload;\n            state.error = null;\n        },\n        getProductSettingsFailure(state, { payload }: PayloadAction<string>) {\n            state.settingsModal = {\n                ...initialState.settingsModal,\n                error: payload,\n            };\n            // state.settingsModal.error = payload;\n        },\n\n        // Products Selection\n        selectProducts(\n            state,\n            {\n                payload: { productsIds },\n            }: PayloadAction<Omit<typeof initialState.selectedProducts, 'all'>>\n        ) {\n            const selectedProductsIds = productsIds.filter(\n                (id) => state.productsById[id] !== undefined\n            );\n\n            state.selectedProducts.productsIds = selectedProductsIds;\n\n            state.selectedProducts.all =\n                selectedProductsIds.length === state.productsIds.length;\n\n            state.selectedProducts.variantsIds =\n                selectedProductsIds.reduce((acc, id) => {\n                    acc.push(...state.productsById[id].variants);\n                    return acc;\n                }, [] as string[]) ?? [];\n        },\n        selectVariants(\n            state,\n            {\n                payload: { selected, productId },\n            }: PayloadAction<{ selected: string[]; productId: string }>\n        ) {\n            // const selectedSet = new Set([\n            //     ...state.selectedProducts.variantsIds,\n            //     ...selected,\n            // ]);\n            const stateVariantsIds = [...state.selectedProducts.variantsIds];\n\n            const productVariants = state.productsById[productId].variants;\n\n            productVariants.forEach((s) =>\n                removeItemFromArray(stateVariantsIds, s)\n            );\n            stateVariantsIds.push(...selected);\n\n            if (productVariants.length === selected.length) {\n                if (!state.selectedProducts.productsIds.includes(productId)) {\n                    state.selectedProducts.productsIds.push(productId);\n                }\n            } else {\n                removeItemFromArray(\n                    state.selectedProducts.productsIds,\n                    productId\n                );\n            }\n\n            state.selectedProducts.variantsIds = [...stateVariantsIds];\n            state.selectedProducts.all =\n                state.selectedProducts.productsIds.length ===\n                state.pageInfo.pageSize;\n        },\n\n        // Paging\n        setPage(state, { payload }: PayloadAction<PageDirection>) {\n            if (payload !== PageDirection.Same) {\n                state.pageInfo.pageDirection = payload;\n            }\n            const pageInfo = state.pageInfo;\n\n            if (payload === PageDirection.After && state.pageInfo.hasNextPage) {\n                const idOfLastProduct =\n                    state.productsIds[state.productsIds.length - 1];\n                pageInfo.cursor = state.productsById[idOfLastProduct].cursor;\n            } else if (\n                payload === PageDirection.Before &&\n                state.pageInfo.hasPreviousPage\n            ) {\n                const idOfFirstProduct = state.productsIds[0];\n                pageInfo.cursor = state.productsById[idOfFirstProduct].cursor;\n            }\n\n            state.selectedProducts = initialState.selectedProducts;\n\n            if (payload == PageDirection.Same) {\n                startLoading(state);\n            } else {\n                startLoadingAndCollapse(state);\n            }\n        },\n\n        // Filters\n        setSort(state, { payload }: PayloadAction<SortState>) {\n            state.sort = payload;\n            state.pageInfo = initialState.pageInfo;\n\n            state.selectedProducts = initialState.selectedProducts;\n            startLoadingAndCollapse(state);\n        },\n\n        // Filters\n        setFilter(\n            state,\n            { payload: { filter, value } }: PayloadAction<FilterValue>\n        ) {\n            state.filters[filter] = value as '';\n        },\n        setFilterQuery(state, { payload }: PayloadAction<string>) {\n            state.filters.query = payload;\n        },\n        setFilterStatus(state, { payload }: PayloadAction<FilterStatus>) {\n            state.filters.status = payload;\n        },\n        setFilterAvailiability(\n            state,\n            { payload }: PayloadAction<FilterAvailiability>\n        ) {\n            state.filters.availiability = payload;\n        },\n\n        // Folding\n        setUnfolded(\n            state,\n            { payload }: PayloadAction<{ id: string; unfolded: boolean }>\n        ) {\n            if (payload.unfolded) {\n                state.unfoldedProductsIds.push(payload.id);\n            } else {\n                removeItemFromArray(state.unfoldedProductsIds, payload.id);\n            }\n        },\n\n        // Enable/Disable\n        setStatus(\n            state,\n            {\n                payload,\n            }: PayloadAction<{\n                id: string;\n                enabled: boolean;\n                isVariant: boolean | undefined;\n            }>\n        ) { },\n        bulkEnable(state, { payload }: PayloadAction<false | undefined>) { },\n        bulkEnableSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.loading = false;\n        },\n        bulkEnableFailureByPlan(state) {\n            state.loading = false;\n        },\n        bulkEnableFailure(state, action: PayloadAction<string>) {\n            state.loading = false;\n        },\n        openAssignProfileModal(\n            state,\n            {\n                payload,\n            }: PayloadAction<\n                typeof initialState.assignProfileModal.data | undefined\n            >\n        ) {\n            state.assignProfileModal.open = true;\n            state.assignProfileModal.data = payload;\n        },\n        closeAssignProfileModal(state, action: PayloadAction<undefined>) {\n            state.assignProfileModal = initialState.assignProfileModal;\n        },\n        assignProfile(\n            state,\n            { payload }: PayloadAction<{ id: string; item?: Variant }>\n        ) {\n            state.assignProfileModal.loading = false;\n            state.assignProfileModal.open = false;\n            state.settingsModal.open = false;\n            state.loading = true;\n        },\n        assignProfileSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.assignProfileModal = initialState.assignProfileModal;\n        },\n        assignProfileFailure(state, { payload }: PayloadAction<string>) {\n            state.assignProfileModal.loading = false;\n            state.assignProfileModal.error = payload;\n            state.assignProfileModal.open = true;\n            state.loading = false;\n        },\n        unassignProfile(\n            state,\n            {\n                payload,\n            }: PayloadAction<{ id?: string; item?: Variant } | undefined>\n        ) {\n            // state.assignProfileModal.loading = true;\n            // state.loading = true;\n        },\n        startUnassignProfiles(state, { payload }: PayloadAction<undefined>) {\n            // state.assignProfileModal.loading = true;\n            state.loading = true;\n        },\n        unassignProfileSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.assignProfileModal = initialState.assignProfileModal;\n            state.loading = false;\n        },\n        unassignProfileFailure(state, { payload }: PayloadAction<string>) {\n            // state.assignProfileModal.loading = false;\n            // state.assignProfileModal.error = payload;\n            state.loading = false;\n        },\n        setSettings(state, { payload }: PayloadAction<UpdateSettingsParams>) {\n            state.settingsModal.loading = true;\n        },\n        setSettingsSuccess(state, { payload }: PayloadAction<boolean>) {\n            state.settingsModal = initialState.settingsModal;\n        },\n        setSettingsFailure(state, { payload }: PayloadAction<string>) {\n            state.settingsModal.loading = false;\n            state.settingsModal.error = payload;\n        },\n        openSettingsModal(state, { payload: open }: PayloadAction<boolean>) {\n            state.settingsModal.open = open;\n            if (!open) {\n                state.settingsModal = initialState.settingsModal;\n            }\n        },\n        updateProductsAndVariantsStatusBulk(\n            state,\n            {\n                payload,\n            }: PayloadAction<{\n                enabled: boolean;\n                products: ProductInState[];\n                variants: VariantInState[];\n            }>\n        ) {\n            const { products, variants, enabled } = payload;\n            startLoading(state);\n\n            products.forEach((item) => {\n                const product = state.productsById[item.id];\n                product.enabled = enabled;\n            });\n            variants.forEach((item) => {\n                const variant = state.variantsById[item.id];\n                variant.enabled = enabled;\n            });\n        },\n        //epics\n        fetchProducts: fetchProductsReducer,\n        fetchProductsWithQuery: fetchProductsReducer,\n        fetchProductsWithQueryStart: startLoadingAndCollapse,\n        fetchProductSettings: fetchProductSettingsReducer,\n    },\n    extraReducers: (builder) => {\n        // builder.addCase(\n        //     fetchProducts.fulfilled,\n        //     (state, action: PayloadAction<typeof initialState.products>) => {\n        //         state.products = action.payload;\n        //     }\n        // );\n\n        builder\n            .addCase(openProfileModal, (state, action) => {\n                state.settingsModal.open = true;\n            })\n            .addCase(updateProfileSuccess, (state, action) => {\n                state.settingsModal.open = false;\n            })\n            .addCase(getSettingsFailure, (state, action) => {\n                // state.settingsModal.open = false;\n            });\n    },\n});\n\nexport const {\n    getProductsStart,\n    getProductsSuccess,\n    getProductsFailure,\n    selectProducts,\n    setFilter,\n    fetchProducts,\n    fetchProductsWithQueryStart,\n    fetchProductsWithQuery,\n    setPage,\n    setSort,\n    setUnfolded,\n    selectVariants,\n    setStatus,\n    setSettings,\n    openSettingsModal,\n    updateProductsAndVariantsStatusBulk,\n    fetchProductSettings,\n    getProductSettingsSuccess,\n    getProductSettingsFailure,\n    setSettingsSuccess,\n    setSettingsFailure,\n    bulkEnable,\n    bulkEnableSuccess,\n    bulkEnableFailureByPlan,\n    bulkEnableFailure,\n    openAssignProfileModal,\n    closeAssignProfileModal,\n    assignProfile,\n    assignProfileSuccess,\n    assignProfileFailure,\n    unassignProfile,\n    unassignProfileSuccess,\n    unassignProfileFailure,\n    startUnassignProfiles,\n\n    startLoading: startLoadingProducts,\n} = productsSlice.actions;\n\nexport default productsSlice.reducer;\n","const en = {\n    locale: 'en',\n    messages: {},\n};\n\n/**\n * Substitues property name instead of value for each property in object\n * @param obj\n */\ntype Messages = typeof en.messages;\nfunction injectnameofs(obj: Messages) {\n    type KeyType = keyof Messages;\n    const result = {} as { [key in KeyType]: key };\n    for (const prop in obj) {\n        (function (p, o) {\n            Object.defineProperty(result, p, {\n                get: function () {\n                    return p;\n                },\n            });\n        })(prop, obj);\n    }\n\n    return result;\n}\n\nconst strings = injectnameofs(en.messages);\n\nexport { strings, en };\n","import React, { useState, useCallback, useMemo } from 'react';\nimport {\n    IntlConfig,\n    useIntl,\n    MessageDescriptor,\n    defineMessages,\n    createIntl,\n    createIntlCache,\n    defineMessage,\n    FormatNumberOptions,\n} from 'react-intl';\nimport { en as enLocaleConfig } from '@Resources';\nimport English from '../i18n/en.json';\nimport flatten from 'flat';\nimport { useSelector } from 'react-redux';\nimport { moneyFormatSelector } from '@redux/selectors/app';\nimport { getFormattedPriceString } from '@components/utils/functions';\nimport { CurrencyShopifyFormat } from '@redux/reducers/app';\ntype Locale = Pick<IntlConfig, 'messages' | 'locale'>;\n\ntype LocaleContextType = {\n    config: Locale;\n    setLocale: (local: Locale) => void;\n};\n\nexport class NumberParser {\n    _group: string;\n    get groupSeparator() {\n        return this._group;\n    }\n    _groupRegExp: RegExp;\n\n    _decimal: string;\n    get decimalSeparator() {\n        return this._decimal;\n    }\n    _decimalRegExp: RegExp;\n\n    _numeral: string;\n    _numeralRegExp: RegExp;\n    _getIndex: (v: string) => string;\n\n    constructor(locale) {\n        const parts = new Intl.NumberFormat(locale).formatToParts(12345.6);\n        const intl = new Intl.NumberFormat(locale, { useGrouping: false });\n        const numerals = [...intl.format(9876543210).split('')].reverse();\n\n        const index = new Map(numerals.map((d, i) => [d, i]));\n        this._group = parts.find((d) => d.type === 'group')!.value;\n\n        this._groupRegExp = new RegExp(`[${this._group}]`, 'g');\n        this._decimal = parts.find((d) => d.type === 'decimal')!.value;\n        this._decimalRegExp = new RegExp(\n            `[${parts.find((d) => d.type === 'decimal')!.value}]`\n        );\n        this._numeral = numerals.join('');\n        this._numeralRegExp = new RegExp(`[${this._numeral}]`, 'g');\n        this._getIndex = (d) => String(index.get(d));\n    }\n\n    tryParse(value: string): string | false {\n        const replacedValue = value\n            .trim()\n            .replace(/^0+/, '')\n            .replace(this._groupRegExp, '')\n            .replace(this._decimalRegExp, '.')\n            .replace(this._numeralRegExp, this._getIndex);\n\n        const result = Number(replacedValue);\n        return isNaN(result) ? false : result.toString();\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment\nenLocaleConfig.messages = flatten(English);\n\nconst cache = createIntlCache();\n\nexport const intl = createIntl(enLocaleConfig, cache);\n\nconst LocaleContext = React.createContext<LocaleContextType>({\n    config: intl,\n    setLocale: (local: Locale) => void local,\n});\n\nconst LocaleProvider: React.FC = (props) => {\n    const [config, setLocale] = useState<Locale>(enLocaleConfig);\n\n    const сontext = {\n        config,\n        setLocale,\n    };\n    return <LocaleContext.Provider value={сontext} {...props} />;\n};\n\nfunction useLocale() {\n    const context = React.useContext(LocaleContext);\n    if (context === undefined) {\n        throw new Error(`useUser must be used within a UserProvider`);\n    }\n    return context;\n}\n\ntype Dictionary<T> = { [key in keyof T]: MessageDescriptor };\n\nfunction formatDictionary<T extends Dictionary<T>>(\n    dic: T,\n    fmt: (...args: any) => string\n) {\n    return Object.keys(dic).reduce(\n        (acc, key) => ({ [key]: fmt(dic[key as keyof T]), ...acc }),\n        {} as { [key in keyof T]: string }\n    );\n}\n\nfunction useFormat() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { formatMessage, formatDate } = useIntl();\n    const formatDictionaryCb = useCallback(\n        <T extends Dictionary<T>>(dic: T) =>\n            formatDictionary<T>(dic, formatMessage),\n        [formatMessage]\n    );\n    const moneyFormat = useSelector(moneyFormatSelector);\n\n    const moneyFormatMessage = React.useMemo(\n        () =>\n            defineMessage({\n                id: 'app.intl.moneyFormat',\n                defaultMessage: moneyFormat.money_format,\n            }),\n        [moneyFormat.money_format]\n    );\n\n    const twoFractionDigitsOpts = {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    };\n    const noFractionDigitsOpts = { maximumFractionDigits: 0 };\n\n    const getIntlOptions = useCallback(() => {\n        const intl = {\n            [CurrencyShopifyFormat.Amount]: {\n                locale: 'en-US',\n                options: twoFractionDigitsOpts,\n            },\n            [CurrencyShopifyFormat.AmountNoDecimals]: {\n                locale: 'en-US',\n                options: noFractionDigitsOpts,\n            },\n            [CurrencyShopifyFormat.AmountWithCommaSeparator]: {\n                locale: 'de-GE',\n                options: twoFractionDigitsOpts,\n            },\n            [CurrencyShopifyFormat.AmountNoDecimalsWithCommaSeparator]: {\n                locale: 'de-GE',\n                options: noFractionDigitsOpts,\n            },\n            [CurrencyShopifyFormat.AmountWithApostropheSeparator]: {\n                locale: 'de-CH',\n                options: twoFractionDigitsOpts,\n            },\n        }[moneyFormat.currency_shopify_format] as {\n            locale: string;\n            options: FormatNumberOptions;\n        };\n\n        return intl;\n    }, [moneyFormat.currency_shopify_format]);\n\n    const formatCurrencyValue = useCallback(\n        (amount: string, options?: FormatNumberOptions) => {\n            const intl = getIntlOptions();\n\n            amount = createIntl({ locale: intl.locale }).formatNumber(\n                Number(amount),\n                {\n                    ...intl.options,\n                    ...options,\n                }\n            );\n\n            return amount;\n        },\n        [getIntlOptions]\n    );\n\n    const formatMoney = useCallback(\n        (amount: string) => {\n            amount = formatCurrencyValue(amount);\n\n            return formatMessage(moneyFormatMessage, {\n                [moneyFormat.currency_shopify_format]: amount,\n            });\n        },\n        [\n            formatMessage,\n            moneyFormatMessage,\n            moneyFormat.currency_shopify_format,\n            formatCurrencyValue,\n        ]\n    );\n\n    // const getFormattedPriceString = useCallback(\n    //     (amount: string) =>\n    //         formatMessage(moneyFormatMessage, {\n    //             amount,\n    //         }),\n    //     [formatMessage, moneyFormatMessage]\n    // );\n\n    const getPriceString = useCallback(\n        (amount: string | number | null) =>\n            getFormattedPriceString(formatMoney, amount),\n        []\n    );\n\n    const formatters = useMemo(\n        () => ({\n            fmt: formatMessage,\n            formatDictionary: formatDictionaryCb,\n            formatMessage,\n            formatDate,\n            formatCurrencyValue,\n            formatMoney,\n            getPriceString,\n            getIntlOptions,\n        }),\n        [\n            formatMessage,\n            formatDictionaryCb,\n            formatDate,\n            formatMoney,\n            getIntlOptions,\n            formatCurrencyValue,\n            getPriceString,\n        ]\n    );\n\n    return formatters;\n}\n\ntype Message = {\n    id: string;\n    defaultMessage: string;\n};\n\nfunction defineMessagesWithPrefix<\n    T extends Message,\n    U extends Record<string, T>\n>(prefix: string, msgs: U): U {\n    Object.keys(msgs).forEach((key: keyof U) => {\n        const msg = msgs[key];\n\n        msgs[key] = {\n            ...msgs[key],\n            id: `${prefix}.${msg.id}`,\n        };\n    });\n\n    // return defineMessages(msgs);\n    return msgs;\n}\n\nexport {\n    defineMessagesWithPrefix,\n    useLocale,\n    LocaleProvider,\n    LocaleContext,\n    useFormat,\n};\n","export * from './common';\nexport * from './profiles';\n\nexport declare const _env_: {\n    REACT_APP_API_HOST: string;\n};\n","import { SubscriptionResponse } from '@api/subscription';\nimport { SubscriptionDTO } from '@api/types/subscription';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ClientApplication } from '@shopify/app-bridge/client/types';\nimport { StateWithLoadingAndError } from './common/reducers';\n\ninterface ConfirmationActions {\n    primary: string;\n    secondary: string;\n}\n\ninterface SubscriptionState extends StateWithLoadingAndError {\n    subscription: {\n        items: SubscriptionResponse;\n        active: SubscriptionDTO | null;\n    };\n}\n\nconst initialState: SubscriptionState = {\n    loading: false,\n    error: null,\n    subscription: { items: [], active: null },\n};\n\nconst subscriptionSlice = createSlice({\n    name: 'subscription',\n    initialState,\n    reducers: {\n        switchToPlan(\n            state,\n            {\n                payload,\n            }: PayloadAction<{\n                id: number;\n                app?: ClientApplication<any>;\n                withConfirmation?: boolean;\n            }>\n        ) {\n            state.loading = true;\n        },\n        getSubscription(state) {\n            state.loading = true;\n        },\n        getSubscriptionSuccess(\n            state,\n            { payload }: PayloadAction<SubscriptionResponse>\n        ) {\n            state.subscription.items = payload;\n            state.loading = false;\n        },\n        getSubscriptionFailure(state, { payload }: PayloadAction<unknown>) {\n            state.loading = false;\n            state.error = (payload as null) || null;\n        },\n        getActiveSubscription(state) {\n            state.loading = true;\n        },\n        getActiveSubscriptionSuccess(\n            state,\n            { payload }: PayloadAction<SubscriptionDTO>\n        ) {\n            state.subscription.active = {\n                ...payload,\n                terms:\n                    'FREE for 3 Products. Then just $0.99 per month after that.',\n            };\n            state.loading = false;\n        },\n        getActiveSubscriptionFailure(\n            state,\n            { payload }: PayloadAction<unknown>\n        ) {\n            state.loading = false;\n            state.error = (payload as null) || null;\n        },\n    },\n    extraReducers: () => {\n        // builder.addCase(openSettingsModal, (state, action) => {\n        //     state.profileModal = initialState.profileModal;\n        //, });\n    },\n});\n\nexport const {\n    switchToPlan,\n    getSubscription,\n    getSubscriptionSuccess,\n    getSubscriptionFailure,\n    getActiveSubscription,\n    getActiveSubscriptionSuccess,\n    getActiveSubscriptionFailure,\n} = subscriptionSlice.actions;\n\nexport default subscriptionSlice.reducer;\n","import { AppStateResponse } from '@api/app';\nimport { isMocksLocalMode } from '@api/mocks/mock-env';\nimport { AppStatus } from '@api/types/app';\nimport { intl } from '@contexts/LocaleContext';\nimport { AnyAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n    startLoading,\n    StateWithLoadingAndError,\n    stopLoading,\n} from './common/reducers';\nimport {\n    bulkEnable,\n    bulkEnableFailureByPlan,\n    openAssignProfileModal,\n    unassignProfile,\n} from './products';\nimport { startUninstallPreparationSuccess } from './uninstall';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { format } from 'date-fns-tz';\n\ninterface ConfirmationActions {\n    primary: string;\n    secondary: string;\n}\n\nexport enum CurrencyShopifyFormat {\n    Amount = 'amount',\n    AmountNoDecimals = 'amount_no_decimals',\n    AmountWithCommaSeparator = 'amount_with_comma_separator',\n    AmountNoDecimalsWithCommaSeparator = 'amount_no_decimals_with_comma_separator',\n    AmountWithApostropheSeparator = 'amount_with_apostrophe_separator',\n}\n\ninterface AppState extends StateWithLoadingAndError {\n    mock: boolean;\n    statePolling: boolean;\n    status: AppStatus | null;\n    money_format: string;\n    currency_code: string;\n    currency_symbol: string;\n    currency_shopify_format: CurrencyShopifyFormat;\n    timezone_offset: string;\n    toast: null | {\n        content: string;\n        duration?: number;\n        error?: boolean;\n    };\n    confirmation: {\n        open: boolean;\n        content: string;\n        warning?: true;\n        actions?: ConfirmationActions | false;\n    };\n    openedPopover: number | null;\n}\n\nconst initialState: AppState = {\n    loading: false,\n    error: null,\n    toast: null,\n    mock: isMocksLocalMode,\n    statePolling: false,\n    status: null,\n    money_format: '${amount}',\n    currency_code: 'USD',\n    currency_symbol: '$',\n    currency_shopify_format: CurrencyShopifyFormat.Amount,\n    timezone_offset: format(new Date(), 'XXX'),\n    confirmation: {\n        open: false,\n        content: '',\n        actions: {\n            primary: 'Yes',\n            secondary: 'No',\n        },\n    },\n    openedPopover: null,\n};\n\nconst appSlice = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        startLoading,\n        stopLoading,\n        toggleMock(state, { payload }: PayloadAction<boolean>) {\n            state.mock = payload;\n        },\n        toggleConfirmation(\n            state,\n            action: PayloadAction<Partial<AppState['confirmation']>>\n        ) {\n            state.confirmation = {\n                ...state.confirmation,\n                ...action.payload,\n                open: action.payload.open ?? true,\n            };\n        },\n        toggleToast(\n            state,\n            action: PayloadAction<NonNullable<AppState['toast']> | undefined>\n        ) {\n            if (action.payload) {\n                state.toast = {\n                    ...state.toast,\n                    ...action.payload,\n                    duration: action.payload.duration ?? 5000,\n                };\n            } else {\n                state.toast = initialState.toast;\n            }\n        },\n        handlePrimaryConfirmationAction(state) {\n            state.confirmation = initialState.confirmation;\n        },\n        handleSecondaryConfirmationAction(state) {\n            state.confirmation = initialState.confirmation;\n        },\n        startPollAppState(state) {\n            state.statePolling = true;\n        },\n        stopPollAppState(state) {\n            state.statePolling = false;\n        },\n        getAppState(state) {\n            state.loading = false;\n        },\n        getAppStateSuccess(\n            state,\n            { payload }: PayloadAction<AppStateResponse>\n        ) {\n            state.loading = false;\n            state.status = payload.app_status;\n            if (payload.money_format) {\n                const match = /\\{([\\w_]*)\\}/.exec(payload.money_format);\n\n                if (match && match.length) {\n                    state.money_format = payload.money_format;\n                    state.currency_shopify_format = match[1] as CurrencyShopifyFormat;\n                }\n            }\n            if (payload.currency_code) {\n                state.currency_code = payload.currency_code;\n            }\n            if (payload.timezone_offset) {\n                state.timezone_offset = payload.timezone_offset;\n            }\n            state.currency_symbol =\n                getSymbolFromCurrency(payload.currency_code) ??\n                state.currency_symbol;\n            state.statePolling = [\n                AppStatus.Active,\n                AppStatus.Uninstalled,\n            ].includes(payload.app_status);\n        },\n        getAppStateFailure(state, { payload }: PayloadAction<unknown>) {\n            state.loading = false;\n            state.error = (payload as string) || null;\n            state.statePolling = false;\n        },\n        openPopover(state, { payload }: PayloadAction<number | null>) {\n            state.openedPopover = payload;\n        },\n        closePopover(state, { payload }: PayloadAction<number | null>) {\n            if (state.openedPopover === payload) {\n                state.openedPopover = null;\n            }\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(startUninstallPreparationSuccess, (state, action) => {\n                state.status = AppStatus.PrepareToUninstallInProgress;\n            })\n            .addMatcher(\n                (action: AnyAction): action is any =>\n                    [openAssignProfileModal, unassignProfile, bulkEnable]\n                        .map((item) => item.toString())\n                        .includes(action.type),\n                (state, action) => {\n                    state.toast = initialState.toast;\n                }\n            );\n    },\n});\n\nexport const {\n    startLoading: startAppLoading,\n    stopLoading: stopAppLoading,\n    toggleMock,\n    toggleConfirmation,\n    toggleToast,\n    handlePrimaryConfirmationAction,\n    handleSecondaryConfirmationAction,\n    startPollAppState,\n    stopPollAppState,\n    getAppState,\n    getAppStateSuccess,\n    getAppStateFailure,\n    openPopover,\n    closePopover,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n"],"sourceRoot":""}